import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("http://example.com/", "", headerList34, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "Retrofit-", headerList34, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("http://example.com", "http://example.com", headerList34, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.util.List<retrofit.client.Header> headerList42 = request40.getHeaders();
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("Retrofit-", "http://example.com/", headerList42, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("Retrofit-", "hi!", headerList42, typedOutput45);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "Retrofit-", headerList42, typedOutput47);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request49 = restAdapter12.logAndReplaceRequest(request48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com" + "'", str41, "http://example.com");
        org.junit.Assert.assertNotNull(headerList42);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = restAdapter10.serializedObjectSupporter;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.RestAdapter.Builder builder2 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = builder2.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler4 = builder2.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel5 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean6 = logLevel5.log();
        builder2.logLevel = logLevel5;
        java.util.concurrent.Executor executor8 = builder2.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder10 = builder2.setServer("http://example.com/");
        retrofit.ErrorHandler errorHandler11 = builder2.errorHandler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder12.serializedObjectSupporter;
        retrofit.Server server16 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.Server server25 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter6();
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder29.serializedObjectSupporter;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler28, log31, logLevel33);
        retrofit.RestAdapter.Builder builder35 = builder12.setRequestInterceptor(requestInterceptor22);
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        builder35.logLevel = logLevel36;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString9();
        retrofit.Server server41 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder43 = builder38.setConverter((retrofit.converter.Converter) gsonConverter42);
        builder38.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.Server server47 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter6();
        java.lang.String str49 = serializedObjectSupporter45.deserializeObjectString2();
        java.lang.String str50 = serializedObjectSupporter45.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler51 = serializedObjectSupporter45.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder52 = builder38.setErrorHandler(errorHandler51);
        builder52.ensureSaneDefaults();
        java.util.concurrent.Executor executor54 = builder52.getcallbackExecutor();
        builder35.sethttpExecutor(executor54);
        java.util.concurrent.Executor executor56 = builder35.gethttpExecutor();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        retrofit.ErrorHandler errorHandler63 = builder57.errorHandler;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.Server server68 = builder64.server;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        java.lang.String str71 = serializedObjectSupporter70.deserializeObjectString9();
        retrofit.Server server72 = serializedObjectSupporter70.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder74 = builder69.setConverter((retrofit.converter.Converter) gsonConverter73);
        builder69.ensureSaneDefaults();
        java.util.concurrent.Executor executor76 = null;
        builder69.httpExecutor = executor76;
        retrofit.client.Client.Provider provider78 = builder69.getclientProvider();
        builder64.setclientProvider(provider78);
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter81 = builder80.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler82 = builder80.errorHandler;
        builder80.ensureSaneDefaults();
        retrofit.RestAdapter.Log log84 = builder80.log;
        retrofit.Profiler profiler85 = null;
        builder80.profiler = profiler85;
        retrofit.client.Client.Provider provider87 = builder80.getclientProvider();
        java.util.concurrent.Executor executor88 = builder80.callbackExecutor;
        builder64.callbackExecutor = executor88;
        builder57.sethttpExecutor(executor88);
        retrofit.RestAdapter.Builder builder91 = builder2.setExecutors(executor56, executor88);
        builder0.httpExecutor = executor88;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(serializedObjectSupporter3);
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertTrue("'" + logLevel5 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel5.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(executor8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Retrofit-Idle" + "'", str49, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertNotNull(executor56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(errorHandler63);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertNull(server68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(provider78);
        org.junit.Assert.assertNull(serializedObjectSupporter81);
        org.junit.Assert.assertNull(errorHandler82);
        org.junit.Assert.assertNotNull(log84);
        org.junit.Assert.assertNotNull(provider87);
        org.junit.Assert.assertNotNull(executor88);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("http://example.com/", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "Retrofit-", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList11, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.getBody();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.lang.String str20 = request17.getUrl();
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-Idle" + "'", str20, "Retrofit-Idle");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.Profiler profiler15 = restAdapter12.profiler;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(profiler15);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.Server server9 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder0.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter10.logLevel;
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.util.List<retrofit.client.Header> headerList29 = request28.getHeaders();
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("default", "default", headerList29, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList29, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("Retrofit-", "hi!", headerList29, typedOutput34);
        java.lang.String str36 = request35.getMethod();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request38 = restAdapter10.logAndReplaceRequest(request35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-" + "'", str36, "Retrofit-");
        org.junit.Assert.assertNull(typedOutput37);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.Log log40 = restAdapter38.log;
        retrofit.RestAdapter.Builder builder41 = builder14.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        log42.log("default");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.lang.String str14 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter10.requestInterceptor;
        retrofit.client.Client.Provider provider16 = restAdapter10.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-" + "'", str14, "Retrofit-");
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(provider16);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.Server server8 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter12.requestInterceptor;
        java.lang.String str14 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server15 = restAdapter12.server;
        java.lang.String str16 = restAdapter12.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider17 = restAdapter12.clientProvider;
        java.util.concurrent.Executor executor18 = restAdapter12.getcallbackExecutor();
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.RestAdapter.Log log42 = builder14.log;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.ErrorHandler errorHandler37 = builder23.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(errorHandler37);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString9();
        retrofit.Server server5 = serializedObjectSupporter3.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = builder2.setServer(server5);
        retrofit.Server server9 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter13.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder22.serializedObjectSupporter;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor15, (retrofit.converter.Converter) gsonConverter19, profiler20, errorHandler21, log24, logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean29 = logLevel28.log();
        restAdapter27.setLogLevel(logLevel28);
        retrofit.client.Client.Provider provider31 = restAdapter27.getclientProvider();
        java.lang.String str32 = restAdapter27.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log33 = restAdapter27.log;
        retrofit.RestAdapter.Builder builder34 = builder6.setLog(log33);
        retrofit.RestAdapter.Builder builder36 = builder34.setServer("http://example.com");
        java.util.concurrent.Executor executor37 = builder36.gethttpExecutor();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Server server11 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.LogLevel logLevel20 = null;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel20);
        java.lang.String str22 = restAdapter21.getIDLE_THREAD_NAME();
        retrofit.Server server23 = restAdapter21.server;
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
        retrofit.RestAdapter.Builder builder26 = builder0.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString9();
        retrofit.Server server30 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        builder27.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.Server server36 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter6();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString2();
        java.lang.String str39 = serializedObjectSupporter34.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler40 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder41 = builder27.setErrorHandler(errorHandler40);
        builder41.ensureSaneDefaults();
        java.util.concurrent.Executor executor43 = builder41.getcallbackExecutor();
        java.util.concurrent.Executor executor44 = builder41.callbackExecutor;
        retrofit.Server server47 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor53 = serializedObjectSupporter51.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString9();
        retrofit.Server server56 = serializedObjectSupporter54.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter6();
        retrofit.Profiler profiler58 = null;
        retrofit.ErrorHandler errorHandler59 = null;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = builder60.serializedObjectSupporter;
        retrofit.RestAdapter.Log log62 = retrofit.RestAdapter.Log.NONE;
        builder60.log = log62;
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter65 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor53, (retrofit.converter.Converter) gsonConverter57, profiler58, errorHandler59, log62, logLevel64);
        retrofit.Server server66 = restAdapter65.server;
        retrofit.RestAdapter.Log log67 = restAdapter65.log;
        retrofit.RestAdapter.Builder builder68 = builder41.setLog(log67);
        retrofit.RestAdapter.Log log69 = builder68.log;
        log69.log("http://example.com/");
        log69.log("");
        log69.log("http://example.com/");
        builder0.log = log69;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNull(serializedObjectSupporter61);
        org.junit.Assert.assertNotNull(log62);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(log67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(log69);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.RequestInterceptor requestInterceptor4 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(gsonConverter5);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        retrofit.Server server2 = new retrofit.Server("default", "default");
        java.lang.String str3 = server2.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.httpExecutor;
        java.util.concurrent.Executor executor16 = restAdapter12.httpExecutor;
        retrofit.ErrorHandler errorHandler17 = restAdapter12.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter12.new RestHandler();
        retrofit.Profiler profiler19 = restAdapter12.profiler;
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter12.new RestHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(profiler19);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        java.lang.String str94 = restAdapter91.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider95 = restAdapter91.getclientProvider();
        java.util.concurrent.Executor executor96 = restAdapter91.callbackExecutor;
        retrofit.RestAdapter.LogLevel logLevel97 = retrofit.RestAdapter.LogLevel.NONE;
        restAdapter91.logLevel = logLevel97;
        boolean boolean99 = logLevel97.log();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Retrofit-Idle" + "'", str94, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNull(executor96);
        org.junit.Assert.assertTrue("'" + logLevel97 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel97.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.Profiler profiler15 = restAdapter12.profiler;
        java.util.concurrent.Executor executor16 = restAdapter12.getcallbackExecutor();
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter12.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(requestInterceptor17);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.client.Client.Provider provider25 = restAdapter20.getclientProvider();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder19 = builder14.setServer("hi!");
        builder14.ensureSaneDefaults();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("http://example.com/", "Retrofit-", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.Log log40 = restAdapter38.log;
        retrofit.RestAdapter.Builder builder41 = builder14.setLog(log40);
        java.util.concurrent.Executor executor42 = builder41.httpExecutor;
        retrofit.Server server45 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder58.log = log60;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor51, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler57, log60, logLevel62);
        retrofit.RestAdapter.LogLevel logLevel64 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean65 = logLevel64.log();
        restAdapter63.setLogLevel(logLevel64);
        retrofit.client.Client.Provider provider67 = restAdapter63.getclientProvider();
        java.lang.String str68 = restAdapter63.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log69 = restAdapter63.log;
        retrofit.RestAdapter.Builder builder70 = builder41.setLog(log69);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-" + "'", str68, "Retrofit-");
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(builder70);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Server server11 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.LogLevel logLevel20 = null;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel20);
        java.lang.String str22 = restAdapter21.getIDLE_THREAD_NAME();
        retrofit.Server server23 = restAdapter21.server;
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
        retrofit.RestAdapter.Log log25 = builder0.log;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.Server server30 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString9();
        retrofit.Server server39 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log45, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder26.setRequestInterceptor(requestInterceptor36);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        builder49.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder57 = builder52.setConverter((retrofit.converter.Converter) gsonConverter56);
        builder52.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.Server server61 = serializedObjectSupporter59.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter6();
        java.lang.String str63 = serializedObjectSupporter59.deserializeObjectString2();
        java.lang.String str64 = serializedObjectSupporter59.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder66 = builder52.setErrorHandler(errorHandler65);
        builder66.ensureSaneDefaults();
        java.util.concurrent.Executor executor68 = builder66.getcallbackExecutor();
        builder49.sethttpExecutor(executor68);
        retrofit.client.Client.Provider provider70 = builder49.getclientProvider();
        retrofit.RestAdapter.Builder builder71 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter72 = builder71.serializedObjectSupporter;
        retrofit.RestAdapter.Log log73 = retrofit.RestAdapter.Log.NONE;
        builder71.log = log73;
        retrofit.Server server75 = builder71.server;
        java.util.concurrent.Executor executor76 = null;
        builder71.httpExecutor = executor76;
        retrofit.Server server80 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder81 = builder71.setServer(server80);
        retrofit.Server server82 = builder81.server;
        retrofit.RestAdapter.Builder builder83 = builder49.setServer(server82);
        retrofit.RestAdapter.Builder builder84 = builder0.setServer(server82);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Retrofit-Idle" + "'", str63, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(serializedObjectSupporter72);
        org.junit.Assert.assertNotNull(log73);
        org.junit.Assert.assertNull(server75);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = null;
        builder0.httpExecutor = executor7;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log10 = builder0.log;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(provider9);
        org.junit.Assert.assertNotNull(log10);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-Idle", "http://example.com", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "default", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", headerList13, typedOutput20);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "Retrofit-", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "http://example.com/", headerList19, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-", headerList19, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("http://example.com", "default", headerList19, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("Retrofit-", "http://example.com/", headerList19, typedOutput32);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.client.Client.Provider provider21 = restAdapter20.getclientProvider();
        retrofit.client.Client.Provider provider22 = restAdapter20.getclientProvider();
        java.util.concurrent.Executor executor23 = restAdapter20.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(executor23);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Server server11 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.LogLevel logLevel20 = null;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel20);
        java.lang.String str22 = restAdapter21.getIDLE_THREAD_NAME();
        retrofit.Server server23 = restAdapter21.server;
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
        retrofit.RestAdapter.Builder builder26 = builder0.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder27.log = log29;
        retrofit.Server server31 = builder27.server;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter33 = builder32.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.Server server36 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter6();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString2();
        java.lang.String str39 = serializedObjectSupporter34.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler40 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        builder32.errorHandler = errorHandler40;
        retrofit.RestAdapter.Builder builder42 = builder27.setErrorHandler(errorHandler40);
        retrofit.ErrorHandler errorHandler43 = builder27.errorHandler;
        builder0.errorHandler = errorHandler43;
        retrofit.client.Client client45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder46 = builder0.setClient(client45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(server31);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(errorHandler43);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter12.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter12.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.ErrorHandler errorHandler9 = builder0.errorHandler;
        retrofit.client.Client.Provider provider10 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        java.util.concurrent.Executor executor3 = builder2.gethttpExecutor();
        retrofit.Server server5 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider6 = null;
        java.util.concurrent.Executor executor7 = null;
        java.util.concurrent.Executor executor8 = null;
        retrofit.Server server11 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.Server server20 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter6();
        retrofit.Profiler profiler22 = null;
        retrofit.ErrorHandler errorHandler23 = null;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log26;
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor17, (retrofit.converter.Converter) gsonConverter21, profiler22, errorHandler23, log26, logLevel28);
        retrofit.Server server32 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider33 = null;
        java.util.concurrent.Executor executor34 = null;
        java.util.concurrent.Executor executor35 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor38 = serializedObjectSupporter36.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString9();
        retrofit.Server server41 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter6();
        retrofit.Profiler profiler43 = null;
        retrofit.ErrorHandler errorHandler44 = null;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder45.serializedObjectSupporter;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log47;
        retrofit.RestAdapter.LogLevel logLevel49 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter50 = new retrofit.RestAdapter(server32, provider33, executor34, executor35, requestInterceptor38, (retrofit.converter.Converter) gsonConverter42, profiler43, errorHandler44, log47, logLevel49);
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.Server server55 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor61, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler67, log70, logLevel72);
        retrofit.Server server76 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider77 = null;
        java.util.concurrent.Executor executor78 = null;
        java.util.concurrent.Executor executor79 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        java.lang.String str81 = serializedObjectSupporter80.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor82 = serializedObjectSupporter80.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString9();
        retrofit.Server server85 = serializedObjectSupporter83.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter83.deserializeObjectConverter6();
        retrofit.Profiler profiler87 = null;
        retrofit.ErrorHandler errorHandler88 = null;
        retrofit.RestAdapter.Builder builder89 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter90 = builder89.serializedObjectSupporter;
        retrofit.RestAdapter.Log log91 = retrofit.RestAdapter.Log.NONE;
        builder89.log = log91;
        retrofit.RestAdapter.LogLevel logLevel93 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter94 = new retrofit.RestAdapter(server76, provider77, executor78, executor79, requestInterceptor82, (retrofit.converter.Converter) gsonConverter86, profiler87, errorHandler88, log91, logLevel93);
        retrofit.RestAdapter restAdapter95 = new retrofit.RestAdapter(server5, provider6, executor7, executor8, requestInterceptor17, (retrofit.converter.Converter) gsonConverter42, profiler51, errorHandler52, log70, logLevel93);
        retrofit.RestAdapter.Builder builder96 = builder2.setLog(log70);
        retrofit.client.Client client97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder98 = builder96.setClient(client97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertTrue("'" + logLevel49 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel49.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "http://example.com/" + "'", str81, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "http://example.com/" + "'", str84, "http://example.com/");
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNull(serializedObjectSupporter90);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        java.util.concurrent.Executor executor37 = builder36.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter12.logLevel;
        retrofit.Server server18 = restAdapter12.getserver();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNotNull(server18);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.Server server39 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = builder52.serializedObjectSupporter;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log54;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor45, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler51, log54, logLevel56);
        retrofit.converter.Converter converter58 = restAdapter57.getconverter();
        retrofit.RestAdapter.LogLevel logLevel59 = restAdapter57.logLevel;
        retrofit.RestAdapter.Builder builder60 = builder36.setLogLevel(logLevel59);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter58);
        org.junit.Assert.assertTrue("'" + logLevel59 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel59.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        builder4.httpExecutor = executor24;
        builder0.httpExecutor = executor24;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString9();
        retrofit.Server server30 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder32 = builder27.setConverter((retrofit.converter.Converter) gsonConverter31);
        builder27.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.Server server36 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter6();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString2();
        java.lang.String str39 = serializedObjectSupporter34.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler40 = serializedObjectSupporter34.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder41 = builder27.setErrorHandler(errorHandler40);
        builder41.ensureSaneDefaults();
        java.util.concurrent.Executor executor43 = builder41.getcallbackExecutor();
        builder0.callbackExecutor = executor43;
        java.util.concurrent.Executor executor45 = builder0.gethttpExecutor();
        retrofit.Server server46 = builder0.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Retrofit-Idle" + "'", str38, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor43);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNull(server46);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.Profiler profiler25 = restAdapter20.getprofiler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(profiler25);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        java.lang.String str15 = request14.getUrl();
        java.lang.String str16 = request14.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com" + "'", str16, "http://example.com");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.Profiler profiler12 = restAdapter10.profiler;
        retrofit.ErrorHandler errorHandler13 = restAdapter10.geterrorHandler();
        retrofit.ErrorHandler errorHandler14 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider15 = restAdapter10.getclientProvider();
        java.lang.Throwable throwable16 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable16, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.Server server26 = restAdapter20.getserver();
        java.lang.String str27 = server26.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        retrofit.Server server18 = restAdapter12.getserver();
        retrofit.ErrorHandler errorHandler19 = restAdapter12.errorHandler;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNull(errorHandler19);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.Profiler profiler40 = null;
        builder14.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        builder14.log = log44;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.Server server49 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter6();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString2();
        java.lang.String str52 = serializedObjectSupporter47.deserializeObjectString4();
        java.lang.String str53 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.client.Response response54 = serializedObjectSupporter47.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder56 = builder14.setConverter((retrofit.converter.Converter) gsonConverter55);
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        java.lang.String str58 = serializedObjectSupporter57.deserializeObjectString9();
        retrofit.Server server59 = serializedObjectSupporter57.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter6();
        java.lang.String str61 = serializedObjectSupporter57.deserializeObjectString2();
        builder56.serializedObjectSupporter = serializedObjectSupporter57;
        java.lang.String str63 = serializedObjectSupporter57.deserializeObjectString3();
        java.lang.String str64 = serializedObjectSupporter57.deserializeObjectString10();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-Idle" + "'", str51, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(response54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com/" + "'", str58, "http://example.com/");
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Retrofit-Idle" + "'", str61, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.Server server44 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder57.serializedObjectSupporter;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor50, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler56, log59, logLevel61);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean64 = logLevel63.log();
        restAdapter62.setLogLevel(logLevel63);
        retrofit.converter.Converter converter66 = restAdapter62.getconverter();
        retrofit.RequestInterceptor requestInterceptor67 = restAdapter62.requestInterceptor;
        retrofit.RestAdapter.Builder builder68 = builder41.setRequestInterceptor(requestInterceptor67);
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        java.lang.String str71 = serializedObjectSupporter70.deserializeObjectString9();
        retrofit.Server server72 = serializedObjectSupporter70.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder74 = builder69.setConverter((retrofit.converter.Converter) gsonConverter73);
        builder69.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder76 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder78 = builder76.setLogLevel(logLevel77);
        java.util.concurrent.Executor executor79 = builder78.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean81 = logLevel80.log();
        builder78.logLevel = logLevel80;
        builder69.logLevel = logLevel80;
        builder41.logLevel = logLevel80;
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = builder41.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(converter66);
        org.junit.Assert.assertNotNull(requestInterceptor67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(executor79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(serializedObjectSupporter85);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        java.lang.String str38 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder40 = builder26.setErrorHandler(errorHandler39);
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.getcallbackExecutor();
        builder23.sethttpExecutor(executor42);
        retrofit.client.Client.Provider provider44 = null;
        builder23.clientProvider = provider44;
        retrofit.Profiler profiler46 = null;
        builder23.profiler = profiler46;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor42);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter5();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter2 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Log log4 = builder2.log;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter5 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(log4);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Server server11 = restAdapter10.server;
        org.junit.Assert.assertNull(server11);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.requestInterceptor;
        retrofit.client.Client.Provider provider13 = restAdapter10.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler17 = builder15.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel18 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean19 = logLevel18.log();
        builder15.logLevel = logLevel18;
        retrofit.Server server23 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString9();
        retrofit.Server server32 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter6();
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder36.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor29, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler35, log38, logLevel40);
        retrofit.Server server42 = restAdapter41.server;
        retrofit.RestAdapter.Log log43 = restAdapter41.log;
        retrofit.RestAdapter.RestHandler restHandler44 = restAdapter41.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter41.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.Server server49 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter6();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString2();
        java.lang.String str52 = serializedObjectSupporter47.deserializeObjectString4();
        java.lang.String str53 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.client.Response response54 = serializedObjectSupporter47.deserializeObjectResponse2();
        retrofit.client.Response response56 = restAdapter41.logAndReplaceResponse("", response54, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel57 = restAdapter41.logLevel;
        retrofit.RestAdapter.Builder builder58 = builder15.setLogLevel(logLevel57);
        restAdapter10.logLevel = logLevel57;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertTrue("'" + logLevel18 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel18.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-Idle" + "'", str51, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(response54);
        org.junit.Assert.assertNotNull(response56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.Server server7 = builder0.server;
        retrofit.RequestInterceptor requestInterceptor8 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server7);
        org.junit.Assert.assertNull(requestInterceptor8);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.geterrorHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString6();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString9();
        retrofit.Server server27 = serializedObjectSupporter25.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.Server server33 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString2();
        java.lang.String str36 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder38 = builder24.setErrorHandler(errorHandler37);
        builder38.ensureSaneDefaults();
        java.util.concurrent.Executor executor40 = builder38.getcallbackExecutor();
        java.util.concurrent.Executor executor41 = builder38.callbackExecutor;
        retrofit.Server server44 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder57.serializedObjectSupporter;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor50, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler56, log59, logLevel61);
        builder38.log = log59;
        builder0.log = log59;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(executor40);
        org.junit.Assert.assertNotNull(executor41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = restHandler15.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = builder2.errorHandler;
        retrofit.ErrorHandler errorHandler5 = builder2.errorHandler;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(errorHandler5);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.lang.String str12 = restAdapter10.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList24, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", (java.util.List<retrofit.client.Header>) headerList24, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("default", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput32);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = restAdapter10.logAndReplaceRequest(request33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Retrofit-Idle" + "'", str12, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder43 = builder14.setServer("hi!");
        retrofit.client.Client.Provider provider44 = builder14.getclientProvider();
        retrofit.client.Client.Provider provider45 = builder14.clientProvider;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(provider45);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        java.util.concurrent.Executor executor17 = restAdapter12.gethttpExecutor();
        retrofit.Server server18 = restAdapter12.getserver();
        java.lang.String str19 = server18.getapiUrl();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "Retrofit-", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "http://example.com/", headerList19, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-", headerList19, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-Idle", headerList19, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "Retrofit-Idle", headerList19, typedOutput32);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.logLevel;
        retrofit.client.Client.Provider provider15 = restAdapter10.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor19 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response20 = serializedObjectSupporter17.deserializeObjectResponse1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response22 = restAdapter10.logAndReplaceResponse("", response20, 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(response20);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class9 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response11 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(class9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertNotNull(response11);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("default", "default", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("Retrofit-", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "http://example.com", headerList17, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "default", headerList17, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("http://example.com/", "http://example.com", headerList17, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = request29.getBody();
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNull(typedOutput30);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.Server server2 = new retrofit.Server("hi!");
        builder0.server = server2;
        retrofit.client.Client.Provider provider4 = builder0.getclientProvider();
        org.junit.Assert.assertNull(provider4);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.Profiler profiler25 = restAdapter20.profiler;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler25);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        builder42.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.Server server51 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter49.deserializeObjectString2();
        java.lang.String str54 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder56 = builder42.setErrorHandler(errorHandler55);
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder58 = builder41.setClient(provider57);
        retrofit.client.Client.Provider provider59 = builder41.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder41.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider59);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("http://example.com/", "", headerList9, typedOutput10);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "Retrofit-", headerList9, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.getHeaders();
        java.lang.String str15 = request13.getMethod();
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.Profiler profiler2 = builder0.profiler;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(profiler2);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("default", "default", (java.util.List<retrofit.client.Header>) headerList5, typedOutput9);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-Idle", "http://example.com", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "default", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "http://example.com", headerList13, typedOutput20);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider18 = restAdapter10.getclientProvider();
        retrofit.Server server19 = restAdapter10.server;
        java.util.concurrent.Executor executor20 = restAdapter10.gethttpExecutor();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(executor20);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter91.logLevel;
        retrofit.RestAdapter.RestHandler restHandler95 = restAdapter91.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter96 = restHandler95.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter96);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class9 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.RequestInterceptor requestInterceptor12 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(class9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor12);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        restAdapter10.logLevel = logLevel14;
        java.lang.String str17 = restAdapter10.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList17, typedOutput21);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request23 = restAdapter10.logAndReplaceRequest(request22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor17 = serializedObjectSupporter15.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response18 = serializedObjectSupporter15.deserializeObjectResponse2();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response20 = restAdapter10.logAndReplaceResponse("", response18, 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor17);
        org.junit.Assert.assertNotNull(response18);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("default");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString2();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = builder39.setErrorHandler(errorHandler52);
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.getcallbackExecutor();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str68 = serializedObjectSupporter64.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder71 = builder57.setErrorHandler(errorHandler70);
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.getcallbackExecutor();
        builder53.sethttpExecutor(executor73);
        builder38.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor76 = builder38.callbackExecutor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        retrofit.RestAdapter.Builder builder87 = builder38.setClient(provider86);
        java.util.concurrent.Executor executor88 = builder87.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-Idle" + "'", str68, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(executor88);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("default");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString2();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = builder39.setErrorHandler(errorHandler52);
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.getcallbackExecutor();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str68 = serializedObjectSupporter64.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder71 = builder57.setErrorHandler(errorHandler70);
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.getcallbackExecutor();
        builder53.sethttpExecutor(executor73);
        builder38.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor76 = builder38.callbackExecutor;
        retrofit.converter.Converter converter77 = null;
        builder38.converter = converter77;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-Idle" + "'", str68, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor76);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder43 = builder14.setServer("hi!");
        retrofit.RestAdapter.Log log44 = builder43.log;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        builder45.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        java.lang.String str56 = serializedObjectSupporter52.deserializeObjectString2();
        java.lang.String str57 = serializedObjectSupporter52.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler58 = serializedObjectSupporter52.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder59 = builder45.setErrorHandler(errorHandler58);
        retrofit.client.Client.Provider provider60 = builder59.clientProvider;
        builder43.setclientProvider(provider60);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(provider60);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler13 = builder11.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        builder11.logLevel = logLevel14;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.Server server38 = restAdapter37.server;
        retrofit.RestAdapter.Log log39 = restAdapter37.log;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter37.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        java.lang.String str49 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.client.Response response50 = serializedObjectSupporter43.deserializeObjectResponse2();
        retrofit.client.Response response52 = restAdapter37.logAndReplaceResponse("", response50, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter37.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder11.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        java.lang.String str66 = serializedObjectSupporter62.deserializeObjectString2();
        java.lang.String str67 = serializedObjectSupporter62.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder69 = builder55.setErrorHandler(errorHandler68);
        builder69.ensureSaneDefaults();
        java.util.concurrent.Executor executor71 = builder69.getcallbackExecutor();
        java.util.concurrent.Executor executor72 = builder69.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        retrofit.client.Client.Provider provider74 = builder69.getclientProvider();
        retrofit.RestAdapter.Builder builder75 = builder54.setClient(provider74);
        retrofit.RestAdapter.Builder builder76 = builder0.setClient(provider74);
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = builder77.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler79 = builder77.errorHandler;
        builder77.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor81 = builder77.requestInterceptor;
        java.util.concurrent.Executor executor82 = builder77.getcallbackExecutor();
        builder0.setcallbackExecutor(executor82);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(response50);
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Retrofit-Idle" + "'", str66, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertNull(errorHandler79);
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertNotNull(executor82);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("hi!", "Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = builder14.setServer(server44);
        retrofit.Server server46 = builder45.server;
        retrofit.RequestInterceptor requestInterceptor47 = builder45.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(requestInterceptor47);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.Profiler profiler37 = builder23.profiler;
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = builder39.serializedObjectSupporter;
        retrofit.Server server43 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider44 = null;
        java.util.concurrent.Executor executor45 = null;
        java.util.concurrent.Executor executor46 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor49 = serializedObjectSupporter47.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.Server server52 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter6();
        retrofit.Profiler profiler54 = null;
        retrofit.ErrorHandler errorHandler55 = null;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = builder56.serializedObjectSupporter;
        retrofit.RestAdapter.Log log58 = retrofit.RestAdapter.Log.NONE;
        builder56.log = log58;
        retrofit.RestAdapter.LogLevel logLevel60 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter61 = new retrofit.RestAdapter(server43, provider44, executor45, executor46, requestInterceptor49, (retrofit.converter.Converter) gsonConverter53, profiler54, errorHandler55, log58, logLevel60);
        retrofit.RestAdapter.Builder builder62 = builder39.setRequestInterceptor(requestInterceptor49);
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        builder62.logLevel = logLevel63;
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString9();
        retrofit.Server server68 = serializedObjectSupporter66.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter66.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder70 = builder65.setConverter((retrofit.converter.Converter) gsonConverter69);
        builder65.ensureSaneDefaults();
        java.util.concurrent.Executor executor72 = null;
        builder65.httpExecutor = executor72;
        retrofit.client.Client.Provider provider74 = builder65.getclientProvider();
        retrofit.RestAdapter.Builder builder75 = builder62.setClient(provider74);
        retrofit.RestAdapter.Builder builder77 = builder62.setServer("default");
        retrofit.client.Client.Provider provider78 = builder62.clientProvider;
        builder23.clientProvider = provider78;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(serializedObjectSupporter40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNull(serializedObjectSupporter57);
        org.junit.Assert.assertNotNull(log58);
        org.junit.Assert.assertTrue("'" + logLevel60 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel60.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(provider78);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "Retrofit-", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com", "default", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-Idle", "", headerList15, typedOutput24);
        java.lang.Class<?> wildcardClass26 = request25.getClass();
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log12 = restAdapter10.log;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter10.requestInterceptor;
        retrofit.client.Client.Provider provider15 = restAdapter10.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter10.logLevel;
        retrofit.ErrorHandler errorHandler17 = restAdapter10.geterrorHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.Server server26 = restAdapter20.getserver();
        retrofit.Server server27 = restAdapter20.server;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(server27);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.lang.String str12 = restAdapter10.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor14 = restAdapter10.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        java.util.List<retrofit.client.Header> headerList23 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("http://example.com/", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.String str27 = request25.getUrl();
        java.lang.String str28 = request25.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request29 = restAdapter10.logAndReplaceRequest(request25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Retrofit-Idle" + "'", str12, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(response3);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.lang.String str12 = restAdapter10.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor14 = restAdapter10.callbackExecutor;
        retrofit.converter.Converter converter15 = restAdapter10.converter;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Retrofit-Idle" + "'", str12, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(converter15);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler13 = builder11.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        builder11.logLevel = logLevel14;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.Server server38 = restAdapter37.server;
        retrofit.RestAdapter.Log log39 = restAdapter37.log;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter37.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        java.lang.String str49 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.client.Response response50 = serializedObjectSupporter43.deserializeObjectResponse2();
        retrofit.client.Response response52 = restAdapter37.logAndReplaceResponse("", response50, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter37.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder11.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        java.lang.String str66 = serializedObjectSupporter62.deserializeObjectString2();
        java.lang.String str67 = serializedObjectSupporter62.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder69 = builder55.setErrorHandler(errorHandler68);
        builder69.ensureSaneDefaults();
        java.util.concurrent.Executor executor71 = builder69.getcallbackExecutor();
        java.util.concurrent.Executor executor72 = builder69.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        retrofit.client.Client.Provider provider74 = builder69.getclientProvider();
        retrofit.RestAdapter.Builder builder75 = builder54.setClient(provider74);
        retrofit.RestAdapter.Builder builder76 = builder0.setClient(provider74);
        retrofit.Profiler profiler77 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder78 = builder76.setProfiler(profiler77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(response50);
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Retrofit-Idle" + "'", str66, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.ErrorHandler errorHandler19 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(errorHandler19);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.Server server4 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str5 = server4.getDEFAULT_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "default" + "'", str5, "default");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter95 = restAdapter91.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNull(serializedObjectSupporter95);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        java.lang.String str21 = restAdapter20.getTHREAD_PREFIX();
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.util.List<retrofit.client.Header> headerList35 = request34.getHeaders();
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("http://example.com/", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "Retrofit-", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList35, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList43 = request41.getHeaders();
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("Retrofit-Idle", "http://example.com/", headerList43, typedOutput44);
        retrofit.client.Request request46 = restAdapter20.logAndReplaceRequest(request45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-" + "'", str21, "Retrofit-");
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNotNull(headerList47);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("default", "default", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-", "hi!", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "http://example.com/", headerList19, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("default", "http://example.com/", headerList19, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "", headerList19, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "", headerList19, typedOutput32);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse7();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter4 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter2);
        org.junit.Assert.assertNotNull(response3);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        log2.log("default");
        log2.log("");
        log2.log("http://example.com");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter91.getLogLevel();
        retrofit.RestAdapter.Log log96 = restAdapter91.log;
        java.util.concurrent.Executor executor97 = restAdapter91.gethttpExecutor();
        java.lang.String str98 = restAdapter91.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertNull(executor97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Retrofit-" + "'", str98, "Retrofit-");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "default", (java.util.List<retrofit.client.Header>) headerList11, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList11, typedOutput21);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        retrofit.Server server2 = new retrofit.Server("http://example.com/", "");
        java.lang.String str3 = server2.getName();
        java.lang.String str4 = server2.getapiUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.Profiler profiler17 = restAdapter12.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        retrofit.ErrorHandler errorHandler19 = restAdapter12.errorHandler;
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.util.List<retrofit.client.Header> headerList29 = request28.getHeaders();
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("default", "default", headerList29, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-Idle", headerList29, typedOutput32);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = restAdapter12.logAndReplaceRequest(request33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(errorHandler19);
        org.junit.Assert.assertNotNull(headerList29);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.Server server9 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        java.util.concurrent.Executor executor11 = builder10.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = builder19.log;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler25 = builder23.errorHandler;
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = builder23.log;
        retrofit.Profiler profiler28 = null;
        builder23.profiler = profiler28;
        retrofit.client.Client.Provider provider30 = builder23.getclientProvider();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.Server server34 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        builder31.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = null;
        builder31.httpExecutor = executor38;
        retrofit.client.Client.Provider provider40 = builder31.getclientProvider();
        builder23.setclientProvider(provider40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.Server server46 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log61;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor52, (retrofit.converter.Converter) gsonConverter56, profiler57, errorHandler58, log61, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder42.setRequestInterceptor(requestInterceptor52);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        builder65.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        builder82.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = builder82.getcallbackExecutor();
        builder65.sethttpExecutor(executor84);
        java.util.concurrent.Executor executor86 = builder65.gethttpExecutor();
        builder23.sethttpExecutor(executor86);
        builder19.callbackExecutor = executor86;
        builder0.httpExecutor = executor86;
        retrofit.converter.Converter converter90 = builder0.converter;
        retrofit.client.Client.Provider provider91 = builder0.clientProvider;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNull(converter90);
        org.junit.Assert.assertNotNull(provider91);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        builder23.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder23.httpExecutor;
        retrofit.Profiler profiler38 = null;
        builder23.profiler = profiler38;
        retrofit.converter.Converter converter40 = builder23.converter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(converter40);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        builder4.httpExecutor = executor24;
        builder0.httpExecutor = executor24;
        retrofit.RequestInterceptor requestInterceptor27 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = builder28.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler30 = builder28.errorHandler;
        builder28.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder37 = builder32.setConverter((retrofit.converter.Converter) gsonConverter36);
        builder32.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString9();
        retrofit.Server server41 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter6();
        java.lang.String str43 = serializedObjectSupporter39.deserializeObjectString2();
        java.lang.String str44 = serializedObjectSupporter39.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler45 = serializedObjectSupporter39.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder46 = builder32.setErrorHandler(errorHandler45);
        builder46.ensureSaneDefaults();
        java.util.concurrent.Executor executor48 = builder46.getcallbackExecutor();
        builder28.httpExecutor = executor48;
        retrofit.RequestInterceptor requestInterceptor50 = builder28.requestInterceptor;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.RestAdapter.Log log53 = retrofit.RestAdapter.Log.NONE;
        builder51.log = log53;
        retrofit.Server server55 = builder51.server;
        java.util.concurrent.Executor executor56 = null;
        builder51.httpExecutor = executor56;
        retrofit.Server server60 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder61 = builder51.setServer(server60);
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder64 = builder62.setLogLevel(logLevel63);
        retrofit.converter.Converter converter65 = builder64.converter;
        retrofit.RestAdapter.Builder builder66 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = builder66.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler68 = builder66.errorHandler;
        builder66.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler70 = builder66.errorHandler;
        retrofit.RestAdapter.Builder builder71 = builder64.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Builder builder72 = builder61.setErrorHandler(errorHandler70);
        retrofit.RestAdapter.Builder builder73 = builder28.setErrorHandler(errorHandler70);
        builder0.errorHandler = errorHandler70;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = builder75.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler77 = builder75.errorHandler;
        builder75.ensureSaneDefaults();
        retrofit.RestAdapter.Log log79 = builder75.log;
        retrofit.Profiler profiler80 = null;
        builder75.profiler = profiler80;
        retrofit.client.Client.Provider provider82 = builder75.getclientProvider();
        java.util.concurrent.Executor executor83 = builder75.callbackExecutor;
        builder0.httpExecutor = executor83;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter85 = builder0.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNull(serializedObjectSupporter29);
        org.junit.Assert.assertNull(errorHandler30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(executor48);
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNull(server55);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(serializedObjectSupporter67);
        org.junit.Assert.assertNull(errorHandler68);
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNull(serializedObjectSupporter76);
        org.junit.Assert.assertNull(errorHandler77);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNotNull(executor83);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter10.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.Server server18 = restAdapter10.getserver();
        retrofit.client.Client.Provider provider19 = restAdapter10.getclientProvider();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        retrofit.Server server23 = restAdapter20.getserver();
        java.util.concurrent.Executor executor24 = restAdapter20.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.logLevel;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("Retrofit-", "default", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        retrofit.Server server23 = restAdapter20.getserver();
        java.util.concurrent.Executor executor24 = restAdapter20.getcallbackExecutor();
        retrofit.converter.Converter converter25 = restAdapter20.converter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNotNull(converter25);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertNotNull(gsonConverter11);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("hi!", "hi!", headerList2, typedOutput3);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString6();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(response5);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        retrofit.Server server17 = builder14.server;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNull(server17);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider14 = restAdapter10.getclientProvider();
        retrofit.client.Client.Provider provider15 = restAdapter10.getclientProvider();
        retrofit.Server server16 = restAdapter10.getserver();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(server16);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        retrofit.Profiler profiler17 = null;
        builder14.profiler = profiler17;
        retrofit.Server server19 = null;
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.RequestInterceptor requestInterceptor23 = null;
        retrofit.converter.Converter converter24 = null;
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Log log27 = null;
        retrofit.RestAdapter.LogLevel logLevel28 = null;
        retrofit.RestAdapter restAdapter29 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor23, converter24, profiler25, errorHandler26, log27, logLevel28);
        retrofit.RestAdapter.RestHandler restHandler30 = restAdapter29.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler31 = restAdapter29.new RestHandler();
        java.lang.String str32 = restAdapter29.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean34 = logLevel33.log();
        restAdapter29.logLevel = logLevel33;
        retrofit.RestAdapter.Builder builder36 = builder14.setLogLevel(logLevel33);
        retrofit.client.Client.Provider provider37 = builder14.getclientProvider();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(provider37);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter10.requestInterceptor;
        retrofit.Profiler profiler17 = restAdapter10.getprofiler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(profiler17);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        retrofit.Server server2 = new retrofit.Server("Retrofit-Idle", "default");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList13, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "Retrofit-", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("Retrofit-Idle", "default", headerList19, typedOutput22);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.ErrorHandler errorHandler25 = restAdapter20.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter20.new RestHandler();
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList36, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", (java.util.List<retrofit.client.Header>) headerList36, typedOutput42);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList36, typedOutput44);
        retrofit.client.Request request46 = restAdapter20.logAndReplaceRequest(request45);
        retrofit.ErrorHandler errorHandler47 = restAdapter20.geterrorHandler();
        retrofit.Profiler profiler48 = restAdapter20.profiler;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = builder49.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler51 = builder49.errorHandler;
        builder49.ensureSaneDefaults();
        retrofit.RestAdapter.Log log53 = builder49.log;
        retrofit.Profiler profiler54 = null;
        builder49.profiler = profiler54;
        retrofit.client.Client.Provider provider56 = builder49.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel57 = builder49.logLevel;
        boolean boolean58 = logLevel57.log();
        restAdapter20.logLevel = logLevel57;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNull(errorHandler47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNull(serializedObjectSupporter50);
        org.junit.Assert.assertNull(errorHandler51);
        org.junit.Assert.assertNotNull(log53);
        org.junit.Assert.assertNotNull(provider56);
        org.junit.Assert.assertTrue("'" + logLevel57 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel57.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("default", "default", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "hi!", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "http://example.com/", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-Idle", "hi!", headerList15, typedOutput24);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.ErrorHandler errorHandler42 = builder14.errorHandler;
        retrofit.Profiler profiler43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder44 = builder14.setProfiler(profiler43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(errorHandler42);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.Server server4 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.Server server10 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider11 = null;
        java.util.concurrent.Executor executor12 = null;
        java.util.concurrent.Executor executor13 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor16 = serializedObjectSupporter14.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        retrofit.Profiler profiler21 = null;
        retrofit.ErrorHandler errorHandler22 = null;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log25;
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter28 = new retrofit.RestAdapter(server10, provider11, executor12, executor13, requestInterceptor16, (retrofit.converter.Converter) gsonConverter20, profiler21, errorHandler22, log25, logLevel27);
        retrofit.Server server31 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString9();
        retrofit.Server server40 = serializedObjectSupporter38.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter6();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = builder44.serializedObjectSupporter;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log46;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log46, logLevel48);
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.Server server54 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider55 = null;
        java.util.concurrent.Executor executor56 = null;
        java.util.concurrent.Executor executor57 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor60 = serializedObjectSupporter58.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        java.lang.String str62 = serializedObjectSupporter61.deserializeObjectString9();
        retrofit.Server server63 = serializedObjectSupporter61.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter64 = serializedObjectSupporter61.deserializeObjectConverter6();
        retrofit.Profiler profiler65 = null;
        retrofit.ErrorHandler errorHandler66 = null;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = builder67.serializedObjectSupporter;
        retrofit.RestAdapter.Log log69 = retrofit.RestAdapter.Log.NONE;
        builder67.log = log69;
        retrofit.RestAdapter.LogLevel logLevel71 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter72 = new retrofit.RestAdapter(server54, provider55, executor56, executor57, requestInterceptor60, (retrofit.converter.Converter) gsonConverter64, profiler65, errorHandler66, log69, logLevel71);
        retrofit.Server server75 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider76 = null;
        java.util.concurrent.Executor executor77 = null;
        java.util.concurrent.Executor executor78 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor81 = serializedObjectSupporter79.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter82 = new retrofit.SerializedObjectSupporter();
        java.lang.String str83 = serializedObjectSupporter82.deserializeObjectString9();
        retrofit.Server server84 = serializedObjectSupporter82.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter85 = serializedObjectSupporter82.deserializeObjectConverter6();
        retrofit.Profiler profiler86 = null;
        retrofit.ErrorHandler errorHandler87 = null;
        retrofit.RestAdapter.Builder builder88 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter89 = builder88.serializedObjectSupporter;
        retrofit.RestAdapter.Log log90 = retrofit.RestAdapter.Log.NONE;
        builder88.log = log90;
        retrofit.RestAdapter.LogLevel logLevel92 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter93 = new retrofit.RestAdapter(server75, provider76, executor77, executor78, requestInterceptor81, (retrofit.converter.Converter) gsonConverter85, profiler86, errorHandler87, log90, logLevel92);
        retrofit.RestAdapter restAdapter94 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor16, (retrofit.converter.Converter) gsonConverter41, profiler50, errorHandler51, log69, logLevel92);
        retrofit.RestAdapter.Builder builder95 = builder0.setServer(server4);
        java.lang.String str96 = server4.getUrl();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNull(serializedObjectSupporter45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "http://example.com/" + "'", str62, "http://example.com/");
        org.junit.Assert.assertNotNull(server63);
        org.junit.Assert.assertNotNull(gsonConverter64);
        org.junit.Assert.assertNull(serializedObjectSupporter68);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertTrue("'" + logLevel71 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel71.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "http://example.com/" + "'", str83, "http://example.com/");
        org.junit.Assert.assertNotNull(server84);
        org.junit.Assert.assertNotNull(gsonConverter85);
        org.junit.Assert.assertNull(serializedObjectSupporter89);
        org.junit.Assert.assertNotNull(log90);
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("http://example.com/", "default", headerList9, typedOutput12);
        java.util.List<retrofit.client.Header> headerList14 = request13.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = request13.getBody();
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter12.requestInterceptor;
        java.lang.String str14 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server15 = restAdapter12.server;
        java.lang.String str16 = restAdapter12.getTHREAD_PREFIX();
        retrofit.client.Client.Provider provider17 = restAdapter12.clientProvider;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter12.requestInterceptor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = restAdapter12.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.Server server24 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.Server server33 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log39;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor30, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler36, log39, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder20.setRequestInterceptor(requestInterceptor30);
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        builder43.logLevel = logLevel44;
        restAdapter12.logLevel = logLevel44;
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(requestInterceptor18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.converter.Converter converter21 = restAdapter20.getconverter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter20.logLevel;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        java.util.concurrent.Executor executor24 = restAdapter20.httpExecutor;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor24);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString9();
        retrofit.Server server5 = serializedObjectSupporter3.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = builder2.setServer(server5);
        retrofit.converter.Converter converter7 = builder2.converter;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(converter7);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Log log14 = restAdapter10.log;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(log14);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = restAdapter12.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel20 = restAdapter12.logLevel;
        java.lang.String str21 = restAdapter12.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(logLevel20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.List<retrofit.client.Header> headerList28 = null;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        java.util.List<retrofit.client.Header> headerList31 = request30.getHeaders();
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("http://example.com/", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.String str35 = request33.getUrl();
        java.lang.String str36 = request33.getUrl();
        retrofit.client.Request request37 = restAdapter20.logAndReplaceRequest(request33);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(request37);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean11 = logLevel10.log();
        builder7.logLevel = logLevel10;
        retrofit.Server server14 = new retrofit.Server("hi!");
        builder7.server = server14;
        builder0.server = server14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        java.lang.String str23 = serializedObjectSupporter17.deserializeObjectString2();
        retrofit.client.Response response24 = serializedObjectSupporter17.deserializeObjectResponse7();
        java.lang.String str25 = serializedObjectSupporter17.deserializeObjectString3();
        java.lang.String str26 = serializedObjectSupporter17.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor27 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder29 = builder0.setErrorHandler(errorHandler28);
        retrofit.client.Client client30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder31 = builder0.setClient(client30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-Idle" + "'", str23, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-" + "'", str26, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor27);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log95 = restAdapter91.log;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log95);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class9 = serializedObjectSupporter0.deserializeObjectClass1();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString10();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString9();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(class9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.Server server9 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = builder10.server;
        retrofit.Server server12 = builder10.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(server12);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter12.new RestHandler();
        java.util.concurrent.Executor executor18 = restAdapter12.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(executor18);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.ErrorHandler errorHandler4 = builder2.errorHandler;
        retrofit.client.Client.Provider provider5 = builder2.getclientProvider();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(errorHandler4);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        java.lang.String str38 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder40 = builder26.setErrorHandler(errorHandler39);
        builder40.ensureSaneDefaults();
        java.util.concurrent.Executor executor42 = builder40.getcallbackExecutor();
        builder23.sethttpExecutor(executor42);
        retrofit.client.Client.Provider provider44 = builder23.getclientProvider();
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = builder45.serializedObjectSupporter;
        retrofit.RestAdapter.Log log47 = retrofit.RestAdapter.Log.NONE;
        builder45.log = log47;
        retrofit.Server server49 = builder45.server;
        java.util.concurrent.Executor executor50 = null;
        builder45.httpExecutor = executor50;
        retrofit.Server server54 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder55 = builder45.setServer(server54);
        retrofit.Server server56 = builder55.server;
        retrofit.RestAdapter.Builder builder57 = builder23.setServer(server56);
        java.util.concurrent.Executor executor58 = builder23.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(serializedObjectSupporter46);
        org.junit.Assert.assertNotNull(log47);
        org.junit.Assert.assertNull(server49);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor58);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        java.lang.String str94 = restAdapter91.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider95 = restAdapter91.getclientProvider();
        java.util.concurrent.Executor executor96 = restAdapter91.callbackExecutor;
        java.util.concurrent.Executor executor97 = restAdapter91.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Retrofit-Idle" + "'", str94, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNull(executor96);
        org.junit.Assert.assertNull(executor97);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        retrofit.Server server1 = new retrofit.Server("Retrofit-Idle");
        java.lang.String str2 = server1.getDEFAULT_NAME();
        java.lang.String str3 = server1.name;
        java.lang.String str4 = server1.name;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString9();
        retrofit.Server server5 = serializedObjectSupporter3.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = builder2.setServer(server5);
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean11 = logLevel10.log();
        builder7.logLevel = logLevel10;
        retrofit.Server server14 = new retrofit.Server("hi!");
        builder7.server = server14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor18 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response19 = serializedObjectSupporter16.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder21 = builder7.setConverter((retrofit.converter.Converter) gsonConverter20);
        retrofit.RestAdapter.Builder builder22 = builder2.setConverter((retrofit.converter.Converter) gsonConverter20);
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor18);
        org.junit.Assert.assertNotNull(response19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        builder14.log = log35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        java.lang.String str44 = serializedObjectSupporter40.deserializeObjectString2();
        java.lang.String str45 = serializedObjectSupporter40.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.Server server47 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        builder14.errorHandler = errorHandler49;
        retrofit.Server server51 = builder14.server;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-Idle" + "'", str44, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNull(server51);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        retrofit.Server server2 = new retrofit.Server("http://example.com/", "");
        java.lang.String str3 = server2.getName();
        java.lang.String str4 = server2.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder15 = builder13.setLogLevel(logLevel14);
        java.util.concurrent.Executor executor16 = builder15.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel17 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean18 = logLevel17.log();
        builder15.logLevel = logLevel17;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.setLogLevel(logLevel17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("http://example.com/", "", headerList9, typedOutput10);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "Retrofit-", headerList9, typedOutput12);
        java.lang.String str14 = request13.getMethod();
        java.lang.String str15 = request13.getUrl();
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-" + "'", str15, "Retrofit-");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("default", "default", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "http://example.com", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-Idle", "", headerList11, typedOutput16);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter10 = serializedObjectSupporter0.deserializeObjectLogLevel2();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(gsonConverter6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "http://example.com", headerList9, typedOutput10);
        java.util.List<retrofit.client.Header> headerList12 = request11.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("Retrofit-Idle", "http://example.com", headerList12, typedOutput13);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString5();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString6();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter9 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        retrofit.Profiler profiler18 = null;
        builder0.profiler = profiler18;
        retrofit.Server server22 = new retrofit.Server("Retrofit-", "http://example.com/");
        builder0.server = server22;
        retrofit.Profiler profiler24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder25 = builder0.setProfiler(profiler24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = null;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        java.lang.String str27 = restAdapter24.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean29 = logLevel28.log();
        restAdapter24.logLevel = logLevel28;
        restAdapter10.logLevel = logLevel28;
        boolean boolean32 = logLevel28.log();
        boolean boolean33 = logLevel28.log();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.LogLevel logLevel93 = restAdapter91.getLogLevel();
        java.util.concurrent.Executor executor94 = restAdapter91.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel93 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel93.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor94);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(gsonConverter4);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.SerializedObjectSupporter serializedObjectSupporter3 = new retrofit.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString9();
        retrofit.Server server5 = serializedObjectSupporter3.deserializeObjectServer1();
        retrofit.RestAdapter.Builder builder6 = builder2.setServer(server5);
        retrofit.Server server9 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider10 = null;
        java.util.concurrent.Executor executor11 = null;
        java.util.concurrent.Executor executor12 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor15 = serializedObjectSupporter13.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Builder builder22 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = builder22.serializedObjectSupporter;
        retrofit.RestAdapter.Log log24 = retrofit.RestAdapter.Log.NONE;
        builder22.log = log24;
        retrofit.RestAdapter.LogLevel logLevel26 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter27 = new retrofit.RestAdapter(server9, provider10, executor11, executor12, requestInterceptor15, (retrofit.converter.Converter) gsonConverter19, profiler20, errorHandler21, log24, logLevel26);
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean29 = logLevel28.log();
        restAdapter27.setLogLevel(logLevel28);
        retrofit.client.Client.Provider provider31 = restAdapter27.getclientProvider();
        java.lang.String str32 = restAdapter27.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log33 = restAdapter27.log;
        retrofit.RestAdapter.Builder builder34 = builder6.setLog(log33);
        retrofit.Server server37 = new retrofit.Server("Retrofit-", "http://example.com/");
        builder34.server = server37;
        java.lang.String str39 = server37.getapiUrl();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(log24);
        org.junit.Assert.assertTrue("'" + logLevel26 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel26.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-" + "'", str32, "Retrofit-");
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-" + "'", str39, "Retrofit-");
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        builder4.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        java.lang.String str15 = serializedObjectSupporter11.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder18 = builder4.setErrorHandler(errorHandler17);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.getcallbackExecutor();
        builder0.httpExecutor = executor20;
        retrofit.RequestInterceptor requestInterceptor22 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log25;
        retrofit.Server server27 = builder23.server;
        java.util.concurrent.Executor executor28 = null;
        builder23.httpExecutor = executor28;
        retrofit.Server server32 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder33 = builder23.setServer(server32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.converter.Converter converter37 = builder36.converter;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder38.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler40 = builder38.errorHandler;
        builder38.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler42 = builder38.errorHandler;
        retrofit.RestAdapter.Builder builder43 = builder36.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder44 = builder33.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder45 = builder0.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder46 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.Server server49 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder51 = builder46.setConverter((retrofit.converter.Converter) gsonConverter50);
        builder46.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        java.lang.String str57 = serializedObjectSupporter53.deserializeObjectString2();
        java.lang.String str58 = serializedObjectSupporter53.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler59 = serializedObjectSupporter53.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder60 = builder46.setErrorHandler(errorHandler59);
        retrofit.client.Client.Provider provider61 = builder60.clientProvider;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter63 = builder62.converter;
        retrofit.client.Client.Provider provider64 = null;
        builder62.setclientProvider(provider64);
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = builder67.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler69 = builder67.errorHandler;
        builder67.ensureSaneDefaults();
        retrofit.RestAdapter.Log log71 = builder67.log;
        retrofit.Profiler profiler72 = null;
        builder67.profiler = profiler72;
        retrofit.client.Client.Provider provider74 = builder67.getclientProvider();
        java.util.concurrent.Executor executor75 = builder67.callbackExecutor;
        retrofit.Profiler profiler76 = builder67.profiler;
        retrofit.client.Client.Provider provider77 = builder67.getclientProvider();
        retrofit.RestAdapter.Builder builder78 = builder62.setClient(provider77);
        builder60.clientProvider = provider77;
        retrofit.RestAdapter.Builder builder80 = builder0.setClient(provider77);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(errorHandler40);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Retrofit-Idle" + "'", str57, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com/" + "'", str58, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(provider61);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertNull(serializedObjectSupporter68);
        org.junit.Assert.assertNull(errorHandler69);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNull(profiler76);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel17 = restAdapter12.logLevel;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter12.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(logLevel17);
        org.junit.Assert.assertNull(requestInterceptor18);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.client.Client.Provider provider3 = null;
        builder2.clientProvider = provider3;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString8();
        java.lang.String str7 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter5.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.client.Client client10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder2.setClient(client10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        java.util.concurrent.Executor executor18 = restAdapter12.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = restAdapter12.serializedObjectSupporter;
        retrofit.client.Client.Provider provider20 = restAdapter12.clientProvider;
        retrofit.client.Client.Provider provider21 = restAdapter12.clientProvider;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(provider21);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler18 = builder16.errorHandler;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = builder16.log;
        retrofit.Profiler profiler21 = null;
        builder16.profiler = profiler21;
        retrofit.client.Client.Provider provider23 = builder16.getclientProvider();
        java.util.concurrent.Executor executor24 = builder16.callbackExecutor;
        builder0.callbackExecutor = executor24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler28 = builder26.errorHandler;
        builder26.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = builder30.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler32 = builder30.errorHandler;
        builder30.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder39 = builder34.setConverter((retrofit.converter.Converter) gsonConverter38);
        builder34.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString9();
        retrofit.Server server43 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter6();
        java.lang.String str45 = serializedObjectSupporter41.deserializeObjectString2();
        java.lang.String str46 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler47 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder48 = builder34.setErrorHandler(errorHandler47);
        builder48.ensureSaneDefaults();
        java.util.concurrent.Executor executor50 = builder48.getcallbackExecutor();
        builder30.httpExecutor = executor50;
        builder26.httpExecutor = executor50;
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString9();
        retrofit.Server server56 = serializedObjectSupporter54.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder58 = builder53.setConverter((retrofit.converter.Converter) gsonConverter57);
        builder53.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString9();
        retrofit.Server server62 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter6();
        java.lang.String str64 = serializedObjectSupporter60.deserializeObjectString2();
        java.lang.String str65 = serializedObjectSupporter60.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler66 = serializedObjectSupporter60.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder67 = builder53.setErrorHandler(errorHandler66);
        builder67.ensureSaneDefaults();
        java.util.concurrent.Executor executor69 = builder67.getcallbackExecutor();
        builder26.callbackExecutor = executor69;
        java.util.concurrent.Executor executor71 = builder26.gethttpExecutor();
        builder0.httpExecutor = executor71;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertNull(errorHandler28);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertNull(errorHandler32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Retrofit-Idle" + "'", str64, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(executor71);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        java.lang.String str17 = restAdapter10.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler18 = restAdapter10.geterrorHandler();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Retrofit-" + "'", str17, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler18);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler4 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.Server server14 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter6();
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        java.lang.String str17 = serializedObjectSupporter12.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter12.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder19 = builder5.setErrorHandler(errorHandler18);
        builder19.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.Server server24 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder26 = builder21.setConverter((retrofit.converter.Converter) gsonConverter25);
        builder21.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString9();
        retrofit.Server server30 = serializedObjectSupporter28.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter31 = serializedObjectSupporter28.deserializeObjectConverter6();
        java.lang.String str32 = serializedObjectSupporter28.deserializeObjectString2();
        java.lang.String str33 = serializedObjectSupporter28.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler34 = serializedObjectSupporter28.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder35 = builder21.setErrorHandler(errorHandler34);
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        java.lang.String str40 = serializedObjectSupporter36.deserializeObjectString2();
        java.lang.String str41 = serializedObjectSupporter36.deserializeObjectString4();
        java.lang.String str42 = serializedObjectSupporter36.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter36.deserializeObjectConverter7();
        builder35.converter = gsonConverter43;
        retrofit.client.Client.Provider provider45 = builder35.clientProvider;
        builder19.setclientProvider(provider45);
        builder0.setclientProvider(provider45);
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder0.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-Idle" + "'", str16, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(server30);
        org.junit.Assert.assertNotNull(gsonConverter31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Retrofit-Idle" + "'", str32, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-Idle" + "'", str40, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(provider45);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = null;
        retrofit.client.Request request9 = new retrofit.client.Request("hi!", "http://example.com", headerList7, typedOutput8);
        retrofit.mime.TypedOutput typedOutput10 = request9.getBody();
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.Profiler profiler25 = restAdapter20.getprofiler();
        retrofit.client.Request request26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request27 = restAdapter20.logAndReplaceRequest(request26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(profiler25);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.RestHandler restHandler21 = restAdapter20.new RestHandler();
        retrofit.client.Client.Provider provider22 = restAdapter20.getclientProvider();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider22);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = restAdapter12.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter12.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = restHandler19.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel2 = null;
        builder0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder5.errorHandler = errorHandler13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.Server server24 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter6();
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter22.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder29 = builder15.setErrorHandler(errorHandler28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = builder30.serializedObjectSupporter;
        retrofit.Server server34 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString9();
        retrofit.Server server43 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter6();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder47.serializedObjectSupporter;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log49, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder30.setRequestInterceptor(requestInterceptor40);
        builder29.requestInterceptor = requestInterceptor40;
        builder5.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = builder56.serializedObjectSupporter;
        retrofit.Server server60 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        java.lang.String str68 = serializedObjectSupporter67.deserializeObjectString9();
        retrofit.Server server69 = serializedObjectSupporter67.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter6();
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = builder73.serializedObjectSupporter;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        builder73.log = log75;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor66, (retrofit.converter.Converter) gsonConverter70, profiler71, errorHandler72, log75, logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder56.setRequestInterceptor(requestInterceptor66);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        builder79.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString9();
        retrofit.Server server85 = serializedObjectSupporter83.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter83.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder87 = builder82.setConverter((retrofit.converter.Converter) gsonConverter86);
        builder82.ensureSaneDefaults();
        java.util.concurrent.Executor executor89 = null;
        builder82.httpExecutor = executor89;
        retrofit.client.Client.Provider provider91 = builder82.getclientProvider();
        builder79.clientProvider = provider91;
        retrofit.RestAdapter.Builder builder93 = builder5.setClient(provider91);
        builder0.setclientProvider(provider91);
        retrofit.RestAdapter.Builder builder96 = builder0.setServer("http://example.com");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(serializedObjectSupporter57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNull(serializedObjectSupporter74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "http://example.com/" + "'", str84, "http://example.com/");
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(provider91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder96);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.converter.GsonConverter gsonConverter2 = serializedObjectSupporter0.deserializeObjectConverter3();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter3 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(gsonConverter2);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.Server server25 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter6();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString2();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter23.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder30 = builder16.setErrorHandler(errorHandler29);
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.Server server33 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString2();
        java.lang.String str36 = serializedObjectSupporter31.deserializeObjectString4();
        java.lang.String str37 = serializedObjectSupporter31.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter31.deserializeObjectConverter7();
        builder30.converter = gsonConverter38;
        retrofit.client.Client.Provider provider40 = builder30.clientProvider;
        builder14.setclientProvider(provider40);
        retrofit.converter.Converter converter42 = builder14.converter;
        retrofit.ErrorHandler errorHandler43 = builder14.errorHandler;
        retrofit.Server server44 = builder14.server;
        retrofit.Profiler profiler45 = null;
        builder14.profiler = profiler45;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-Idle" + "'", str27, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNull(server44);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter7 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        retrofit.client.Header[] headerArray12 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList13 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList13, headerArray12);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList13, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("http://example.com", "hi!", (java.util.List<retrofit.client.Header>) headerList13, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("default", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList13, typedOutput23);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "Retrofit-", (java.util.List<retrofit.client.Header>) headerList13, typedOutput25);
        org.junit.Assert.assertNotNull(headerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.lang.String str14 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter10.requestInterceptor;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-" + "'", str14, "Retrofit-");
        org.junit.Assert.assertNull(requestInterceptor15);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.Profiler profiler12 = restAdapter10.profiler;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder0.serializedObjectSupporter;
        retrofit.client.Client client8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder9 = builder0.setClient(client8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter10.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.converter.Converter converter15 = restAdapter10.getconverter();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(converter15);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        java.util.concurrent.Executor executor25 = builder22.callbackExecutor;
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Server server47 = restAdapter46.server;
        retrofit.RestAdapter.Log log48 = restAdapter46.log;
        retrofit.RestAdapter.Builder builder49 = builder22.setLog(log48);
        retrofit.RestAdapter.Log log50 = builder49.log;
        log50.log("");
        retrofit.RestAdapter.Builder builder53 = builder0.setLog(log50);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter54 = builder53.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(executor25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(log48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.converter.Converter converter42 = builder41.converter;
        retrofit.ErrorHandler errorHandler43 = builder41.errorHandler;
        retrofit.RestAdapter restAdapter44 = builder41.build();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertNotNull(errorHandler43);
        org.junit.Assert.assertNotNull(restAdapter44);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-Idle", "http://example.com", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "default", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("default", "Retrofit-Idle", headerList13, typedOutput20);
        java.lang.String str22 = request21.getMethod();
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "default" + "'", str22, "default");
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter20.new RestHandler();
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        java.util.List<retrofit.client.Header> headerList42 = request41.getHeaders();
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("default", "default", headerList42, typedOutput43);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList42, typedOutput45);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("Retrofit-", "hi!", headerList42, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "http://example.com/", headerList42, typedOutput49);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "Retrofit-", headerList42, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        retrofit.mime.TypedOutput typedOutput54 = request52.getBody();
        java.lang.String str55 = request52.getUrl();
        java.lang.String str56 = request52.getMethod();
        retrofit.client.Request request57 = restAdapter20.logAndReplaceRequest(request52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-" + "'", str53, "Retrofit-");
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-" + "'", str55, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(request57);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        java.util.List<retrofit.client.Header> headerList21 = request20.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com/", "", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = request23.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request25 = restAdapter10.logAndReplaceRequest(request23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(typedOutput24);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        java.util.concurrent.Executor executor11 = builder0.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter12.deserializeObjectConverter5();
        retrofit.Server server14 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.client.Response response15 = serializedObjectSupporter12.deserializeObjectResponse4();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter12.deserializeObjectConverter4();
        builder0.converter = gsonConverter16;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(executor11);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(response15);
        org.junit.Assert.assertNotNull(gsonConverter16);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider18 = restAdapter10.getclientProvider();
        retrofit.Server server19 = restAdapter10.server;
        retrofit.Server server20 = restAdapter10.server;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(server20);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = null;
        restAdapter12.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.Server server18 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider19 = null;
        java.util.concurrent.Executor executor20 = null;
        java.util.concurrent.Executor executor21 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor24 = serializedObjectSupporter22.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString9();
        retrofit.Server server27 = serializedObjectSupporter25.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter6();
        retrofit.Profiler profiler29 = null;
        retrofit.ErrorHandler errorHandler30 = null;
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder31.serializedObjectSupporter;
        retrofit.RestAdapter.Log log33 = retrofit.RestAdapter.Log.NONE;
        builder31.log = log33;
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter36 = new retrofit.RestAdapter(server18, provider19, executor20, executor21, requestInterceptor24, (retrofit.converter.Converter) gsonConverter28, profiler29, errorHandler30, log33, logLevel35);
        retrofit.Server server37 = restAdapter36.server;
        retrofit.RequestInterceptor requestInterceptor38 = restAdapter36.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel39 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean40 = logLevel39.log();
        restAdapter36.setLogLevel(logLevel39);
        restAdapter12.logLevel = logLevel39;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(requestInterceptor38);
        org.junit.Assert.assertTrue("'" + logLevel39 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel39.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        java.util.concurrent.Executor executor42 = builder41.httpExecutor;
        retrofit.Server server45 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.RequestInterceptor requestInterceptor49 = null;
        retrofit.converter.Converter converter50 = null;
        retrofit.Profiler profiler51 = null;
        retrofit.ErrorHandler errorHandler52 = null;
        retrofit.RestAdapter.Log log53 = null;
        retrofit.RestAdapter.LogLevel logLevel54 = null;
        retrofit.RestAdapter restAdapter55 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor49, converter50, profiler51, errorHandler52, log53, logLevel54);
        java.lang.String str56 = restAdapter55.getIDLE_THREAD_NAME();
        retrofit.Server server57 = restAdapter55.server;
        java.lang.String str58 = server57.getName();
        builder41.server = server57;
        java.lang.String str60 = server57.apiUrl;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor16 = restAdapter10.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.Server server9 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.Server server11 = builder10.server;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.Server server15 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder17 = builder12.setConverter((retrofit.converter.Converter) gsonConverter16);
        builder12.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.Server server21 = serializedObjectSupporter19.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter6();
        java.lang.String str23 = serializedObjectSupporter19.deserializeObjectString2();
        java.lang.String str24 = serializedObjectSupporter19.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter19.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder26 = builder12.setErrorHandler(errorHandler25);
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.Server server31 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider32 = null;
        java.util.concurrent.Executor executor33 = null;
        java.util.concurrent.Executor executor34 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor37 = serializedObjectSupporter35.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString9();
        retrofit.Server server40 = serializedObjectSupporter38.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter41 = serializedObjectSupporter38.deserializeObjectConverter6();
        retrofit.Profiler profiler42 = null;
        retrofit.ErrorHandler errorHandler43 = null;
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = builder44.serializedObjectSupporter;
        retrofit.RestAdapter.Log log46 = retrofit.RestAdapter.Log.NONE;
        builder44.log = log46;
        retrofit.RestAdapter.LogLevel logLevel48 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter49 = new retrofit.RestAdapter(server31, provider32, executor33, executor34, requestInterceptor37, (retrofit.converter.Converter) gsonConverter41, profiler42, errorHandler43, log46, logLevel48);
        retrofit.RestAdapter.Builder builder50 = builder27.setRequestInterceptor(requestInterceptor37);
        builder26.requestInterceptor = requestInterceptor37;
        retrofit.RestAdapter.Builder builder53 = builder26.setServer("http://example.com/");
        retrofit.Server server56 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider57 = null;
        java.util.concurrent.Executor executor58 = null;
        java.util.concurrent.Executor executor59 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor62 = serializedObjectSupporter60.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        java.lang.String str64 = serializedObjectSupporter63.deserializeObjectString9();
        retrofit.Server server65 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter6();
        retrofit.Profiler profiler67 = null;
        retrofit.ErrorHandler errorHandler68 = null;
        retrofit.RestAdapter.Builder builder69 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = builder69.serializedObjectSupporter;
        retrofit.RestAdapter.Log log71 = retrofit.RestAdapter.Log.NONE;
        builder69.log = log71;
        retrofit.RestAdapter.LogLevel logLevel73 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter74 = new retrofit.RestAdapter(server56, provider57, executor58, executor59, requestInterceptor62, (retrofit.converter.Converter) gsonConverter66, profiler67, errorHandler68, log71, logLevel73);
        retrofit.RestAdapter.Builder builder75 = builder53.setLog(log71);
        java.util.concurrent.Executor executor76 = builder53.getcallbackExecutor();
        builder10.callbackExecutor = executor76;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-Idle" + "'", str23, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(server40);
        org.junit.Assert.assertNotNull(gsonConverter41);
        org.junit.Assert.assertNull(serializedObjectSupporter45);
        org.junit.Assert.assertNotNull(log46);
        org.junit.Assert.assertTrue("'" + logLevel48 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel48.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNull(serializedObjectSupporter70);
        org.junit.Assert.assertNotNull(log71);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(executor76);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.converter.Converter converter21 = restAdapter20.getconverter();
        retrofit.RestAdapter.LogLevel logLevel22 = restAdapter20.logLevel;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.converter.Converter converter24 = restAdapter20.getconverter();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertTrue("'" + logLevel22 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel22.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter24);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler13 = builder11.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        builder11.logLevel = logLevel14;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.Server server38 = restAdapter37.server;
        retrofit.RestAdapter.Log log39 = restAdapter37.log;
        retrofit.RestAdapter.RestHandler restHandler40 = restAdapter37.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel41 = restAdapter37.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        java.lang.String str49 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.client.Response response50 = serializedObjectSupporter43.deserializeObjectResponse2();
        retrofit.client.Response response52 = restAdapter37.logAndReplaceResponse("", response50, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel53 = restAdapter37.logLevel;
        retrofit.RestAdapter.Builder builder54 = builder11.setLogLevel(logLevel53);
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        builder55.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        java.lang.String str66 = serializedObjectSupporter62.deserializeObjectString2();
        java.lang.String str67 = serializedObjectSupporter62.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler68 = serializedObjectSupporter62.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder69 = builder55.setErrorHandler(errorHandler68);
        builder69.ensureSaneDefaults();
        java.util.concurrent.Executor executor71 = builder69.getcallbackExecutor();
        java.util.concurrent.Executor executor72 = builder69.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor73 = builder69.requestInterceptor;
        retrofit.client.Client.Provider provider74 = builder69.getclientProvider();
        retrofit.RestAdapter.Builder builder75 = builder54.setClient(provider74);
        retrofit.RestAdapter.Builder builder76 = builder0.setClient(provider74);
        java.util.concurrent.Executor executor77 = builder76.gethttpExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(response50);
        org.junit.Assert.assertNotNull(response52);
        org.junit.Assert.assertTrue("'" + logLevel53 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel53.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Retrofit-Idle" + "'", str66, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(executor71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(requestInterceptor73);
        org.junit.Assert.assertNotNull(provider74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(executor77);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com/", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "Retrofit-", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "http://example.com/", headerList13, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(requestInterceptor16);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.Log log40 = restAdapter38.log;
        retrofit.RestAdapter.Builder builder41 = builder14.setLog(log40);
        java.util.concurrent.Executor executor42 = builder14.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(executor42);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.RestAdapter.Builder builder3 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter4 = builder3.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler5 = builder3.errorHandler;
        builder3.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler7 = builder3.errorHandler;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = new retrofit.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString9();
        retrofit.Server server27 = serializedObjectSupporter25.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter28 = serializedObjectSupporter25.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder29 = builder24.setConverter((retrofit.converter.Converter) gsonConverter28);
        builder24.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.Server server33 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString2();
        java.lang.String str36 = serializedObjectSupporter31.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler37 = serializedObjectSupporter31.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder38 = builder24.setErrorHandler(errorHandler37);
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString9();
        retrofit.Server server41 = serializedObjectSupporter39.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter42 = serializedObjectSupporter39.deserializeObjectConverter6();
        java.lang.String str43 = serializedObjectSupporter39.deserializeObjectString2();
        java.lang.String str44 = serializedObjectSupporter39.deserializeObjectString4();
        java.lang.String str45 = serializedObjectSupporter39.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter39.deserializeObjectConverter7();
        builder38.converter = gsonConverter46;
        retrofit.client.Client.Provider provider48 = builder38.clientProvider;
        builder22.setclientProvider(provider48);
        builder3.setclientProvider(provider48);
        retrofit.RestAdapter.Builder builder51 = builder2.setClient(provider48);
        retrofit.RequestInterceptor requestInterceptor52 = builder2.requestInterceptor;
        retrofit.client.Client client53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder54 = builder2.setClient(client53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNull(errorHandler5);
        org.junit.Assert.assertNotNull(errorHandler7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(gsonConverter28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Retrofit-Idle" + "'", str35, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(server41);
        org.junit.Assert.assertNotNull(gsonConverter42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Retrofit-Idle" + "'", str43, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(provider48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(requestInterceptor52);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter20.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        restAdapter20.setLogLevel(logLevel23);
        retrofit.converter.Converter converter26 = restAdapter20.converter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(converter26);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        retrofit.client.Client.Provider provider11 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder13 = builder0.setLog(log12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(provider11);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        retrofit.Server server16 = builder14.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        java.lang.String str20 = server19.getDEFAULT_NAME();
        retrofit.RestAdapter.Builder builder21 = builder14.setServer(server19);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "default" + "'", str20, "default");
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        java.util.concurrent.Executor executor92 = restAdapter91.httpExecutor;
        java.util.concurrent.Executor executor93 = restAdapter91.getcallbackExecutor();
        retrofit.converter.Converter converter94 = restAdapter91.getconverter();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor92);
        org.junit.Assert.assertNull(executor93);
        org.junit.Assert.assertNotNull(converter94);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "http://example.com", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com", "default", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com", "Retrofit-Idle", headerList11, typedOutput16);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString9();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = serializedObjectSupporter0.deserializeObjectLogLevel3();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("default", "Retrofit-Idle", headerList2, typedOutput3);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter10.requestInterceptor;
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(requestInterceptor17);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        java.util.concurrent.Executor executor13 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter6();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        builder0.requestInterceptor = requestInterceptor35;
        retrofit.Server server51 = builder0.server;
        retrofit.RestAdapter.Builder builder53 = builder0.setServer("http://example.com");
        retrofit.RestAdapter.Log log54 = builder0.log;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = builder55.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler57 = builder55.errorHandler;
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler61 = builder59.errorHandler;
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder68 = builder63.setConverter((retrofit.converter.Converter) gsonConverter67);
        builder63.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        java.lang.String str71 = serializedObjectSupporter70.deserializeObjectString9();
        retrofit.Server server72 = serializedObjectSupporter70.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter6();
        java.lang.String str74 = serializedObjectSupporter70.deserializeObjectString2();
        java.lang.String str75 = serializedObjectSupporter70.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter70.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder77 = builder63.setErrorHandler(errorHandler76);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor79 = builder77.getcallbackExecutor();
        builder59.httpExecutor = executor79;
        builder55.httpExecutor = executor79;
        retrofit.client.Client.Provider provider82 = builder55.getclientProvider();
        builder0.setclientProvider(provider82);
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = new retrofit.SerializedObjectSupporter();
        java.lang.String str85 = serializedObjectSupporter84.deserializeObjectString9();
        retrofit.Server server86 = serializedObjectSupporter84.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter87 = serializedObjectSupporter84.deserializeObjectConverter6();
        java.lang.String str88 = serializedObjectSupporter84.deserializeObjectString2();
        java.lang.String str89 = serializedObjectSupporter84.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler90 = serializedObjectSupporter84.deserializeObjectErrorHandler1();
        retrofit.Server server91 = serializedObjectSupporter84.deserializeObjectServer1();
        builder0.server = server91;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-Idle" + "'", str74, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "http://example.com/" + "'", str75, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "http://example.com/" + "'", str85, "http://example.com/");
        org.junit.Assert.assertNotNull(server86);
        org.junit.Assert.assertNotNull(gsonConverter87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Retrofit-Idle" + "'", str88, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "http://example.com/" + "'", str89, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler90);
        org.junit.Assert.assertNotNull(server91);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        retrofit.Server server2 = new retrofit.Server("hi!", "Retrofit-");
        java.lang.String str3 = server2.name;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.Server server7 = new retrofit.Server("hi!");
        builder0.server = server7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response12 = serializedObjectSupporter9.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder14 = builder0.setConverter((retrofit.converter.Converter) gsonConverter13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString8();
        java.lang.String str17 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter15.deserializeObjectConverter8();
        retrofit.ErrorHandler errorHandler20 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        builder14.errorHandler = errorHandler20;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(errorHandler20);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList13, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "Retrofit-", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("default", "hi!", headerList19, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.getBody();
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNull(typedOutput25);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.ErrorHandler errorHandler5 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNotNull(response6);
        org.junit.Assert.assertNotNull(gsonConverter7);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.Profiler profiler6 = null;
        builder5.profiler = profiler6;
        retrofit.RestAdapter.LogLevel logLevel8 = builder5.logLevel;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter14 = restAdapter10.getconverter();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.Server server26 = restAdapter20.getserver();
        java.util.concurrent.Executor executor27 = restAdapter20.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.Server server6 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(server6);
        org.junit.Assert.assertNotNull(response7);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNull(converter16);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        retrofit.RestAdapter.Log log16 = builder14.log;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.LogLevel logLevel38 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean39 = logLevel38.log();
        restAdapter37.setLogLevel(logLevel38);
        retrofit.client.Client.Provider provider41 = restAdapter37.getclientProvider();
        java.lang.String str42 = restAdapter37.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log43 = restAdapter37.log;
        retrofit.Server server44 = restAdapter37.server;
        retrofit.RestAdapter.LogLevel logLevel45 = restAdapter37.logLevel;
        retrofit.RestAdapter.Builder builder46 = builder14.setLogLevel(logLevel45);
        retrofit.client.Client.Provider provider47 = builder14.clientProvider;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(log16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Retrofit-" + "'", str42, "Retrofit-");
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(provider47);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.ErrorHandler errorHandler16 = restAdapter12.errorHandler;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(errorHandler16);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertNotNull(requestInterceptor11);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        retrofit.RestAdapter.Log log6 = builder0.log;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(log6);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        retrofit.Server server1 = new retrofit.Server("Retrofit-Idle");
        java.lang.String str2 = server1.getDEFAULT_NAME();
        java.lang.String str3 = server1.getUrl();
        java.lang.String str4 = server1.name;
        java.lang.String str5 = server1.getapiUrl();
        java.lang.String str6 = server1.name;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "default" + "'", str2, "default");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-Idle" + "'", str3, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "default" + "'", str6, "default");
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        retrofit.Server server2 = new retrofit.Server("http://example.com/", "Retrofit-Idle");
        java.lang.String str3 = server2.getDEFAULT_NAME();
        java.lang.String str4 = server2.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter7();
        builder14.converter = gsonConverter22;
        retrofit.client.Client.Provider provider24 = builder14.clientProvider;
        retrofit.Server server25 = builder14.server;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        builder14.clientProvider = provider35;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNull(server25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "Retrofit-", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "http://example.com/", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput24);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter91.getLogLevel();
        retrofit.RestAdapter.Log log96 = restAdapter91.log;
        java.util.concurrent.Executor executor97 = restAdapter91.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler98 = restAdapter91.new RestHandler();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log96);
        org.junit.Assert.assertNull(executor97);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response10 = serializedObjectSupporter0.deserializeObjectResponse2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertNotNull(response10);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        retrofit.converter.Converter converter26 = restAdapter20.converter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(converter26);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.Profiler profiler17 = restAdapter12.profiler;
        retrofit.Profiler profiler18 = restAdapter12.getprofiler();
        retrofit.RestAdapter.Log log19 = restAdapter12.log;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(log19);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        builder4.httpExecutor = executor24;
        builder0.httpExecutor = executor24;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = builder27.log;
        retrofit.Profiler profiler32 = null;
        builder27.profiler = profiler32;
        retrofit.client.Client.Provider provider34 = builder27.getclientProvider();
        retrofit.RestAdapter.Builder builder35 = builder0.setClient(provider34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder36.log = log38;
        retrofit.Server server40 = builder36.server;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter42 = builder41.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter43.deserializeObjectErrorHandler1();
        builder41.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder51 = builder36.setErrorHandler(errorHandler49);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder53.serializedObjectSupporter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log55;
        log55.log("default");
        builder52.log = log55;
        builder51.log = log55;
        retrofit.RestAdapter.Builder builder61 = builder35.setLog(log55);
        java.util.concurrent.Executor executor62 = builder61.callbackExecutor;
        java.util.concurrent.Executor executor63 = builder61.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertNotNull(executor63);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString5();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        builder4.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        java.lang.String str15 = serializedObjectSupporter11.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder18 = builder4.setErrorHandler(errorHandler17);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.getcallbackExecutor();
        builder0.httpExecutor = executor20;
        retrofit.RequestInterceptor requestInterceptor22 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.RestAdapter.Log log25 = retrofit.RestAdapter.Log.NONE;
        builder23.log = log25;
        retrofit.Server server27 = builder23.server;
        java.util.concurrent.Executor executor28 = null;
        builder23.httpExecutor = executor28;
        retrofit.Server server32 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder33 = builder23.setServer(server32);
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel35 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder36 = builder34.setLogLevel(logLevel35);
        retrofit.converter.Converter converter37 = builder36.converter;
        retrofit.RestAdapter.Builder builder38 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = builder38.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler40 = builder38.errorHandler;
        builder38.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler42 = builder38.errorHandler;
        retrofit.RestAdapter.Builder builder43 = builder36.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder44 = builder33.setErrorHandler(errorHandler42);
        retrofit.RestAdapter.Builder builder45 = builder0.setErrorHandler(errorHandler42);
        builder45.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.Server server50 = serializedObjectSupporter48.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder52 = builder47.setConverter((retrofit.converter.Converter) gsonConverter51);
        builder47.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = new retrofit.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString9();
        retrofit.Server server56 = serializedObjectSupporter54.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter57 = serializedObjectSupporter54.deserializeObjectConverter6();
        java.lang.String str58 = serializedObjectSupporter54.deserializeObjectString2();
        java.lang.String str59 = serializedObjectSupporter54.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler60 = serializedObjectSupporter54.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder61 = builder47.setErrorHandler(errorHandler60);
        builder61.ensureSaneDefaults();
        java.util.concurrent.Executor executor63 = builder61.getcallbackExecutor();
        java.util.concurrent.Executor executor64 = builder61.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor65 = builder61.requestInterceptor;
        retrofit.RestAdapter.Builder builder66 = builder45.setRequestInterceptor(requestInterceptor65);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(server27);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel35 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel35.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertNull(serializedObjectSupporter39);
        org.junit.Assert.assertNull(errorHandler40);
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(server56);
        org.junit.Assert.assertNotNull(gsonConverter57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Retrofit-Idle" + "'", str58, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(executor64);
        org.junit.Assert.assertNotNull(requestInterceptor65);
        org.junit.Assert.assertNotNull(builder66);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler8 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean14 = logLevel13.log();
        builder10.logLevel = logLevel13;
        retrofit.Server server17 = new retrofit.Server("hi!");
        builder10.server = server17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response22 = serializedObjectSupporter19.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter19.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder24 = builder10.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.converter.Converter converter25 = builder10.converter;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        java.lang.String str38 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder40 = builder26.setErrorHandler(errorHandler39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.Server server45 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder58.log = log60;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor51, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler57, log60, logLevel62);
        retrofit.RestAdapter.Builder builder64 = builder41.setRequestInterceptor(requestInterceptor51);
        builder40.requestInterceptor = requestInterceptor51;
        retrofit.RestAdapter.Builder builder67 = builder40.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        retrofit.client.Client.Provider provider83 = builder82.clientProvider;
        retrofit.RestAdapter.Builder builder84 = builder67.setClient(provider83);
        builder10.setclientProvider(provider83);
        retrofit.RestAdapter.Builder builder86 = builder9.setClient(provider83);
        retrofit.RestAdapter.Builder builder88 = builder9.setServer("Retrofit-Idle");
        retrofit.client.Client.Provider provider89 = builder9.getclientProvider();
        retrofit.Profiler profiler90 = builder9.profiler;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(response22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertNull(profiler90);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        retrofit.RequestInterceptor requestInterceptor23 = restAdapter20.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor24 = restAdapter20.getrequestInterceptor();
        java.lang.Throwable throwable25 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter20.logException(throwable25, "Retrofit-");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor24);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        java.util.concurrent.Executor executor92 = restAdapter91.httpExecutor;
        java.util.concurrent.Executor executor93 = restAdapter91.getcallbackExecutor();
        retrofit.RestAdapter.Log log94 = restAdapter91.log;
        log94.log("hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor92);
        org.junit.Assert.assertNull(executor93);
        org.junit.Assert.assertNotNull(log94);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.converter.Converter converter25 = restAdapter20.getconverter();
        retrofit.Profiler profiler26 = restAdapter20.profiler;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertNull(profiler26);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString9();
        retrofit.Server server43 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder45 = builder40.setConverter((retrofit.converter.Converter) gsonConverter44);
        builder40.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.Server server49 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter6();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString2();
        java.lang.String str52 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler53 = serializedObjectSupporter47.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder54 = builder40.setErrorHandler(errorHandler53);
        builder54.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = new retrofit.SerializedObjectSupporter();
        java.lang.String str58 = serializedObjectSupporter57.deserializeObjectString9();
        retrofit.Server server59 = serializedObjectSupporter57.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter60 = serializedObjectSupporter57.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder61 = builder56.setConverter((retrofit.converter.Converter) gsonConverter60);
        builder56.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = new retrofit.SerializedObjectSupporter();
        java.lang.String str64 = serializedObjectSupporter63.deserializeObjectString9();
        retrofit.Server server65 = serializedObjectSupporter63.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter63.deserializeObjectConverter6();
        java.lang.String str67 = serializedObjectSupporter63.deserializeObjectString2();
        java.lang.String str68 = serializedObjectSupporter63.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler69 = serializedObjectSupporter63.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder70 = builder56.setErrorHandler(errorHandler69);
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        java.lang.String str72 = serializedObjectSupporter71.deserializeObjectString9();
        retrofit.Server server73 = serializedObjectSupporter71.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter71.deserializeObjectConverter6();
        java.lang.String str75 = serializedObjectSupporter71.deserializeObjectString2();
        java.lang.String str76 = serializedObjectSupporter71.deserializeObjectString4();
        java.lang.String str77 = serializedObjectSupporter71.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter71.deserializeObjectConverter7();
        builder70.converter = gsonConverter78;
        retrofit.client.Client.Provider provider80 = builder70.clientProvider;
        builder54.setclientProvider(provider80);
        retrofit.RequestInterceptor requestInterceptor82 = builder54.requestInterceptor;
        builder14.requestInterceptor = requestInterceptor82;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-Idle" + "'", str51, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http://example.com/" + "'", str58, "http://example.com/");
        org.junit.Assert.assertNotNull(server59);
        org.junit.Assert.assertNotNull(gsonConverter60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(server65);
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Retrofit-Idle" + "'", str67, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler69);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "http://example.com/" + "'", str72, "http://example.com/");
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Retrofit-Idle" + "'", str75, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertNotNull(provider80);
        org.junit.Assert.assertNotNull(requestInterceptor82);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        retrofit.Server server18 = restAdapter12.server;
        java.lang.String str19 = restAdapter12.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-" + "'", str19, "Retrofit-");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.client.Client.Provider provider3 = null;
        builder2.clientProvider = provider3;
        retrofit.ErrorHandler errorHandler5 = null;
        builder2.errorHandler = errorHandler5;
        retrofit.Server server7 = builder2.server;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter8 = builder2.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Server may not be null.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(server7);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel8 = builder0.logLevel;
        retrofit.ErrorHandler errorHandler9 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder51 = builder24.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder53 = builder24.setServer("hi!");
        retrofit.RestAdapter.Log log54 = builder53.log;
        retrofit.RestAdapter.Builder builder55 = builder0.setLog(log54);
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean57 = logLevel56.log();
        retrofit.RestAdapter.Builder builder58 = builder0.setLogLevel(logLevel56);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("default");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString2();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = builder39.setErrorHandler(errorHandler52);
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.getcallbackExecutor();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str68 = serializedObjectSupporter64.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder71 = builder57.setErrorHandler(errorHandler70);
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.getcallbackExecutor();
        builder53.sethttpExecutor(executor73);
        builder38.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor76 = builder38.callbackExecutor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        retrofit.RestAdapter.Builder builder87 = builder38.setClient(provider86);
        retrofit.Profiler profiler88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder38.setProfiler(profiler88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-Idle" + "'", str68, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter91.logLevel;
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter91.logLevel;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.Log log95 = restAdapter91.log;
        retrofit.client.Client.Provider provider96 = restAdapter91.clientProvider;
        retrofit.client.Client.Provider provider97 = restAdapter91.getclientProvider();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertNull(provider97);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.client.Response response9 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(response9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "hi!");
        java.lang.String str3 = server2.getapiUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        restAdapter10.logLevel = logLevel14;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.lang.String str18 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.Server server19 = restAdapter10.getserver();
        retrofit.RequestInterceptor requestInterceptor20 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-Idle" + "'", str18, "Retrofit-Idle");
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(requestInterceptor20);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor19 = restAdapter10.httpExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(executor19);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.Server server24 = builder0.server;
        retrofit.client.Client.Provider provider25 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(server24);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList11, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("http://example.com", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("default", "", (java.util.List<retrofit.client.Header>) headerList11, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("default", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput21);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.util.List<retrofit.client.Header> headerList41 = request40.getHeaders();
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("http://example.com/", "", headerList41, typedOutput42);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("", "Retrofit-", headerList41, typedOutput44);
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("hi!", "hi!", headerList41, typedOutput46);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("Retrofit-", "http://example.com", headerList41, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("default", "default", headerList41, typedOutput50);
        retrofit.client.Request request52 = restAdapter20.logAndReplaceRequest(request51);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(request52);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RestAdapter.Log log12 = restAdapter10.log;
        retrofit.client.Client.Provider provider13 = restAdapter10.clientProvider;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(log12);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Log log4 = builder2.log;
        retrofit.ErrorHandler errorHandler5 = null;
        builder2.errorHandler = errorHandler5;
        java.util.concurrent.Executor executor7 = builder2.httpExecutor;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(log4);
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        java.lang.String str20 = serializedObjectSupporter16.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter16.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler22 = serializedObjectSupporter16.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter16.deserializeObjectConverter8();
        java.lang.Class class24 = serializedObjectSupporter16.deserializeObjectClass1();
        retrofit.client.Response response25 = serializedObjectSupporter16.deserializeObjectResponse7();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter16.deserializeObjectRequestInterceptor1();
        retrofit.RestAdapter.Builder builder27 = builder14.setRequestInterceptor(requestInterceptor26);
        retrofit.RestAdapter.Builder builder28 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter29 = new retrofit.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString9();
        retrofit.Server server31 = serializedObjectSupporter29.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter32 = serializedObjectSupporter29.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder33 = builder28.setConverter((retrofit.converter.Converter) gsonConverter32);
        builder28.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        java.lang.String str39 = serializedObjectSupporter35.deserializeObjectString2();
        java.lang.String str40 = serializedObjectSupporter35.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler41 = serializedObjectSupporter35.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder42 = builder28.setErrorHandler(errorHandler41);
        builder42.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.Server server47 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        builder44.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        java.lang.String str55 = serializedObjectSupporter51.deserializeObjectString2();
        java.lang.String str56 = serializedObjectSupporter51.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter51.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder58 = builder44.setErrorHandler(errorHandler57);
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.Server server61 = serializedObjectSupporter59.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter6();
        java.lang.String str63 = serializedObjectSupporter59.deserializeObjectString2();
        java.lang.String str64 = serializedObjectSupporter59.deserializeObjectString4();
        java.lang.String str65 = serializedObjectSupporter59.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter66 = serializedObjectSupporter59.deserializeObjectConverter7();
        builder58.converter = gsonConverter66;
        retrofit.client.Client.Provider provider68 = builder58.clientProvider;
        builder42.setclientProvider(provider68);
        retrofit.converter.Converter converter70 = builder42.converter;
        retrofit.ErrorHandler errorHandler71 = builder42.errorHandler;
        builder27.errorHandler = errorHandler71;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Retrofit-Idle" + "'", str20, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(class24);
        org.junit.Assert.assertNotNull(response25);
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "http://example.com/" + "'", str30, "http://example.com/");
        org.junit.Assert.assertNotNull(server31);
        org.junit.Assert.assertNotNull(gsonConverter32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Retrofit-Idle" + "'", str39, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-Idle" + "'", str55, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Retrofit-Idle" + "'", str63, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter66);
        org.junit.Assert.assertNotNull(provider68);
        org.junit.Assert.assertNotNull(converter70);
        org.junit.Assert.assertNotNull(errorHandler71);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString10();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Retrofit-" + "'", str10, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        retrofit.Server server39 = restAdapter38.server;
        retrofit.RestAdapter.Log log40 = restAdapter38.log;
        retrofit.RestAdapter.Builder builder41 = builder14.setLog(log40);
        retrofit.RestAdapter.Log log42 = builder41.log;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString9();
        retrofit.Server server46 = serializedObjectSupporter44.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.Server server52 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter6();
        java.lang.String str54 = serializedObjectSupporter50.deserializeObjectString2();
        java.lang.String str55 = serializedObjectSupporter50.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter50.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder57 = builder43.setErrorHandler(errorHandler56);
        builder57.ensureSaneDefaults();
        java.util.concurrent.Executor executor59 = builder57.getcallbackExecutor();
        java.util.concurrent.Executor executor60 = builder57.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor61 = builder57.requestInterceptor;
        retrofit.client.Client.Provider provider62 = builder57.getclientProvider();
        builder41.clientProvider = provider62;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler66 = builder64.errorHandler;
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Log log68 = builder64.log;
        retrofit.Profiler profiler69 = null;
        builder64.profiler = profiler69;
        retrofit.client.Client.Provider provider71 = builder64.getclientProvider();
        java.util.concurrent.Executor executor72 = builder64.callbackExecutor;
        retrofit.client.Client.Provider provider73 = builder64.clientProvider;
        retrofit.RestAdapter.Builder builder74 = builder41.setClient(provider73);
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler78 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        builder74.errorHandler = errorHandler78;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-Idle" + "'", str54, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(executor59);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(provider62);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNotNull(provider71);
        org.junit.Assert.assertNotNull(executor72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(errorHandler78);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = null;
        builder0.httpExecutor = executor7;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.Profiler profiler10 = null;
        builder0.profiler = profiler10;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNull(profiler9);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor5 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder6.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler8 = builder6.errorHandler;
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        builder14.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString9();
        retrofit.Server server23 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter6();
        java.lang.String str25 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter21.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder28 = builder14.setErrorHandler(errorHandler27);
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor30 = builder28.getcallbackExecutor();
        builder10.httpExecutor = executor30;
        builder6.httpExecutor = executor30;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler35 = builder33.errorHandler;
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log37 = builder33.log;
        retrofit.Profiler profiler38 = null;
        builder33.profiler = profiler38;
        retrofit.client.Client.Provider provider40 = builder33.getclientProvider();
        retrofit.RestAdapter.Builder builder41 = builder6.setClient(provider40);
        retrofit.RequestInterceptor requestInterceptor42 = builder6.requestInterceptor;
        retrofit.client.Client.Provider provider43 = builder6.clientProvider;
        builder0.setclientProvider(provider43);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNotNull(executor5);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(provider43);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor12 = restAdapter10.getcallbackExecutor();
        retrofit.RestAdapter.Log log13 = restAdapter10.log;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(log13);
        org.junit.Assert.assertNull(requestInterceptor14);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.Server server46 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log61;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor52, (retrofit.converter.Converter) gsonConverter56, profiler57, errorHandler58, log61, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder42.setRequestInterceptor(requestInterceptor52);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        builder65.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        java.util.concurrent.Executor executor75 = null;
        builder68.httpExecutor = executor75;
        retrofit.client.Client.Provider provider77 = builder68.getclientProvider();
        retrofit.RestAdapter.Builder builder78 = builder65.setClient(provider77);
        retrofit.Profiler profiler79 = builder65.profiler;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.converter.Converter converter83 = builder82.converter;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = builder84.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler86 = builder84.errorHandler;
        builder84.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler88 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder89 = builder82.setErrorHandler(errorHandler88);
        builder65.errorHandler = errorHandler88;
        retrofit.RestAdapter.Builder builder91 = builder14.setErrorHandler(errorHandler88);
        builder91.ensureSaneDefaults();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(converter83);
        org.junit.Assert.assertNull(serializedObjectSupporter85);
        org.junit.Assert.assertNull(errorHandler86);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.concurrent.Executor executor24 = restAdapter20.httpExecutor;
        retrofit.Profiler profiler25 = restAdapter20.profiler;
        retrofit.client.Client.Provider provider26 = restAdapter20.clientProvider;
        retrofit.Server server27 = restAdapter20.server;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(server27);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        java.lang.String str30 = serializedObjectSupporter26.deserializeObjectString2();
        java.lang.String str31 = serializedObjectSupporter26.deserializeObjectString4();
        java.lang.String str32 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.client.Response response33 = serializedObjectSupporter26.deserializeObjectResponse2();
        retrofit.client.Response response35 = restAdapter20.logAndReplaceResponse("", response33, (long) '#');
        retrofit.client.Client.Provider provider36 = restAdapter20.clientProvider;
        retrofit.client.Client.Provider provider37 = restAdapter20.clientProvider;
        retrofit.ErrorHandler errorHandler38 = restAdapter20.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-Idle" + "'", str30, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertNotNull(response35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(errorHandler38);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = server7.getUrl();
        java.lang.String str9 = server7.getDEFAULT_NAME();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com" + "'", str8, "http://example.com");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "default" + "'", str9, "default");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        retrofit.Server server2 = new retrofit.Server("http://example.com/", "Retrofit-Idle");
        java.lang.String str3 = server2.getDEFAULT_NAME();
        java.lang.String str4 = server2.getName();
        java.lang.String str5 = server2.name;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        retrofit.RequestInterceptor requestInterceptor23 = restAdapter20.getrequestInterceptor();
        retrofit.RequestInterceptor requestInterceptor24 = restAdapter20.getrequestInterceptor();
        retrofit.converter.Converter converter25 = restAdapter20.getconverter();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(requestInterceptor23);
        org.junit.Assert.assertNotNull(requestInterceptor24);
        org.junit.Assert.assertNotNull(converter25);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.Profiler profiler17 = restAdapter12.profiler;
        retrofit.Profiler profiler18 = restAdapter12.getprofiler();
        retrofit.client.Client.Provider provider19 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider20 = restAdapter12.getclientProvider();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(profiler18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.ErrorHandler errorHandler23 = restAdapter20.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler24 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = restAdapter20.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter26);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.Server server7 = new retrofit.Server("hi!");
        builder0.server = server7;
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor11 = serializedObjectSupporter9.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response12 = serializedObjectSupporter9.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder14 = builder0.setConverter((retrofit.converter.Converter) gsonConverter13);
        retrofit.converter.Converter converter15 = builder0.converter;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.Server server25 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter6();
        java.lang.String str27 = serializedObjectSupporter23.deserializeObjectString2();
        java.lang.String str28 = serializedObjectSupporter23.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler29 = serializedObjectSupporter23.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder30 = builder16.setErrorHandler(errorHandler29);
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = builder31.serializedObjectSupporter;
        retrofit.Server server35 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider36 = null;
        java.util.concurrent.Executor executor37 = null;
        java.util.concurrent.Executor executor38 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter39 = new retrofit.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor41 = serializedObjectSupporter39.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = new retrofit.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString9();
        retrofit.Server server44 = serializedObjectSupporter42.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter45 = serializedObjectSupporter42.deserializeObjectConverter6();
        retrofit.Profiler profiler46 = null;
        retrofit.ErrorHandler errorHandler47 = null;
        retrofit.RestAdapter.Builder builder48 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = builder48.serializedObjectSupporter;
        retrofit.RestAdapter.Log log50 = retrofit.RestAdapter.Log.NONE;
        builder48.log = log50;
        retrofit.RestAdapter.LogLevel logLevel52 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter53 = new retrofit.RestAdapter(server35, provider36, executor37, executor38, requestInterceptor41, (retrofit.converter.Converter) gsonConverter45, profiler46, errorHandler47, log50, logLevel52);
        retrofit.RestAdapter.Builder builder54 = builder31.setRequestInterceptor(requestInterceptor41);
        builder30.requestInterceptor = requestInterceptor41;
        retrofit.RestAdapter.Builder builder57 = builder30.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.Server server61 = serializedObjectSupporter59.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder63 = builder58.setConverter((retrofit.converter.Converter) gsonConverter62);
        builder58.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = new retrofit.SerializedObjectSupporter();
        java.lang.String str66 = serializedObjectSupporter65.deserializeObjectString9();
        retrofit.Server server67 = serializedObjectSupporter65.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter68 = serializedObjectSupporter65.deserializeObjectConverter6();
        java.lang.String str69 = serializedObjectSupporter65.deserializeObjectString2();
        java.lang.String str70 = serializedObjectSupporter65.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler71 = serializedObjectSupporter65.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder72 = builder58.setErrorHandler(errorHandler71);
        retrofit.client.Client.Provider provider73 = builder72.clientProvider;
        retrofit.RestAdapter.Builder builder74 = builder57.setClient(provider73);
        builder0.setclientProvider(provider73);
        retrofit.Profiler profiler76 = null;
        builder0.profiler = profiler76;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor11);
        org.junit.Assert.assertNotNull(response12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(converter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-Idle" + "'", str27, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNull(serializedObjectSupporter32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "http://example.com/" + "'", str40, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://example.com/" + "'", str43, "http://example.com/");
        org.junit.Assert.assertNotNull(server44);
        org.junit.Assert.assertNotNull(gsonConverter45);
        org.junit.Assert.assertNull(serializedObjectSupporter49);
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertTrue("'" + logLevel52 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel52.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "http://example.com/" + "'", str66, "http://example.com/");
        org.junit.Assert.assertNotNull(server67);
        org.junit.Assert.assertNotNull(gsonConverter68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Retrofit-Idle" + "'", str69, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider73);
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        builder4.httpExecutor = executor24;
        builder0.httpExecutor = executor24;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = builder27.log;
        retrofit.Profiler profiler32 = null;
        builder27.profiler = profiler32;
        retrofit.client.Client.Provider provider34 = builder27.getclientProvider();
        retrofit.RestAdapter.Builder builder35 = builder0.setClient(provider34);
        retrofit.RequestInterceptor requestInterceptor36 = builder0.requestInterceptor;
        retrofit.client.Client.Provider provider37 = builder0.clientProvider;
        retrofit.RestAdapter.LogLevel logLevel38 = builder0.logLevel;
        retrofit.Profiler profiler39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder40 = builder0.setProfiler(profiler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertNotNull(provider37);
        org.junit.Assert.assertTrue("'" + logLevel38 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel38.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = null;
        builder8.httpExecutor = executor15;
        retrofit.client.Client.Provider provider17 = builder8.getclientProvider();
        builder0.setclientProvider(provider17);
        retrofit.Server server19 = builder0.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(server19);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.client.Client.Provider provider1 = builder0.getclientProvider();
        org.junit.Assert.assertNull(provider1);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        retrofit.Server server2 = new retrofit.Server("default", "http://example.com");
        java.lang.String str3 = server2.apiUrl;
        java.lang.String str4 = server2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "default" + "'", str3, "default");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com" + "'", str4, "http://example.com");
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.ErrorHandler errorHandler14 = restAdapter10.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(errorHandler14);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.Profiler profiler15 = restAdapter12.profiler;
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.getrequestInterceptor();
        retrofit.Server server17 = restAdapter12.server;
        java.lang.String str18 = server17.name;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "http://example.com", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        retrofit.client.Client.Provider provider94 = restAdapter91.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler95 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler96 = restAdapter91.new RestHandler();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNull(provider94);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "Retrofit-", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com", "http://example.com", headerList15, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-", "http://example.com/", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "hi!", headerList23, typedOutput26);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com" + "'", str22, "http://example.com");
        org.junit.Assert.assertNotNull(headerList23);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.client.Client.Provider provider25 = restAdapter20.getclientProvider();
        retrofit.Server server26 = restAdapter20.server;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(server26);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        java.util.concurrent.Executor executor3 = builder2.gethttpExecutor();
        java.util.concurrent.Executor executor4 = builder2.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        java.lang.String str8 = server7.getapiUrl();
        java.lang.String str9 = server7.getDEFAULT_NAME();
        java.lang.String str10 = server7.getUrl();
        builder2.server = server7;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder14 = builder12.setLogLevel(logLevel13);
        retrofit.client.Client.Provider provider15 = null;
        builder14.clientProvider = provider15;
        retrofit.ErrorHandler errorHandler17 = null;
        builder14.errorHandler = errorHandler17;
        retrofit.Server server19 = builder14.server;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString9();
        retrofit.Server server23 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder25 = builder20.setConverter((retrofit.converter.Converter) gsonConverter24);
        builder20.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        java.lang.String str31 = serializedObjectSupporter27.deserializeObjectString2();
        java.lang.String str32 = serializedObjectSupporter27.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler33 = serializedObjectSupporter27.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder34 = builder20.setErrorHandler(errorHandler33);
        retrofit.RestAdapter.Builder builder35 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = builder35.serializedObjectSupporter;
        retrofit.Server server39 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider40 = null;
        java.util.concurrent.Executor executor41 = null;
        java.util.concurrent.Executor executor42 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor45 = serializedObjectSupporter43.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        retrofit.Profiler profiler50 = null;
        retrofit.ErrorHandler errorHandler51 = null;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = builder52.serializedObjectSupporter;
        retrofit.RestAdapter.Log log54 = retrofit.RestAdapter.Log.NONE;
        builder52.log = log54;
        retrofit.RestAdapter.LogLevel logLevel56 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server39, provider40, executor41, executor42, requestInterceptor45, (retrofit.converter.Converter) gsonConverter49, profiler50, errorHandler51, log54, logLevel56);
        retrofit.RestAdapter.Builder builder58 = builder35.setRequestInterceptor(requestInterceptor45);
        builder34.requestInterceptor = requestInterceptor45;
        retrofit.RestAdapter.Builder builder61 = builder34.setServer("http://example.com/");
        retrofit.Server server64 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider65 = null;
        java.util.concurrent.Executor executor66 = null;
        java.util.concurrent.Executor executor67 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        java.lang.String str69 = serializedObjectSupporter68.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor70 = serializedObjectSupporter68.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = new retrofit.SerializedObjectSupporter();
        java.lang.String str72 = serializedObjectSupporter71.deserializeObjectString9();
        retrofit.Server server73 = serializedObjectSupporter71.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter74 = serializedObjectSupporter71.deserializeObjectConverter6();
        retrofit.Profiler profiler75 = null;
        retrofit.ErrorHandler errorHandler76 = null;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = builder77.serializedObjectSupporter;
        retrofit.RestAdapter.Log log79 = retrofit.RestAdapter.Log.NONE;
        builder77.log = log79;
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter82 = new retrofit.RestAdapter(server64, provider65, executor66, executor67, requestInterceptor70, (retrofit.converter.Converter) gsonConverter74, profiler75, errorHandler76, log79, logLevel81);
        retrofit.RestAdapter.Builder builder83 = builder61.setLog(log79);
        java.util.concurrent.Executor executor84 = builder61.getcallbackExecutor();
        builder14.setcallbackExecutor(executor84);
        builder2.callbackExecutor = executor84;
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(executor3);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com" + "'", str8, "http://example.com");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "default" + "'", str9, "default");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com" + "'", str10, "http://example.com");
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Retrofit-Idle" + "'", str31, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertNotNull(log54);
        org.junit.Assert.assertTrue("'" + logLevel56 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel56.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "http://example.com/" + "'", str72, "http://example.com/");
        org.junit.Assert.assertNotNull(server73);
        org.junit.Assert.assertNotNull(gsonConverter74);
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertNotNull(log79);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(executor84);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.ErrorHandler errorHandler25 = restAdapter20.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter20.new RestHandler();
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList36, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", (java.util.List<retrofit.client.Header>) headerList36, typedOutput42);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList36, typedOutput44);
        retrofit.client.Request request46 = restAdapter20.logAndReplaceRequest(request45);
        retrofit.ErrorHandler errorHandler47 = restAdapter20.geterrorHandler();
        retrofit.Profiler profiler48 = restAdapter20.profiler;
        retrofit.RequestInterceptor requestInterceptor49 = restAdapter20.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(request46);
        org.junit.Assert.assertNull(errorHandler47);
        org.junit.Assert.assertNull(profiler48);
        org.junit.Assert.assertNotNull(requestInterceptor49);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = restAdapter10.serializedObjectSupporter;
        java.lang.String str19 = restAdapter10.getIDLE_THREAD_NAME();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel8 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder9 = builder7.setLogLevel(logLevel8);
        retrofit.RestAdapter.Log log10 = builder7.log;
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.Server server14 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.Server server20 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter6();
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString2();
        java.lang.String str23 = serializedObjectSupporter18.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler24 = serializedObjectSupporter18.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder25 = builder11.setErrorHandler(errorHandler24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.Server server30 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString9();
        retrofit.Server server39 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log45, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder26.setRequestInterceptor(requestInterceptor36);
        builder25.requestInterceptor = requestInterceptor36;
        retrofit.RestAdapter.Builder builder52 = builder25.setServer("http://example.com/");
        retrofit.Server server55 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor61, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler67, log70, logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder52.setLog(log70);
        java.util.concurrent.Executor executor75 = builder52.getcallbackExecutor();
        builder7.sethttpExecutor(executor75);
        builder0.httpExecutor = executor75;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertTrue("'" + logLevel8 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel8.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(log10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(executor75);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.Profiler profiler17 = restAdapter12.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.logLevel;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter12.getLogLevel();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(logLevel19);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        java.lang.String str94 = restAdapter91.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider95 = restAdapter91.getclientProvider();
        java.util.concurrent.Executor executor96 = restAdapter91.callbackExecutor;
        retrofit.converter.Converter converter97 = restAdapter91.converter;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Retrofit-Idle" + "'", str94, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNull(executor96);
        org.junit.Assert.assertNotNull(converter97);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.Profiler profiler3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder4 = builder0.setProfiler(profiler3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.RestAdapter.Log log24 = restAdapter20.log;
        log24.log("http://example.com");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(log24);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel95 = restAdapter91.getLogLevel();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel95 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel95.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString6();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(response6);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.Profiler profiler17 = restAdapter12.profiler;
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.logLevel;
        retrofit.client.Client.Provider provider19 = restAdapter12.getclientProvider();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(logLevel18);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.util.concurrent.Executor executor14 = restAdapter10.getcallbackExecutor();
        retrofit.Profiler profiler15 = restAdapter10.getprofiler();
        retrofit.Profiler profiler16 = restAdapter10.profiler;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(profiler16);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("default", "default", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-", "hi!", headerList11, typedOutput16);
        java.lang.String str18 = request17.getMethod();
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput20 = request17.getBody();
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-" + "'", str18, "Retrofit-");
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter7();
        builder14.converter = gsonConverter22;
        retrofit.client.Client.Provider provider24 = builder14.clientProvider;
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder14.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler4 = builder0.errorHandler;
        retrofit.ErrorHandler errorHandler5 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder6 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = builder6.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler8 = builder6.errorHandler;
        builder6.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        builder10.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder14 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder19 = builder14.setConverter((retrofit.converter.Converter) gsonConverter18);
        builder14.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString9();
        retrofit.Server server23 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter6();
        java.lang.String str25 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler27 = serializedObjectSupporter21.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder28 = builder14.setErrorHandler(errorHandler27);
        builder28.ensureSaneDefaults();
        java.util.concurrent.Executor executor30 = builder28.getcallbackExecutor();
        builder10.httpExecutor = executor30;
        builder6.httpExecutor = executor30;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler35 = builder33.errorHandler;
        builder33.ensureSaneDefaults();
        retrofit.RestAdapter.Log log37 = builder33.log;
        retrofit.Profiler profiler38 = null;
        builder33.profiler = profiler38;
        retrofit.client.Client.Provider provider40 = builder33.getclientProvider();
        retrofit.RestAdapter.Builder builder41 = builder6.setClient(provider40);
        retrofit.RequestInterceptor requestInterceptor42 = builder6.requestInterceptor;
        retrofit.RestAdapter.Builder builder43 = builder0.setRequestInterceptor(requestInterceptor42);
        retrofit.client.Client client44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder45 = builder43.setClient(client44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertNotNull(errorHandler5);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(errorHandler8);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "http://example.com/" + "'", str26, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(executor30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNull(errorHandler35);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(requestInterceptor42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor15 = restAdapter10.gethttpExecutor();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(logLevel13);
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder43 = builder14.setServer("hi!");
        retrofit.client.Client.Provider provider44 = builder14.getclientProvider();
        retrofit.Server server45 = builder14.server;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(provider44);
        org.junit.Assert.assertNotNull(server45);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        java.lang.String str30 = serializedObjectSupporter26.deserializeObjectString2();
        java.lang.String str31 = serializedObjectSupporter26.deserializeObjectString4();
        java.lang.String str32 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.client.Response response33 = serializedObjectSupporter26.deserializeObjectResponse2();
        retrofit.client.Response response35 = restAdapter20.logAndReplaceResponse("", response33, (long) '#');
        retrofit.client.Client.Provider provider36 = restAdapter20.clientProvider;
        retrofit.RestAdapter.Log log37 = restAdapter20.log;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-Idle" + "'", str30, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertNotNull(response35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(log37);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.Server server18 = restAdapter10.server;
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter10.getrequestInterceptor();
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.util.List<retrofit.client.Header> headerList27 = request26.getHeaders();
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "http://example.com", headerList27, typedOutput28);
        java.util.List<retrofit.client.Header> headerList30 = request29.getHeaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request31 = restAdapter10.logAndReplaceRequest(request29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(server18);
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNotNull(headerList27);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.client.Client.Provider provider10 = builder0.getclientProvider();
        retrofit.client.Client.Provider provider11 = builder0.clientProvider;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(provider10);
        org.junit.Assert.assertNotNull(provider11);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Retrofit-Idle" + "'", str8, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        builder23.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder23.httpExecutor;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder39 = builder23.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse4();
        java.lang.Class class8 = serializedObjectSupporter0.deserializeObjectClass1();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.getrequestInterceptor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = restAdapter12.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNull(requestInterceptor16);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("default", "default", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("Retrofit-", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "http://example.com/", headerList17, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("default", "http://example.com/", headerList17, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", headerList17, typedOutput28);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.getLogLevel();
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.RequestInterceptor requestInterceptor17 = restAdapter10.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter10.new RestHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(requestInterceptor17);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "http://example.com", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com", "default", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-Idle", headerList11, typedOutput16);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RequestInterceptor requestInterceptor22 = restAdapter20.getrequestInterceptor();
        retrofit.RestAdapter.LogLevel logLevel23 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean24 = logLevel23.log();
        restAdapter20.setLogLevel(logLevel23);
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter20.new RestHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertTrue("'" + logLevel23 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel23.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        java.lang.String str94 = server93.getapiUrl();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("Retrofit-Idle");
        retrofit.Server server41 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.Server server50 = serializedObjectSupporter48.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter6();
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder54.serializedObjectSupporter;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor47, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler53, log56, logLevel58);
        retrofit.Server server60 = restAdapter59.server;
        retrofit.RequestInterceptor requestInterceptor61 = restAdapter59.getrequestInterceptor();
        builder23.requestInterceptor = requestInterceptor61;
        retrofit.Server server63 = builder23.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertNotNull(server63);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString6();
        retrofit.Server server5 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(server5);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.ErrorHandler errorHandler23 = restAdapter20.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = null;
        restAdapter20.setLogLevel(logLevel24);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertNull(errorHandler23);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder5.errorHandler = errorHandler13;
        retrofit.RestAdapter.Builder builder15 = builder0.setErrorHandler(errorHandler13);
        retrofit.Server server16 = builder15.server;
        retrofit.Profiler profiler17 = builder15.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(profiler17);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(requestInterceptor8);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor13 = restAdapter10.gethttpExecutor();
        java.util.List<retrofit.client.Header> headerList28 = null;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        java.util.List<retrofit.client.Header> headerList31 = request30.getHeaders();
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("default", "default", headerList31, typedOutput32);
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList31, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("Retrofit-", "hi!", headerList31, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "http://example.com/", headerList31, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("default", "http://example.com/", headerList31, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "", headerList31, typedOutput42);
        java.lang.String str44 = request43.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request45 = restAdapter10.logAndReplaceRequest(request43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        builder4.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        java.lang.String str15 = serializedObjectSupporter11.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder18 = builder4.setErrorHandler(errorHandler17);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.getcallbackExecutor();
        builder0.httpExecutor = executor20;
        retrofit.RequestInterceptor requestInterceptor22 = builder0.requestInterceptor;
        retrofit.Server server23 = builder0.server;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.RestAdapter.Log log26 = retrofit.RestAdapter.Log.NONE;
        builder24.log = log26;
        log26.log("default");
        retrofit.RestAdapter.Builder builder30 = builder0.setLog(log26);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNull(server23);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.concurrent.Executor executor24 = restAdapter20.callbackExecutor;
        retrofit.ErrorHandler errorHandler25 = restAdapter20.errorHandler;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(errorHandler25);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        retrofit.Server server2 = new retrofit.Server("hi!", "");
        java.lang.Class<?> wildcardClass3 = server2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = null;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        java.lang.String str27 = restAdapter24.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean29 = logLevel28.log();
        restAdapter24.logLevel = logLevel28;
        restAdapter10.logLevel = logLevel28;
        retrofit.client.Client.Provider provider32 = restAdapter10.getclientProvider();
        retrofit.converter.Converter converter33 = restAdapter10.converter;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(converter33);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.RestAdapter.Builder builder19 = builder14.setServer("hi!");
        retrofit.RequestInterceptor requestInterceptor20 = builder19.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(requestInterceptor20);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        java.util.concurrent.Executor executor17 = restAdapter12.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter12.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = restHandler18.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter6();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        builder0.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Server server55 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor61, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler67, log70, logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder51.setRequestInterceptor(requestInterceptor61);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        builder74.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        builder74.clientProvider = provider86;
        retrofit.RestAdapter.Builder builder88 = builder0.setClient(provider86);
        builder88.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter90 = new retrofit.SerializedObjectSupporter();
        java.lang.String str91 = serializedObjectSupporter90.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor92 = serializedObjectSupporter90.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response93 = serializedObjectSupporter90.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter94 = serializedObjectSupporter90.deserializeObjectConverter6();
        retrofit.ErrorHandler errorHandler95 = serializedObjectSupporter90.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter96 = serializedObjectSupporter90.deserializeObjectConverter1();
        retrofit.RestAdapter.Builder builder97 = builder88.setConverter((retrofit.converter.Converter) gsonConverter96);
        retrofit.RestAdapter.LogLevel logLevel98 = builder88.logLevel;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http://example.com/" + "'", str91, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor92);
        org.junit.Assert.assertNotNull(response93);
        org.junit.Assert.assertNotNull(gsonConverter94);
        org.junit.Assert.assertNotNull(errorHandler95);
        org.junit.Assert.assertNotNull(gsonConverter96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertTrue("'" + logLevel98 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel98.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor16 = restAdapter12.getrequestInterceptor();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(requestInterceptor16);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.lang.String str24 = restAdapter20.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor25 = restAdapter20.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Retrofit-" + "'", str24, "Retrofit-");
        org.junit.Assert.assertNull(executor25);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "Retrofit-Idle");
        java.lang.String str3 = server2.getUrl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Retrofit-" + "'", str3, "Retrofit-");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.httpExecutor;
        java.util.concurrent.Executor executor16 = restAdapter12.httpExecutor;
        retrofit.ErrorHandler errorHandler17 = restAdapter12.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.Log log19 = restAdapter12.log;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(log19);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("http://example.com/", "Retrofit-", headerList2, typedOutput3);
        java.lang.String str5 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.concurrent.Executor executor24 = restAdapter20.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.FULL;
        restAdapter20.setLogLevel(logLevel25);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.FULL + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.FULL));
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter12.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.Server server24 = serializedObjectSupporter17.deserializeObjectServer1();
        java.lang.String str25 = serializedObjectSupporter17.deserializeObjectString2();
        retrofit.Server server26 = serializedObjectSupporter17.deserializeObjectServer1();
        restHandler16.serializedObjectSupporter = serializedObjectSupporter17;
        retrofit.RequestInterceptor requestInterceptor28 = serializedObjectSupporter17.deserializeObjectRequestInterceptor1();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-Idle" + "'", str25, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(requestInterceptor28);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.callbackExecutor;
        retrofit.Server server16 = restAdapter12.getserver();
        retrofit.Profiler profiler17 = restAdapter12.getprofiler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNull(profiler17);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.concurrent.Executor executor24 = restAdapter20.httpExecutor;
        retrofit.Profiler profiler25 = restAdapter20.profiler;
        retrofit.client.Client.Provider provider26 = restAdapter20.clientProvider;
        java.lang.Throwable throwable27 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter20.logException(throwable27, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNull(provider26);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        builder42.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.Server server51 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter49.deserializeObjectString2();
        java.lang.String str54 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder56 = builder42.setErrorHandler(errorHandler55);
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder58 = builder41.setClient(provider57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString9();
        retrofit.Server server62 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        builder59.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString9();
        retrofit.Server server68 = serializedObjectSupporter66.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter66.deserializeObjectConverter6();
        java.lang.String str70 = serializedObjectSupporter66.deserializeObjectString2();
        java.lang.String str71 = serializedObjectSupporter66.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler72 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder73 = builder59.setErrorHandler(errorHandler72);
        builder73.ensureSaneDefaults();
        java.util.concurrent.Executor executor75 = builder73.getcallbackExecutor();
        java.util.concurrent.Executor executor76 = builder73.callbackExecutor;
        builder58.httpExecutor = executor76;
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = builder58.serializedObjectSupporter;
        retrofit.Server server79 = builder58.server;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-Idle" + "'", str70, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertNull(serializedObjectSupporter78);
        org.junit.Assert.assertNotNull(server79);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean11 = logLevel10.log();
        builder7.logLevel = logLevel10;
        retrofit.Server server14 = new retrofit.Server("hi!");
        builder7.server = server14;
        builder0.server = server14;
        java.lang.String str17 = server14.name;
        java.lang.String str18 = server14.getUrl();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "default" + "'", str17, "default");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider14 = restAdapter10.getclientProvider();
        retrofit.client.Client.Provider provider15 = restAdapter10.getclientProvider();
        java.lang.String str16 = restAdapter10.getTHREAD_PREFIX();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.geterrorHandler();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("http://example.com/", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "Retrofit-", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList11, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.lang.Class<?> wildcardClass20 = request17.getClass();
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-Idle" + "'", str18, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel94 = restAdapter91.logLevel;
        java.util.concurrent.Executor executor95 = restAdapter91.httpExecutor;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertTrue("'" + logLevel94 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel94.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(executor95);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.Profiler profiler40 = null;
        builder14.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        builder14.log = log44;
        java.lang.Class<?> wildcardClass47 = builder14.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        java.util.concurrent.Executor executor18 = restAdapter12.callbackExecutor;
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter12.new RestHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter1 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertNotNull(gsonConverter1);
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str3 = server2.getapiUrl();
        java.lang.String str4 = server2.getDEFAULT_NAME();
        java.lang.String str5 = server2.name;
        java.lang.String str6 = server2.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com" + "'", str3, "http://example.com");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "default" + "'", str4, "default");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "default" + "'", str5, "default");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com" + "'", str6, "http://example.com");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.ErrorHandler errorHandler25 = restAdapter20.errorHandler;
        java.util.concurrent.Executor executor26 = restAdapter20.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter20.new RestHandler();
        retrofit.Server server28 = restAdapter20.getserver();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNotNull(server28);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        java.util.concurrent.Executor executor15 = null;
        builder8.httpExecutor = executor15;
        retrofit.client.Client.Provider provider17 = builder8.getclientProvider();
        builder0.setclientProvider(provider17);
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = builder19.serializedObjectSupporter;
        retrofit.Server server23 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider24 = null;
        java.util.concurrent.Executor executor25 = null;
        java.util.concurrent.Executor executor26 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor29 = serializedObjectSupporter27.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString9();
        retrofit.Server server32 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter6();
        retrofit.Profiler profiler34 = null;
        retrofit.ErrorHandler errorHandler35 = null;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder36.log = log38;
        retrofit.RestAdapter.LogLevel logLevel40 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter41 = new retrofit.RestAdapter(server23, provider24, executor25, executor26, requestInterceptor29, (retrofit.converter.Converter) gsonConverter33, profiler34, errorHandler35, log38, logLevel40);
        retrofit.RestAdapter.Builder builder42 = builder19.setRequestInterceptor(requestInterceptor29);
        retrofit.RestAdapter.LogLevel logLevel43 = retrofit.RestAdapter.LogLevel.BASIC;
        builder42.logLevel = logLevel43;
        retrofit.RestAdapter.Builder builder45 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder50 = builder45.setConverter((retrofit.converter.Converter) gsonConverter49);
        builder45.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        java.lang.String str56 = serializedObjectSupporter52.deserializeObjectString2();
        java.lang.String str57 = serializedObjectSupporter52.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler58 = serializedObjectSupporter52.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder59 = builder45.setErrorHandler(errorHandler58);
        builder59.ensureSaneDefaults();
        java.util.concurrent.Executor executor61 = builder59.getcallbackExecutor();
        builder42.sethttpExecutor(executor61);
        java.util.concurrent.Executor executor63 = builder42.gethttpExecutor();
        builder0.sethttpExecutor(executor63);
        java.util.concurrent.Executor executor65 = builder0.gethttpExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(provider17);
        org.junit.Assert.assertNull(serializedObjectSupporter20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertTrue("'" + logLevel40 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel40.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + logLevel43 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel43.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Retrofit-Idle" + "'", str56, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(executor63);
        org.junit.Assert.assertNotNull(executor65);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        java.util.concurrent.Executor executor4 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler7 = builder5.errorHandler;
        builder5.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor9 = builder5.requestInterceptor;
        java.util.concurrent.Executor executor10 = builder5.callbackExecutor;
        builder0.setcallbackExecutor(executor10);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(executor4);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNotNull(requestInterceptor9);
        org.junit.Assert.assertNotNull(executor10);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor12 = restAdapter10.callbackExecutor;
        retrofit.Profiler profiler13 = restAdapter10.getprofiler();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertNull(profiler13);
        org.junit.Assert.assertNull(requestInterceptor14);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.client.Client.Provider provider15 = builder14.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder21 = builder16.setConverter((retrofit.converter.Converter) gsonConverter20);
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder25 = builder23.setLogLevel(logLevel24);
        java.util.concurrent.Executor executor26 = builder25.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel27 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean28 = logLevel27.log();
        builder25.logLevel = logLevel27;
        builder16.logLevel = logLevel27;
        retrofit.RestAdapter.Builder builder31 = builder14.setLogLevel(logLevel27);
        retrofit.RestAdapter.Log log32 = null;
        builder14.log = log32;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertTrue("'" + logLevel27 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel27.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.client.Client.Provider provider25 = restAdapter20.getclientProvider();
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter20.logException(throwable26, "Retrofit-Idle");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        java.util.List<retrofit.client.Header> headerList23 = request22.getHeaders();
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "http://example.com", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = request25.getBody();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request27 = restAdapter10.logAndReplaceRequest(request25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNull(typedOutput26);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter12.logLevel;
        retrofit.Profiler profiler15 = restAdapter12.profiler;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(profiler15);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        retrofit.ErrorHandler errorHandler15 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        java.util.concurrent.Executor executor17 = restAdapter10.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler18 = builder16.errorHandler;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = builder16.log;
        retrofit.Profiler profiler21 = null;
        builder16.profiler = profiler21;
        retrofit.client.Client.Provider provider23 = builder16.getclientProvider();
        java.util.concurrent.Executor executor24 = builder16.callbackExecutor;
        builder0.callbackExecutor = executor24;
        retrofit.RestAdapter.Log log26 = builder0.log;
        retrofit.Server server27 = builder0.server;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNull(server27);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.Profiler profiler16 = null;
        builder0.profiler = profiler16;
        java.util.concurrent.Executor executor18 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder19 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel20 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder21 = builder19.setLogLevel(logLevel20);
        retrofit.RestAdapter.Log log22 = builder19.log;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler25 = builder23.errorHandler;
        builder23.ensureSaneDefaults();
        retrofit.RestAdapter.Log log27 = builder23.log;
        retrofit.Profiler profiler28 = null;
        builder23.profiler = profiler28;
        retrofit.client.Client.Provider provider30 = builder23.getclientProvider();
        retrofit.RestAdapter.Builder builder31 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.Server server34 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder36 = builder31.setConverter((retrofit.converter.Converter) gsonConverter35);
        builder31.ensureSaneDefaults();
        java.util.concurrent.Executor executor38 = null;
        builder31.httpExecutor = executor38;
        retrofit.client.Client.Provider provider40 = builder31.getclientProvider();
        builder23.setclientProvider(provider40);
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.Server server46 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log61;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor52, (retrofit.converter.Converter) gsonConverter56, profiler57, errorHandler58, log61, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder42.setRequestInterceptor(requestInterceptor52);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        builder65.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        builder82.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = builder82.getcallbackExecutor();
        builder65.sethttpExecutor(executor84);
        java.util.concurrent.Executor executor86 = builder65.gethttpExecutor();
        builder23.sethttpExecutor(executor86);
        builder19.callbackExecutor = executor86;
        builder0.httpExecutor = executor86;
        java.util.concurrent.Executor executor90 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel20 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel20.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNull(log22);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(errorHandler25);
        org.junit.Assert.assertNotNull(log27);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(provider40);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNull(executor90);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor12 = restAdapter10.getcallbackExecutor();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.Server server16 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider17 = null;
        java.util.concurrent.Executor executor18 = null;
        java.util.concurrent.Executor executor19 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter20 = new retrofit.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor22 = serializedObjectSupporter20.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.Server server25 = serializedObjectSupporter23.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter23.deserializeObjectConverter6();
        retrofit.Profiler profiler27 = null;
        retrofit.ErrorHandler errorHandler28 = null;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = builder29.serializedObjectSupporter;
        retrofit.RestAdapter.Log log31 = retrofit.RestAdapter.Log.NONE;
        builder29.log = log31;
        retrofit.RestAdapter.LogLevel logLevel33 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter34 = new retrofit.RestAdapter(server16, provider17, executor18, executor19, requestInterceptor22, (retrofit.converter.Converter) gsonConverter26, profiler27, errorHandler28, log31, logLevel33);
        retrofit.Server server35 = restAdapter34.server;
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = restAdapter34.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel37 = restAdapter34.logLevel;
        boolean boolean38 = logLevel37.log();
        restAdapter10.logLevel = logLevel37;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        java.lang.String str44 = serializedObjectSupporter40.deserializeObjectString2();
        java.lang.String str45 = serializedObjectSupporter40.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        restAdapter10.serializedObjectSupporter = serializedObjectSupporter40;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(executor12);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(server25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertTrue("'" + logLevel33 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel33.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNull(serializedObjectSupporter36);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-Idle" + "'", str44, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler46);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        java.util.concurrent.Executor executor2 = builder0.httpExecutor;
        java.util.concurrent.Executor executor3 = builder0.getcallbackExecutor();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertNull(executor2);
        org.junit.Assert.assertNull(executor3);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.Server server8 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder21.serializedObjectSupporter;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log23, logLevel25);
        retrofit.Server server27 = restAdapter26.server;
        retrofit.RestAdapter.Log log28 = restAdapter26.log;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter26.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.Server server34 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter6();
        java.lang.String str36 = serializedObjectSupporter32.deserializeObjectString2();
        java.lang.String str37 = serializedObjectSupporter32.deserializeObjectString4();
        java.lang.String str38 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.client.Response response39 = serializedObjectSupporter32.deserializeObjectResponse2();
        retrofit.client.Response response41 = restAdapter26.logAndReplaceResponse("", response39, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter26.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder0.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.Server server47 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        builder44.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        java.lang.String str55 = serializedObjectSupporter51.deserializeObjectString2();
        java.lang.String str56 = serializedObjectSupporter51.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter51.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder58 = builder44.setErrorHandler(errorHandler57);
        builder58.ensureSaneDefaults();
        java.util.concurrent.Executor executor60 = builder58.getcallbackExecutor();
        java.util.concurrent.Executor executor61 = builder58.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor62 = builder58.requestInterceptor;
        retrofit.client.Client.Provider provider63 = builder58.getclientProvider();
        retrofit.RestAdapter.Builder builder64 = builder43.setClient(provider63);
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder64.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-Idle" + "'", str55, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("hi!", "Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = builder14.setServer(server44);
        retrofit.ErrorHandler errorHandler46 = builder45.errorHandler;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = null;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        java.lang.String str60 = restAdapter57.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean62 = logLevel61.log();
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder64 = builder45.setLogLevel(logLevel61);
        java.util.concurrent.Executor executor65 = builder45.httpExecutor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Retrofit-" + "'", str60, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(executor65);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.Profiler profiler37 = builder23.profiler;
        retrofit.RestAdapter.Log log38 = builder23.log;
        retrofit.converter.Converter converter39 = builder23.converter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNull(profiler37);
        org.junit.Assert.assertNull(log38);
        org.junit.Assert.assertNull(converter39);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.Server server8 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider9 = null;
        java.util.concurrent.Executor executor10 = null;
        java.util.concurrent.Executor executor11 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor14 = serializedObjectSupporter12.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        retrofit.Profiler profiler19 = null;
        retrofit.ErrorHandler errorHandler20 = null;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder21.serializedObjectSupporter;
        retrofit.RestAdapter.Log log23 = retrofit.RestAdapter.Log.NONE;
        builder21.log = log23;
        retrofit.RestAdapter.LogLevel logLevel25 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter26 = new retrofit.RestAdapter(server8, provider9, executor10, executor11, requestInterceptor14, (retrofit.converter.Converter) gsonConverter18, profiler19, errorHandler20, log23, logLevel25);
        retrofit.Server server27 = restAdapter26.server;
        retrofit.RestAdapter.Log log28 = restAdapter26.log;
        retrofit.RestAdapter.RestHandler restHandler29 = restAdapter26.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel30 = restAdapter26.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.Server server34 = serializedObjectSupporter32.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter35 = serializedObjectSupporter32.deserializeObjectConverter6();
        java.lang.String str36 = serializedObjectSupporter32.deserializeObjectString2();
        java.lang.String str37 = serializedObjectSupporter32.deserializeObjectString4();
        java.lang.String str38 = serializedObjectSupporter32.deserializeObjectString4();
        retrofit.client.Response response39 = serializedObjectSupporter32.deserializeObjectResponse2();
        retrofit.client.Response response41 = restAdapter26.logAndReplaceResponse("", response39, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel42 = restAdapter26.logLevel;
        retrofit.RestAdapter.Builder builder43 = builder0.setLogLevel(logLevel42);
        retrofit.RestAdapter.Builder builder44 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.Server server47 = serializedObjectSupporter45.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter48 = serializedObjectSupporter45.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder49 = builder44.setConverter((retrofit.converter.Converter) gsonConverter48);
        builder44.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        java.lang.String str55 = serializedObjectSupporter51.deserializeObjectString2();
        java.lang.String str56 = serializedObjectSupporter51.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler57 = serializedObjectSupporter51.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder58 = builder44.setErrorHandler(errorHandler57);
        builder58.ensureSaneDefaults();
        java.util.concurrent.Executor executor60 = builder58.getcallbackExecutor();
        java.util.concurrent.Executor executor61 = builder58.callbackExecutor;
        retrofit.RequestInterceptor requestInterceptor62 = builder58.requestInterceptor;
        retrofit.client.Client.Provider provider63 = builder58.getclientProvider();
        retrofit.RestAdapter.Builder builder64 = builder43.setClient(provider63);
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Builder builder67 = builder64.setServer("hi!");
        retrofit.Profiler profiler68 = null;
        builder64.profiler = profiler68;
        retrofit.RestAdapter restAdapter70 = builder64.build();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNotNull(log23);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertNotNull(log28);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(server34);
        org.junit.Assert.assertNotNull(gsonConverter35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Retrofit-Idle" + "'", str36, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(response39);
        org.junit.Assert.assertNotNull(response41);
        org.junit.Assert.assertTrue("'" + logLevel42 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel42.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(gsonConverter48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Retrofit-Idle" + "'", str55, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(executor60);
        org.junit.Assert.assertNotNull(executor61);
        org.junit.Assert.assertNotNull(requestInterceptor62);
        org.junit.Assert.assertNotNull(provider63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(restAdapter70);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = builder5.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler7 = builder5.errorHandler;
        builder5.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler9 = builder5.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = new retrofit.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString9();
        retrofit.Server server12 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter13 = serializedObjectSupporter10.deserializeObjectConverter6();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString2();
        java.lang.String str15 = serializedObjectSupporter10.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler16 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        retrofit.Server server17 = serializedObjectSupporter10.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter10.deserializeObjectErrorHandler1();
        builder5.errorHandler = errorHandler18;
        retrofit.RestAdapter.Builder builder20 = builder0.setErrorHandler(errorHandler18);
        retrofit.client.Client.Provider provider21 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(requestInterceptor4);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(errorHandler7);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(server12);
        org.junit.Assert.assertNotNull(gsonConverter13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider21);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class9 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter7();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter0.deserializeObjectConverter1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(class9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter12);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.ErrorHandler errorHandler9 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter11 = serializedObjectSupporter0.deserializeObjectConverter8();
        retrofit.client.Response response12 = serializedObjectSupporter0.deserializeObjectResponse3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(errorHandler9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter11);
        org.junit.Assert.assertNotNull(response12);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider14 = restAdapter10.getclientProvider();
        java.util.concurrent.Executor executor15 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response6 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-Idle" + "'", str5, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response6);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        retrofit.Server server2 = new retrofit.Server("Retrofit-Idle", "http://example.com/");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("default", "default", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("Retrofit-", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "http://example.com/", headerList17, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("default", "http://example.com/", headerList17, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("Retrofit-Idle", "Retrofit-Idle", headerList17, typedOutput28);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.ErrorHandler errorHandler14 = restAdapter10.errorHandler;
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(errorHandler14);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter6();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        builder0.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Server server55 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor61, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler67, log70, logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder51.setRequestInterceptor(requestInterceptor61);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        builder74.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        builder74.clientProvider = provider86;
        retrofit.RestAdapter.Builder builder88 = builder0.setClient(provider86);
        retrofit.client.Client.Provider provider89 = builder0.getclientProvider();
        retrofit.Server server90 = builder0.server;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(provider89);
        org.junit.Assert.assertNull(server90);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.converter.Converter converter21 = restAdapter20.getconverter();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = restHandler22.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(converter21);
        org.junit.Assert.assertNull(serializedObjectSupporter23);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.client.Client.Provider provider15 = builder14.clientProvider;
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter17 = builder16.converter;
        retrofit.client.Client.Provider provider18 = null;
        builder16.setclientProvider(provider18);
        retrofit.Server server20 = builder16.server;
        retrofit.RestAdapter.Builder builder21 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = builder21.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler23 = builder21.errorHandler;
        builder21.ensureSaneDefaults();
        retrofit.RestAdapter.Log log25 = builder21.log;
        retrofit.Profiler profiler26 = null;
        builder21.profiler = profiler26;
        retrofit.client.Client.Provider provider28 = builder21.getclientProvider();
        java.util.concurrent.Executor executor29 = builder21.callbackExecutor;
        retrofit.Profiler profiler30 = builder21.profiler;
        retrofit.client.Client.Provider provider31 = builder21.getclientProvider();
        retrofit.RestAdapter.Builder builder32 = builder16.setClient(provider31);
        builder14.clientProvider = provider31;
        java.util.concurrent.Executor executor34 = builder14.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(provider15);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(server20);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(errorHandler23);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNotNull(provider28);
        org.junit.Assert.assertNotNull(executor29);
        org.junit.Assert.assertNull(profiler30);
        org.junit.Assert.assertNotNull(provider31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(executor34);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server14 = restAdapter12.server;
        java.lang.String str15 = server14.getName();
        java.lang.String str16 = server14.getDEFAULT_NAME();
        java.lang.String str17 = server14.getUrl();
        java.lang.String str18 = server14.getUrl();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "default" + "'", str16, "default");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = null;
        retrofit.client.Request request9 = new retrofit.client.Request("default", "Retrofit-Idle", headerList7, typedOutput8);
        java.lang.String str10 = request9.getMethod();
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "default" + "'", str10, "default");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("hi!", "Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = builder14.setServer(server44);
        retrofit.Server server46 = builder45.server;
        retrofit.client.Client client47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder45.setClient(client47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(server46);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.Server server18 = restAdapter10.server;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(server18);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        java.lang.String str15 = restAdapter10.getIDLE_THREAD_NAME();
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.ErrorHandler errorHandler92 = restAdapter91.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler93 = restAdapter91.new RestHandler();
        java.lang.Class<?> wildcardClass94 = restAdapter91.getClass();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(errorHandler92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(logLevel12);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder13 = builder8.setConverter((retrofit.converter.Converter) gsonConverter12);
        builder8.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler21 = serializedObjectSupporter15.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder22 = builder8.setErrorHandler(errorHandler21);
        builder22.ensureSaneDefaults();
        java.util.concurrent.Executor executor24 = builder22.getcallbackExecutor();
        builder4.httpExecutor = executor24;
        builder0.httpExecutor = executor24;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler29 = builder27.errorHandler;
        builder27.ensureSaneDefaults();
        retrofit.RestAdapter.Log log31 = builder27.log;
        retrofit.Profiler profiler32 = null;
        builder27.profiler = profiler32;
        retrofit.client.Client.Provider provider34 = builder27.getclientProvider();
        retrofit.RestAdapter.Builder builder35 = builder0.setClient(provider34);
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = builder36.serializedObjectSupporter;
        retrofit.RestAdapter.Log log38 = retrofit.RestAdapter.Log.NONE;
        builder36.log = log38;
        retrofit.Server server40 = builder36.server;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter42 = builder41.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter43.deserializeObjectErrorHandler1();
        builder41.errorHandler = errorHandler49;
        retrofit.RestAdapter.Builder builder51 = builder36.setErrorHandler(errorHandler49);
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder53.serializedObjectSupporter;
        retrofit.RestAdapter.Log log55 = retrofit.RestAdapter.Log.NONE;
        builder53.log = log55;
        log55.log("default");
        builder52.log = log55;
        builder51.log = log55;
        retrofit.RestAdapter.Builder builder61 = builder35.setLog(log55);
        java.util.concurrent.Executor executor62 = builder61.callbackExecutor;
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder68 = builder63.setConverter((retrofit.converter.Converter) gsonConverter67);
        builder63.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        java.lang.String str71 = serializedObjectSupporter70.deserializeObjectString9();
        retrofit.Server server72 = serializedObjectSupporter70.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter6();
        java.lang.String str74 = serializedObjectSupporter70.deserializeObjectString2();
        java.lang.String str75 = serializedObjectSupporter70.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter70.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder77 = builder63.setErrorHandler(errorHandler76);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor79 = builder77.getcallbackExecutor();
        java.util.concurrent.Executor executor80 = builder77.callbackExecutor;
        builder61.callbackExecutor = executor80;
        retrofit.ErrorHandler errorHandler82 = builder61.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNull(errorHandler29);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(provider34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNull(serializedObjectSupporter37);
        org.junit.Assert.assertNotNull(log38);
        org.junit.Assert.assertNull(server40);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertNotNull(log55);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(executor62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-Idle" + "'", str74, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "http://example.com/" + "'", str75, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(executor80);
        org.junit.Assert.assertNotNull(errorHandler82);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("default");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString2();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = builder39.setErrorHandler(errorHandler52);
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.getcallbackExecutor();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str68 = serializedObjectSupporter64.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder71 = builder57.setErrorHandler(errorHandler70);
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.getcallbackExecutor();
        builder53.sethttpExecutor(executor73);
        builder38.setcallbackExecutor(executor73);
        java.util.concurrent.Executor executor76 = builder38.callbackExecutor;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        retrofit.RestAdapter.Builder builder87 = builder38.setClient(provider86);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder89 = builder38.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-Idle" + "'", str68, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNotNull(executor76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.Profiler profiler12 = restAdapter10.profiler;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        java.lang.Class<?> wildcardClass14 = restAdapter10.getClass();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(profiler12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        retrofit.RequestInterceptor requestInterceptor94 = restAdapter91.requestInterceptor;
        retrofit.client.Client.Provider provider95 = restAdapter91.getclientProvider();
        retrofit.RequestInterceptor requestInterceptor96 = restAdapter91.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log93);
        org.junit.Assert.assertNotNull(requestInterceptor94);
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNotNull(requestInterceptor96);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString10();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse3();
        retrofit.Server server9 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(response8);
        org.junit.Assert.assertNotNull(server9);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        java.lang.String str30 = serializedObjectSupporter26.deserializeObjectString2();
        java.lang.String str31 = serializedObjectSupporter26.deserializeObjectString4();
        java.lang.String str32 = serializedObjectSupporter26.deserializeObjectString4();
        retrofit.client.Response response33 = serializedObjectSupporter26.deserializeObjectResponse2();
        retrofit.client.Response response35 = restAdapter20.logAndReplaceResponse("", response33, (long) '#');
        retrofit.RestAdapter.LogLevel logLevel36 = restAdapter20.logLevel;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.HEADERS;
        restAdapter20.setLogLevel(logLevel37);
        retrofit.Server server41 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider42 = null;
        java.util.concurrent.Executor executor43 = null;
        java.util.concurrent.Executor executor44 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter45 = new retrofit.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor47 = serializedObjectSupporter45.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.Server server50 = serializedObjectSupporter48.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter51 = serializedObjectSupporter48.deserializeObjectConverter6();
        retrofit.Profiler profiler52 = null;
        retrofit.ErrorHandler errorHandler53 = null;
        retrofit.RestAdapter.Builder builder54 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = builder54.serializedObjectSupporter;
        retrofit.RestAdapter.Log log56 = retrofit.RestAdapter.Log.NONE;
        builder54.log = log56;
        retrofit.RestAdapter.LogLevel logLevel58 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter59 = new retrofit.RestAdapter(server41, provider42, executor43, executor44, requestInterceptor47, (retrofit.converter.Converter) gsonConverter51, profiler52, errorHandler53, log56, logLevel58);
        retrofit.Server server60 = restAdapter59.server;
        retrofit.Profiler profiler61 = restAdapter59.profiler;
        java.util.concurrent.Executor executor62 = restAdapter59.getcallbackExecutor();
        java.util.concurrent.Executor executor63 = restAdapter59.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel64 = restAdapter59.getLogLevel();
        restAdapter20.logLevel = logLevel64;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Retrofit-Idle" + "'", str30, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(response33);
        org.junit.Assert.assertNotNull(response35);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(server50);
        org.junit.Assert.assertNotNull(gsonConverter51);
        org.junit.Assert.assertNull(serializedObjectSupporter55);
        org.junit.Assert.assertNotNull(log56);
        org.junit.Assert.assertTrue("'" + logLevel58 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel58.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNull(profiler61);
        org.junit.Assert.assertNull(executor62);
        org.junit.Assert.assertNull(executor63);
        org.junit.Assert.assertTrue("'" + logLevel64 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel64.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = builder11.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler13 = builder11.errorHandler;
        builder11.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.Server server24 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter6();
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter22.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder29 = builder15.setErrorHandler(errorHandler28);
        builder29.ensureSaneDefaults();
        java.util.concurrent.Executor executor31 = builder29.getcallbackExecutor();
        builder11.httpExecutor = executor31;
        builder7.httpExecutor = executor31;
        retrofit.RestAdapter.Builder builder34 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder39 = builder34.setConverter((retrofit.converter.Converter) gsonConverter38);
        builder34.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString9();
        retrofit.Server server43 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter6();
        java.lang.String str45 = serializedObjectSupporter41.deserializeObjectString2();
        java.lang.String str46 = serializedObjectSupporter41.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler47 = serializedObjectSupporter41.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder48 = builder34.setErrorHandler(errorHandler47);
        builder48.ensureSaneDefaults();
        java.util.concurrent.Executor executor50 = builder48.getcallbackExecutor();
        builder7.callbackExecutor = executor50;
        builder0.setcallbackExecutor(executor50);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
        org.junit.Assert.assertNull(errorHandler13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(executor31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Retrofit-Idle" + "'", str45, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "http://example.com/" + "'", str46, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(executor50);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        retrofit.Server server2 = new retrofit.Server("", "http://example.com");
        java.lang.String str3 = server2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com" + "'", str3, "http://example.com");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        java.util.concurrent.Executor executor15 = restAdapter10.gethttpExecutor();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        restAdapter10.serializedObjectSupporter = serializedObjectSupporter16;
        retrofit.RequestInterceptor requestInterceptor18 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(requestInterceptor18);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList7, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList7, typedOutput13);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        retrofit.Server server2 = new retrofit.Server("default", "");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter10.requestInterceptor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(requestInterceptor14);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel2 = null;
        builder0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter6 = builder5.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        builder5.errorHandler = errorHandler13;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter22 = new retrofit.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString9();
        retrofit.Server server24 = serializedObjectSupporter22.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter25 = serializedObjectSupporter22.deserializeObjectConverter6();
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter22.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler28 = serializedObjectSupporter22.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder29 = builder15.setErrorHandler(errorHandler28);
        retrofit.RestAdapter.Builder builder30 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = builder30.serializedObjectSupporter;
        retrofit.Server server34 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider35 = null;
        java.util.concurrent.Executor executor36 = null;
        java.util.concurrent.Executor executor37 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = new retrofit.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor40 = serializedObjectSupporter38.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = new retrofit.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString9();
        retrofit.Server server43 = serializedObjectSupporter41.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter44 = serializedObjectSupporter41.deserializeObjectConverter6();
        retrofit.Profiler profiler45 = null;
        retrofit.ErrorHandler errorHandler46 = null;
        retrofit.RestAdapter.Builder builder47 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = builder47.serializedObjectSupporter;
        retrofit.RestAdapter.Log log49 = retrofit.RestAdapter.Log.NONE;
        builder47.log = log49;
        retrofit.RestAdapter.LogLevel logLevel51 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter52 = new retrofit.RestAdapter(server34, provider35, executor36, executor37, requestInterceptor40, (retrofit.converter.Converter) gsonConverter44, profiler45, errorHandler46, log49, logLevel51);
        retrofit.RestAdapter.Builder builder53 = builder30.setRequestInterceptor(requestInterceptor40);
        builder29.requestInterceptor = requestInterceptor40;
        builder5.requestInterceptor = requestInterceptor40;
        retrofit.RestAdapter.Builder builder56 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter57 = builder56.serializedObjectSupporter;
        retrofit.Server server60 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider61 = null;
        java.util.concurrent.Executor executor62 = null;
        java.util.concurrent.Executor executor63 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor66 = serializedObjectSupporter64.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter67 = new retrofit.SerializedObjectSupporter();
        java.lang.String str68 = serializedObjectSupporter67.deserializeObjectString9();
        retrofit.Server server69 = serializedObjectSupporter67.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter70 = serializedObjectSupporter67.deserializeObjectConverter6();
        retrofit.Profiler profiler71 = null;
        retrofit.ErrorHandler errorHandler72 = null;
        retrofit.RestAdapter.Builder builder73 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter74 = builder73.serializedObjectSupporter;
        retrofit.RestAdapter.Log log75 = retrofit.RestAdapter.Log.NONE;
        builder73.log = log75;
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter78 = new retrofit.RestAdapter(server60, provider61, executor62, executor63, requestInterceptor66, (retrofit.converter.Converter) gsonConverter70, profiler71, errorHandler72, log75, logLevel77);
        retrofit.RestAdapter.Builder builder79 = builder56.setRequestInterceptor(requestInterceptor66);
        retrofit.RestAdapter.LogLevel logLevel80 = retrofit.RestAdapter.LogLevel.BASIC;
        builder79.logLevel = logLevel80;
        retrofit.RestAdapter.Builder builder82 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter83 = new retrofit.SerializedObjectSupporter();
        java.lang.String str84 = serializedObjectSupporter83.deserializeObjectString9();
        retrofit.Server server85 = serializedObjectSupporter83.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter86 = serializedObjectSupporter83.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder87 = builder82.setConverter((retrofit.converter.Converter) gsonConverter86);
        builder82.ensureSaneDefaults();
        java.util.concurrent.Executor executor89 = null;
        builder82.httpExecutor = executor89;
        retrofit.client.Client.Provider provider91 = builder82.getclientProvider();
        builder79.clientProvider = provider91;
        retrofit.RestAdapter.Builder builder93 = builder5.setClient(provider91);
        builder0.setclientProvider(provider91);
        retrofit.Profiler profiler95 = builder0.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(server24);
        org.junit.Assert.assertNotNull(gsonConverter25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Retrofit-Idle" + "'", str26, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNull(serializedObjectSupporter31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "http://example.com/" + "'", str39, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "http://example.com/" + "'", str42, "http://example.com/");
        org.junit.Assert.assertNotNull(server43);
        org.junit.Assert.assertNotNull(gsonConverter44);
        org.junit.Assert.assertNull(serializedObjectSupporter48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertTrue("'" + logLevel51 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel51.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(serializedObjectSupporter57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "http://example.com/" + "'", str68, "http://example.com/");
        org.junit.Assert.assertNotNull(server69);
        org.junit.Assert.assertNotNull(gsonConverter70);
        org.junit.Assert.assertNull(serializedObjectSupporter74);
        org.junit.Assert.assertNotNull(log75);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + logLevel80 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel80.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "http://example.com/" + "'", str84, "http://example.com/");
        org.junit.Assert.assertNotNull(server85);
        org.junit.Assert.assertNotNull(gsonConverter86);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(provider91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNull(profiler95);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("default", "default", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "http://example.com", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com", "", headerList13, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-Idle", "http://example.com/", headerList13, typedOutput20);
        java.lang.String str22 = request21.getMethod();
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        java.util.concurrent.Executor executor23 = restAdapter20.getcallbackExecutor();
        java.util.concurrent.Executor executor24 = restAdapter20.gethttpExecutor();
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        retrofit.Server server26 = restAdapter20.server;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(executor24);
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server26);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("default", "default", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com", "", headerList11, typedOutput16);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("default", "default", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "hi!", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "http://example.com/", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "http://example.com/", headerList15, typedOutput24);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter12.requestInterceptor;
        java.lang.String str14 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server15 = restAdapter12.server;
        retrofit.converter.Converter converter16 = restAdapter12.converter;
        java.util.concurrent.Executor executor17 = restAdapter12.getcallbackExecutor();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter12.new RestHandler();
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(executor17);
        org.junit.Assert.assertNull(logLevel18);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        java.lang.String str21 = server2.getapiUrl();
        java.lang.String str22 = server2.name;
        java.lang.String str23 = server2.name;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-" + "'", str21, "Retrofit-");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel12 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.RestHandler restHandler14 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = null;
        restAdapter10.serializedObjectSupporter = serializedObjectSupporter15;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(logLevel12);
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler8 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean14 = logLevel13.log();
        builder10.logLevel = logLevel13;
        retrofit.Server server17 = new retrofit.Server("hi!");
        builder10.server = server17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response22 = serializedObjectSupporter19.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter19.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder24 = builder10.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.converter.Converter converter25 = builder10.converter;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        java.lang.String str38 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder40 = builder26.setErrorHandler(errorHandler39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.Server server45 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder58.log = log60;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor51, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler57, log60, logLevel62);
        retrofit.RestAdapter.Builder builder64 = builder41.setRequestInterceptor(requestInterceptor51);
        builder40.requestInterceptor = requestInterceptor51;
        retrofit.RestAdapter.Builder builder67 = builder40.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        retrofit.client.Client.Provider provider83 = builder82.clientProvider;
        retrofit.RestAdapter.Builder builder84 = builder67.setClient(provider83);
        builder10.setclientProvider(provider83);
        retrofit.RestAdapter.Builder builder86 = builder9.setClient(provider83);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = builder87.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler89 = builder87.errorHandler;
        builder87.ensureSaneDefaults();
        retrofit.RestAdapter.Log log91 = builder87.log;
        retrofit.Profiler profiler92 = null;
        builder87.profiler = profiler92;
        retrofit.client.Client.Provider provider94 = builder87.getclientProvider();
        retrofit.RestAdapter.Builder builder95 = builder86.setClient(provider94);
        retrofit.client.Client client96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder97 = builder95.setClient(client96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(response22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(serializedObjectSupporter88);
        org.junit.Assert.assertNull(errorHandler89);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(provider94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.ErrorHandler errorHandler16 = restAdapter10.errorHandler;
        java.util.concurrent.Executor executor17 = restAdapter10.httpExecutor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(errorHandler16);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("Retrofit-Idle");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.Server server46 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider47 = null;
        java.util.concurrent.Executor executor48 = null;
        java.util.concurrent.Executor executor49 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor52 = serializedObjectSupporter50.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.Profiler profiler57 = null;
        retrofit.ErrorHandler errorHandler58 = null;
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.RestAdapter.Log log61 = retrofit.RestAdapter.Log.NONE;
        builder59.log = log61;
        retrofit.RestAdapter.LogLevel logLevel63 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter64 = new retrofit.RestAdapter(server46, provider47, executor48, executor49, requestInterceptor52, (retrofit.converter.Converter) gsonConverter56, profiler57, errorHandler58, log61, logLevel63);
        retrofit.RestAdapter.Builder builder65 = builder42.setRequestInterceptor(requestInterceptor52);
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        builder65.logLevel = logLevel66;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        java.util.concurrent.Executor executor75 = null;
        builder68.httpExecutor = executor75;
        retrofit.client.Client.Provider provider77 = builder68.getclientProvider();
        retrofit.RestAdapter.Builder builder78 = builder65.setClient(provider77);
        retrofit.Profiler profiler79 = builder65.profiler;
        retrofit.RestAdapter.Builder builder80 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel81 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder82 = builder80.setLogLevel(logLevel81);
        retrofit.converter.Converter converter83 = builder82.converter;
        retrofit.RestAdapter.Builder builder84 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = builder84.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler86 = builder84.errorHandler;
        builder84.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler88 = builder84.errorHandler;
        retrofit.RestAdapter.Builder builder89 = builder82.setErrorHandler(errorHandler88);
        builder65.errorHandler = errorHandler88;
        retrofit.RestAdapter.Builder builder91 = builder14.setErrorHandler(errorHandler88);
        retrofit.Server server92 = builder91.server;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNotNull(log61);
        org.junit.Assert.assertTrue("'" + logLevel63 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel63.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(provider77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNull(profiler79);
        org.junit.Assert.assertTrue("'" + logLevel81 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel81.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNull(converter83);
        org.junit.Assert.assertNull(serializedObjectSupporter85);
        org.junit.Assert.assertNull(errorHandler86);
        org.junit.Assert.assertNotNull(errorHandler88);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(server92);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString8();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse4();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter2();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(gsonConverter9);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        retrofit.Server server2 = new retrofit.Server("Retrofit-Idle", "hi!");
        java.lang.String str3 = server2.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        java.util.concurrent.Executor executor6 = builder0.getcallbackExecutor();
        retrofit.RestAdapter.Builder builder8 = builder0.setServer("http://example.com/");
        retrofit.ErrorHandler errorHandler9 = builder0.errorHandler;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.Server server14 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor20 = serializedObjectSupporter18.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = new retrofit.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString9();
        retrofit.Server server23 = serializedObjectSupporter21.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter24 = serializedObjectSupporter21.deserializeObjectConverter6();
        retrofit.Profiler profiler25 = null;
        retrofit.ErrorHandler errorHandler26 = null;
        retrofit.RestAdapter.Builder builder27 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = builder27.serializedObjectSupporter;
        retrofit.RestAdapter.Log log29 = retrofit.RestAdapter.Log.NONE;
        builder27.log = log29;
        retrofit.RestAdapter.LogLevel logLevel31 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter32 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor20, (retrofit.converter.Converter) gsonConverter24, profiler25, errorHandler26, log29, logLevel31);
        retrofit.RestAdapter.Builder builder33 = builder10.setRequestInterceptor(requestInterceptor20);
        retrofit.RestAdapter.LogLevel logLevel34 = retrofit.RestAdapter.LogLevel.BASIC;
        builder33.logLevel = logLevel34;
        retrofit.RestAdapter.Builder builder36 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString9();
        retrofit.Server server39 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder41 = builder36.setConverter((retrofit.converter.Converter) gsonConverter40);
        builder36.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        java.lang.String str47 = serializedObjectSupporter43.deserializeObjectString2();
        java.lang.String str48 = serializedObjectSupporter43.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter43.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder50 = builder36.setErrorHandler(errorHandler49);
        builder50.ensureSaneDefaults();
        java.util.concurrent.Executor executor52 = builder50.getcallbackExecutor();
        builder33.sethttpExecutor(executor52);
        java.util.concurrent.Executor executor54 = builder33.gethttpExecutor();
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder60 = builder55.setConverter((retrofit.converter.Converter) gsonConverter59);
        retrofit.ErrorHandler errorHandler61 = builder55.errorHandler;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log64;
        retrofit.Server server66 = builder62.server;
        retrofit.RestAdapter.Builder builder67 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter68 = new retrofit.SerializedObjectSupporter();
        java.lang.String str69 = serializedObjectSupporter68.deserializeObjectString9();
        retrofit.Server server70 = serializedObjectSupporter68.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter71 = serializedObjectSupporter68.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder72 = builder67.setConverter((retrofit.converter.Converter) gsonConverter71);
        builder67.ensureSaneDefaults();
        java.util.concurrent.Executor executor74 = null;
        builder67.httpExecutor = executor74;
        retrofit.client.Client.Provider provider76 = builder67.getclientProvider();
        builder62.setclientProvider(provider76);
        retrofit.RestAdapter.Builder builder78 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = builder78.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler80 = builder78.errorHandler;
        builder78.ensureSaneDefaults();
        retrofit.RestAdapter.Log log82 = builder78.log;
        retrofit.Profiler profiler83 = null;
        builder78.profiler = profiler83;
        retrofit.client.Client.Provider provider85 = builder78.getclientProvider();
        java.util.concurrent.Executor executor86 = builder78.callbackExecutor;
        builder62.callbackExecutor = executor86;
        builder55.sethttpExecutor(executor86);
        retrofit.RestAdapter.Builder builder89 = builder0.setExecutors(executor54, executor86);
        java.util.concurrent.Executor executor90 = builder0.callbackExecutor;
        retrofit.Profiler profiler91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder92 = builder0.setProfiler(profiler91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Profiler may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(executor6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(gsonConverter24);
        org.junit.Assert.assertNull(serializedObjectSupporter28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + logLevel31 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel31.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + logLevel34 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel34.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Retrofit-Idle" + "'", str47, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(executor52);
        org.junit.Assert.assertNotNull(executor54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertNull(server66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(server70);
        org.junit.Assert.assertNotNull(gsonConverter71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(provider76);
        org.junit.Assert.assertNull(serializedObjectSupporter79);
        org.junit.Assert.assertNull(errorHandler80);
        org.junit.Assert.assertNotNull(log82);
        org.junit.Assert.assertNotNull(provider85);
        org.junit.Assert.assertNotNull(executor86);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(executor90);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        retrofit.client.Response response7 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString3();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter0.deserializeObjectConverter4();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(response7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-" + "'", str9, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "http://example.com/" + "'", str11, "http://example.com/");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = null;
        restAdapter12.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.RestAdapter.LogLevel logLevel16 = restAdapter12.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter12.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel18 = restAdapter12.logLevel;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(logLevel16);
        org.junit.Assert.assertNull(logLevel18);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        builder42.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.Server server51 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter49.deserializeObjectString2();
        java.lang.String str54 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder56 = builder42.setErrorHandler(errorHandler55);
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder58 = builder41.setClient(provider57);
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = new retrofit.SerializedObjectSupporter();
        java.lang.String str61 = serializedObjectSupporter60.deserializeObjectString9();
        retrofit.Server server62 = serializedObjectSupporter60.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter63 = serializedObjectSupporter60.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder64 = builder59.setConverter((retrofit.converter.Converter) gsonConverter63);
        builder59.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString9();
        retrofit.Server server68 = serializedObjectSupporter66.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter69 = serializedObjectSupporter66.deserializeObjectConverter6();
        java.lang.String str70 = serializedObjectSupporter66.deserializeObjectString2();
        java.lang.String str71 = serializedObjectSupporter66.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler72 = serializedObjectSupporter66.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder73 = builder59.setErrorHandler(errorHandler72);
        builder73.ensureSaneDefaults();
        java.util.concurrent.Executor executor75 = builder73.getcallbackExecutor();
        java.util.concurrent.Executor executor76 = builder73.callbackExecutor;
        builder58.httpExecutor = executor76;
        retrofit.Profiler profiler78 = null;
        builder58.profiler = profiler78;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "http://example.com/" + "'", str61, "http://example.com/");
        org.junit.Assert.assertNotNull(server62);
        org.junit.Assert.assertNotNull(gsonConverter63);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(server68);
        org.junit.Assert.assertNotNull(gsonConverter69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Retrofit-Idle" + "'", str70, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(executor75);
        org.junit.Assert.assertNotNull(executor76);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList34, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("Retrofit-", "Retrofit-Idle", (java.util.List<retrofit.client.Header>) headerList34, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("Retrofit-", "", (java.util.List<retrofit.client.Header>) headerList34, typedOutput42);
        retrofit.client.Request request44 = restAdapter20.logAndReplaceRequest(request43);
        java.util.List<retrofit.client.Header> headerList45 = request43.getHeaders();
        java.lang.String str46 = request43.getUrl();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(request44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter10.getrequestInterceptor();
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.Profiler profiler17 = restAdapter10.profiler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.Server server21 = serializedObjectSupporter19.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter6();
        java.lang.String str23 = serializedObjectSupporter19.deserializeObjectString2();
        java.lang.String str24 = serializedObjectSupporter19.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter19.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter26 = serializedObjectSupporter19.deserializeObjectConverter8();
        java.lang.String str27 = serializedObjectSupporter19.deserializeObjectString7();
        java.lang.Class class28 = serializedObjectSupporter19.deserializeObjectClass1();
        retrofit.client.Response response29 = serializedObjectSupporter19.deserializeObjectResponse4();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Response response31 = restAdapter10.logAndReplaceResponse("Retrofit-Idle", response29, (long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-Idle" + "'", str23, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(gsonConverter26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(class28);
        org.junit.Assert.assertNotNull(response29);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.RestAdapter.Log log93 = restAdapter91.log;
        log93.log("");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(log93);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.client.Client.Provider provider17 = restAdapter12.getclientProvider();
        java.util.concurrent.Executor executor18 = restAdapter12.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = restAdapter12.serializedObjectSupporter;
        retrofit.client.Client.Provider provider20 = restAdapter12.clientProvider;
        retrofit.ErrorHandler errorHandler21 = restAdapter12.errorHandler;
        retrofit.Profiler profiler22 = restAdapter12.getprofiler();
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.util.List<retrofit.client.Header> headerList30 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "http://example.com", headerList30, typedOutput31);
        java.lang.String str33 = request32.getMethod();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request34 = restAdapter12.logAndReplaceRequest(request32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(errorHandler21);
        org.junit.Assert.assertNull(profiler22);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString3();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter0.deserializeObjectConverter3();
        java.lang.Class class6 = serializedObjectSupporter0.deserializeObjectClass1();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://example.com/" + "'", str4, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertNotNull(class6);
        org.junit.Assert.assertNotNull(server7);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-" + "'", str7, "Retrofit-");
        org.junit.Assert.assertNotNull(gsonConverter8);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.Server server7 = serializedObjectSupporter0.deserializeObjectServer1();
        java.lang.String str8 = server7.name;
        java.lang.String str9 = server7.getUrl();
        java.lang.String str10 = server7.getUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "default" + "'", str8, "default");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com" + "'", str9, "http://example.com");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com" + "'", str10, "http://example.com");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder0.ensureSaneDefaults();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = null;
        restAdapter12.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = restAdapter12.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(serializedObjectSupporter16);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = null;
        retrofit.client.Request request9 = new retrofit.client.Request("hi!", "http://example.com", headerList7, typedOutput8);
        java.util.List<retrofit.client.Header> headerList10 = request9.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request9.getHeaders();
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        java.lang.String str25 = restAdapter20.getTHREAD_PREFIX();
        retrofit.RestAdapter.Log log26 = restAdapter20.log;
        retrofit.Server server27 = restAdapter20.server;
        java.lang.String str28 = server27.getDEFAULT_NAME();
        java.lang.String str29 = server27.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-" + "'", str25, "Retrofit-");
        org.junit.Assert.assertNotNull(log26);
        org.junit.Assert.assertNotNull(server27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "default" + "'", str28, "default");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor3 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse7();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Retrofit-" + "'", str5, "Retrofit-");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = null;
        retrofit.client.Request request9 = new retrofit.client.Request("hi!", "default", headerList7, typedOutput8);
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        retrofit.Profiler profiler26 = restAdapter20.getprofiler();
        retrofit.RestAdapter.RestHandler restHandler27 = restAdapter20.new RestHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(profiler26);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        java.util.List<retrofit.client.Header> headerList16 = null;
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("default", "default", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList19, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-", "hi!", headerList19, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "http://example.com/", headerList19, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "Retrofit-", headerList19, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("Retrofit-Idle", "hi!", headerList19, typedOutput30);
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("Retrofit-Idle", "default", headerList19, typedOutput32);
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler3 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.client.Response response4 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.RequestInterceptor requestInterceptor5 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter restAdapter6 = serializedObjectSupporter0.deserializeObjectLogLevel1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: retrofit.RestAdapter$LogLevel cannot be cast to retrofit.RestAdapter");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(errorHandler3);
        org.junit.Assert.assertNotNull(response4);
        org.junit.Assert.assertNotNull(requestInterceptor5);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.Profiler profiler11 = restAdapter10.getprofiler();
        retrofit.ErrorHandler errorHandler12 = restAdapter10.geterrorHandler();
        retrofit.RestAdapter.LogLevel logLevel13 = restAdapter10.logLevel;
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertNull(logLevel13);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        java.lang.String str21 = restAdapter20.getTHREAD_PREFIX();
        retrofit.RestAdapter.RestHandler restHandler22 = restAdapter20.new RestHandler();
        retrofit.Server server23 = restAdapter20.server;
        retrofit.RestAdapter.Log log24 = restAdapter20.log;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-" + "'", str21, "Retrofit-");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(log24);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel2 = null;
        builder0.logLevel = logLevel2;
        retrofit.client.Client.Provider provider4 = builder0.clientProvider;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.Server server14 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter6();
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        java.lang.String str17 = serializedObjectSupporter12.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler18 = serializedObjectSupporter12.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder19 = builder5.setErrorHandler(errorHandler18);
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.Server server24 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider25 = null;
        java.util.concurrent.Executor executor26 = null;
        java.util.concurrent.Executor executor27 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter28 = new retrofit.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor30 = serializedObjectSupporter28.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.Server server33 = serializedObjectSupporter31.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter34 = serializedObjectSupporter31.deserializeObjectConverter6();
        retrofit.Profiler profiler35 = null;
        retrofit.ErrorHandler errorHandler36 = null;
        retrofit.RestAdapter.Builder builder37 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter38 = builder37.serializedObjectSupporter;
        retrofit.RestAdapter.Log log39 = retrofit.RestAdapter.Log.NONE;
        builder37.log = log39;
        retrofit.RestAdapter.LogLevel logLevel41 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter42 = new retrofit.RestAdapter(server24, provider25, executor26, executor27, requestInterceptor30, (retrofit.converter.Converter) gsonConverter34, profiler35, errorHandler36, log39, logLevel41);
        retrofit.RestAdapter.Builder builder43 = builder20.setRequestInterceptor(requestInterceptor30);
        builder19.requestInterceptor = requestInterceptor30;
        retrofit.RestAdapter.Builder builder46 = builder19.setServer("http://example.com/");
        retrofit.Server server49 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log64;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log64, logLevel66);
        retrofit.RestAdapter.Builder builder68 = builder46.setLog(log64);
        java.util.concurrent.Executor executor69 = builder46.getcallbackExecutor();
        retrofit.RestAdapter.Log log70 = builder46.log;
        builder0.log = log70;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-Idle" + "'", str16, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(server33);
        org.junit.Assert.assertNotNull(gsonConverter34);
        org.junit.Assert.assertNull(serializedObjectSupporter38);
        org.junit.Assert.assertNotNull(log39);
        org.junit.Assert.assertTrue("'" + logLevel41 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel41.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(executor69);
        org.junit.Assert.assertNotNull(log70);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Profiler profiler9 = builder0.profiler;
        retrofit.RestAdapter.Log log10 = builder0.log;
        log10.log("");
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertNull(profiler9);
        org.junit.Assert.assertNotNull(log10);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder57.serializedObjectSupporter;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor50, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler56, log59, logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log59);
        retrofit.RequestInterceptor requestInterceptor64 = builder41.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(requestInterceptor64);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.Profiler profiler5 = null;
        builder0.profiler = profiler5;
        retrofit.client.Client.Provider provider7 = builder0.getclientProvider();
        java.util.concurrent.Executor executor8 = builder0.callbackExecutor;
        retrofit.Server server11 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider12 = null;
        java.util.concurrent.Executor executor13 = null;
        java.util.concurrent.Executor executor14 = null;
        retrofit.RequestInterceptor requestInterceptor15 = null;
        retrofit.converter.Converter converter16 = null;
        retrofit.Profiler profiler17 = null;
        retrofit.ErrorHandler errorHandler18 = null;
        retrofit.RestAdapter.Log log19 = null;
        retrofit.RestAdapter.LogLevel logLevel20 = null;
        retrofit.RestAdapter restAdapter21 = new retrofit.RestAdapter(server11, provider12, executor13, executor14, requestInterceptor15, converter16, profiler17, errorHandler18, log19, logLevel20);
        java.lang.String str22 = restAdapter21.getIDLE_THREAD_NAME();
        retrofit.Server server23 = restAdapter21.server;
        retrofit.RestAdapter.Builder builder24 = builder0.setServer(server23);
        retrofit.RestAdapter.Builder builder26 = builder0.setServer("http://example.com/");
        retrofit.Profiler profiler27 = builder0.profiler;
        retrofit.RestAdapter.LogLevel logLevel28 = builder0.logLevel;
        retrofit.RestAdapter.Builder builder29 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter30 = new retrofit.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString9();
        retrofit.Server server32 = serializedObjectSupporter30.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter33 = serializedObjectSupporter30.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder34 = builder29.setConverter((retrofit.converter.Converter) gsonConverter33);
        builder29.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        java.lang.String str40 = serializedObjectSupporter36.deserializeObjectString2();
        java.lang.String str41 = serializedObjectSupporter36.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler42 = serializedObjectSupporter36.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder43 = builder29.setErrorHandler(errorHandler42);
        builder43.ensureSaneDefaults();
        java.util.concurrent.Executor executor45 = builder43.getcallbackExecutor();
        java.util.concurrent.Executor executor46 = builder43.callbackExecutor;
        retrofit.Server server49 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider50 = null;
        java.util.concurrent.Executor executor51 = null;
        java.util.concurrent.Executor executor52 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor55 = serializedObjectSupporter53.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = new retrofit.SerializedObjectSupporter();
        java.lang.String str57 = serializedObjectSupporter56.deserializeObjectString9();
        retrofit.Server server58 = serializedObjectSupporter56.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter59 = serializedObjectSupporter56.deserializeObjectConverter6();
        retrofit.Profiler profiler60 = null;
        retrofit.ErrorHandler errorHandler61 = null;
        retrofit.RestAdapter.Builder builder62 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter63 = builder62.serializedObjectSupporter;
        retrofit.RestAdapter.Log log64 = retrofit.RestAdapter.Log.NONE;
        builder62.log = log64;
        retrofit.RestAdapter.LogLevel logLevel66 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter67 = new retrofit.RestAdapter(server49, provider50, executor51, executor52, requestInterceptor55, (retrofit.converter.Converter) gsonConverter59, profiler60, errorHandler61, log64, logLevel66);
        builder43.log = log64;
        java.util.concurrent.Executor executor69 = builder43.gethttpExecutor();
        builder0.callbackExecutor = executor69;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(provider7);
        org.junit.Assert.assertNotNull(executor8);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(profiler27);
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "http://example.com/" + "'", str31, "http://example.com/");
        org.junit.Assert.assertNotNull(server32);
        org.junit.Assert.assertNotNull(gsonConverter33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Retrofit-Idle" + "'", str40, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(executor45);
        org.junit.Assert.assertNotNull(executor46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "http://example.com/" + "'", str57, "http://example.com/");
        org.junit.Assert.assertNotNull(server58);
        org.junit.Assert.assertNotNull(gsonConverter59);
        org.junit.Assert.assertNull(serializedObjectSupporter63);
        org.junit.Assert.assertNotNull(log64);
        org.junit.Assert.assertTrue("'" + logLevel66 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel66.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(executor69);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("http://example.com/", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "Retrofit-", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "Retrofit-Idle", headerList11, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = request17.getBody();
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-Idle" + "'", str18, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNull(typedOutput20);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel10 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean11 = logLevel10.log();
        builder7.logLevel = logLevel10;
        retrofit.Server server14 = new retrofit.Server("hi!");
        builder7.server = server14;
        retrofit.RestAdapter.Builder builder16 = builder0.setServer(server14);
        retrofit.RestAdapter.LogLevel logLevel17 = builder0.logLevel;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertTrue("'" + logLevel10 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel10.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + logLevel17 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel17.equals(retrofit.RestAdapter.LogLevel.NONE));
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Log log4 = builder0.log;
        retrofit.RestAdapter.Log log5 = builder0.log;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.Server server21 = restAdapter20.server;
        retrofit.RestAdapter.Log log22 = restAdapter20.log;
        retrofit.RestAdapter.RestHandler restHandler23 = restAdapter20.new RestHandler();
        retrofit.RestAdapter.LogLevel logLevel24 = restAdapter20.logLevel;
        retrofit.RestAdapter.LogLevel logLevel25 = restAdapter20.getLogLevel();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter20.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = restHandler26.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel25 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel25.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(serializedObjectSupporter27);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString8();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter3);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler6 = serializedObjectSupporter0.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter7 = serializedObjectSupporter0.deserializeObjectConverter8();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString7();
        java.lang.Class class9 = serializedObjectSupporter0.deserializeObjectClass1();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString7();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler6);
        org.junit.Assert.assertNotNull(gsonConverter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(class9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter12.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter12.getclientProvider();
        retrofit.ErrorHandler errorHandler17 = restAdapter12.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(errorHandler17);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.Log log95 = restAdapter91.log;
        retrofit.client.Client.Provider provider96 = restAdapter91.clientProvider;
        retrofit.ErrorHandler errorHandler97 = restAdapter91.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertNull(errorHandler97);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.converter.Converter converter42 = builder41.converter;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = new retrofit.SerializedObjectSupporter();
        java.lang.String str45 = serializedObjectSupporter44.deserializeObjectString9();
        retrofit.Server server46 = serializedObjectSupporter44.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter47 = serializedObjectSupporter44.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder48 = builder43.setConverter((retrofit.converter.Converter) gsonConverter47);
        builder43.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.Server server52 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter6();
        java.lang.String str54 = serializedObjectSupporter50.deserializeObjectString2();
        java.lang.String str55 = serializedObjectSupporter50.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler56 = serializedObjectSupporter50.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder57 = builder43.setErrorHandler(errorHandler56);
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        retrofit.Server server62 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider63 = null;
        java.util.concurrent.Executor executor64 = null;
        java.util.concurrent.Executor executor65 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = new retrofit.SerializedObjectSupporter();
        java.lang.String str67 = serializedObjectSupporter66.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor68 = serializedObjectSupporter66.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.Profiler profiler73 = null;
        retrofit.ErrorHandler errorHandler74 = null;
        retrofit.RestAdapter.Builder builder75 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = builder75.serializedObjectSupporter;
        retrofit.RestAdapter.Log log77 = retrofit.RestAdapter.Log.NONE;
        builder75.log = log77;
        retrofit.RestAdapter.LogLevel logLevel79 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter80 = new retrofit.RestAdapter(server62, provider63, executor64, executor65, requestInterceptor68, (retrofit.converter.Converter) gsonConverter72, profiler73, errorHandler74, log77, logLevel79);
        retrofit.RestAdapter.Builder builder81 = builder58.setRequestInterceptor(requestInterceptor68);
        builder57.requestInterceptor = requestInterceptor68;
        retrofit.RestAdapter.Builder builder83 = builder41.setRequestInterceptor(requestInterceptor68);
        retrofit.client.Client.Provider provider84 = builder41.getclientProvider();
        retrofit.SerializedObjectSupporter serializedObjectSupporter85 = new retrofit.SerializedObjectSupporter();
        java.lang.String str86 = serializedObjectSupporter85.deserializeObjectString9();
        retrofit.Server server87 = serializedObjectSupporter85.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter88 = serializedObjectSupporter85.deserializeObjectConverter6();
        java.lang.String str89 = serializedObjectSupporter85.deserializeObjectString2();
        java.lang.String str90 = serializedObjectSupporter85.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler91 = serializedObjectSupporter85.deserializeObjectErrorHandler1();
        retrofit.converter.GsonConverter gsonConverter92 = serializedObjectSupporter85.deserializeObjectConverter4();
        retrofit.RestAdapter.Builder builder93 = builder41.setConverter((retrofit.converter.Converter) gsonConverter92);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(converter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(server46);
        org.junit.Assert.assertNotNull(gsonConverter47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Retrofit-Idle" + "'", str54, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "http://example.com/" + "'", str55, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "http://example.com/" + "'", str67, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNull(serializedObjectSupporter76);
        org.junit.Assert.assertNotNull(log77);
        org.junit.Assert.assertTrue("'" + logLevel79 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel79.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(provider84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "http://example.com/" + "'", str86, "http://example.com/");
        org.junit.Assert.assertNotNull(server87);
        org.junit.Assert.assertNotNull(gsonConverter88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Retrofit-Idle" + "'", str89, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "http://example.com/" + "'", str90, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler91);
        org.junit.Assert.assertNotNull(gsonConverter92);
        org.junit.Assert.assertNotNull(builder93);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        java.lang.String str12 = restAdapter10.getIDLE_THREAD_NAME();
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter14 = restAdapter10.converter;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Retrofit-Idle" + "'", str12, "Retrofit-Idle");
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.httpExecutor;
        retrofit.Server server16 = restAdapter12.getserver();
        java.lang.String str17 = server16.name;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel14 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean15 = logLevel14.log();
        restAdapter10.logLevel = logLevel14;
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        java.lang.String str18 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.Server server19 = restAdapter10.getserver();
        retrofit.client.Client.Provider provider20 = restAdapter10.getclientProvider();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel14 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel14.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-Idle" + "'", str18, "Retrofit-Idle");
        org.junit.Assert.assertNull(server19);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.ErrorHandler errorHandler17 = restAdapter10.errorHandler;
        retrofit.client.Client.Provider provider18 = restAdapter10.getclientProvider();
        java.util.concurrent.Executor executor19 = restAdapter10.httpExecutor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(executor19);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Server server14 = restAdapter10.getserver();
        retrofit.RestAdapter.RestHandler restHandler15 = restAdapter10.new RestHandler();
        retrofit.client.Client.Provider provider16 = restAdapter10.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler17 = restAdapter10.new RestHandler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel19 = restAdapter10.getLogLevel();
        java.util.concurrent.Executor executor20 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(server14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(logLevel19);
        org.junit.Assert.assertNull(executor20);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.Server server14 = null;
        retrofit.client.Client.Provider provider15 = null;
        java.util.concurrent.Executor executor16 = null;
        java.util.concurrent.Executor executor17 = null;
        retrofit.RequestInterceptor requestInterceptor18 = null;
        retrofit.converter.Converter converter19 = null;
        retrofit.Profiler profiler20 = null;
        retrofit.ErrorHandler errorHandler21 = null;
        retrofit.RestAdapter.Log log22 = null;
        retrofit.RestAdapter.LogLevel logLevel23 = null;
        retrofit.RestAdapter restAdapter24 = new retrofit.RestAdapter(server14, provider15, executor16, executor17, requestInterceptor18, converter19, profiler20, errorHandler21, log22, logLevel23);
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter24.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler26 = restAdapter24.new RestHandler();
        java.lang.String str27 = restAdapter24.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel28 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean29 = logLevel28.log();
        restAdapter24.logLevel = logLevel28;
        restAdapter10.logLevel = logLevel28;
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.util.List<retrofit.client.Header> headerList39 = request38.getHeaders();
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("default", "Retrofit-Idle", headerList39, typedOutput40);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request42 = restAdapter10.logAndReplaceRequest(request41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-" + "'", str27, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel28 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel28.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(headerList39);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.lang.String str13 = restAdapter10.getIDLE_THREAD_NAME();
        retrofit.client.Client.Provider provider14 = restAdapter10.getclientProvider();
        retrofit.Profiler profiler15 = restAdapter10.getprofiler();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = restAdapter10.serializedObjectSupporter;
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(profiler15);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("http://example.com/", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "Retrofit-", headerList13, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com", "http://example.com", headerList13, typedOutput18);
        java.lang.String str20 = request19.getUrl();
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com", "default", headerList21, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = request23.getBody();
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com" + "'", str20, "http://example.com");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(typedOutput24);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler13 = restAdapter10.new RestHandler();
        java.lang.Throwable throwable14 = null;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.logException(throwable14, "default");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider45 = null;
        java.util.concurrent.Executor executor46 = null;
        java.util.concurrent.Executor executor47 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter48 = new retrofit.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor50 = serializedObjectSupporter48.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter51 = new retrofit.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString9();
        retrofit.Server server53 = serializedObjectSupporter51.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter54 = serializedObjectSupporter51.deserializeObjectConverter6();
        retrofit.Profiler profiler55 = null;
        retrofit.ErrorHandler errorHandler56 = null;
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = builder57.serializedObjectSupporter;
        retrofit.RestAdapter.Log log59 = retrofit.RestAdapter.Log.NONE;
        builder57.log = log59;
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter62 = new retrofit.RestAdapter(server44, provider45, executor46, executor47, requestInterceptor50, (retrofit.converter.Converter) gsonConverter54, profiler55, errorHandler56, log59, logLevel61);
        retrofit.RestAdapter.Builder builder63 = builder41.setLog(log59);
        builder63.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder65 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter66 = builder65.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler67 = builder65.errorHandler;
        builder65.ensureSaneDefaults();
        retrofit.RestAdapter.Log log69 = builder65.log;
        retrofit.Profiler profiler70 = null;
        builder65.profiler = profiler70;
        retrofit.client.Client.Provider provider72 = builder65.getclientProvider();
        retrofit.RestAdapter.LogLevel logLevel73 = builder65.logLevel;
        retrofit.RestAdapter.Builder builder74 = builder63.setLogLevel(logLevel73);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://example.com/" + "'", str49, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertNotNull(server53);
        org.junit.Assert.assertNotNull(gsonConverter54);
        org.junit.Assert.assertNull(serializedObjectSupporter58);
        org.junit.Assert.assertNotNull(log59);
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNull(serializedObjectSupporter66);
        org.junit.Assert.assertNull(errorHandler67);
        org.junit.Assert.assertNotNull(log69);
        org.junit.Assert.assertNotNull(provider72);
        org.junit.Assert.assertTrue("'" + logLevel73 + "' != '" + retrofit.RestAdapter.LogLevel.NONE + "'", logLevel73.equals(retrofit.RestAdapter.LogLevel.NONE));
        org.junit.Assert.assertNotNull(builder74);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("hi!", "Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = builder14.setServer(server44);
        retrofit.ErrorHandler errorHandler46 = builder45.errorHandler;
        retrofit.Server server47 = null;
        retrofit.client.Client.Provider provider48 = null;
        java.util.concurrent.Executor executor49 = null;
        java.util.concurrent.Executor executor50 = null;
        retrofit.RequestInterceptor requestInterceptor51 = null;
        retrofit.converter.Converter converter52 = null;
        retrofit.Profiler profiler53 = null;
        retrofit.ErrorHandler errorHandler54 = null;
        retrofit.RestAdapter.Log log55 = null;
        retrofit.RestAdapter.LogLevel logLevel56 = null;
        retrofit.RestAdapter restAdapter57 = new retrofit.RestAdapter(server47, provider48, executor49, executor50, requestInterceptor51, converter52, profiler53, errorHandler54, log55, logLevel56);
        retrofit.RestAdapter.RestHandler restHandler58 = restAdapter57.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler59 = restAdapter57.new RestHandler();
        java.lang.String str60 = restAdapter57.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel61 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean62 = logLevel61.log();
        restAdapter57.logLevel = logLevel61;
        retrofit.RestAdapter.Builder builder64 = builder45.setLogLevel(logLevel61);
        retrofit.RestAdapter.LogLevel logLevel65 = builder45.logLevel;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Retrofit-" + "'", str60, "Retrofit-");
        org.junit.Assert.assertTrue("'" + logLevel61 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel61.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertTrue("'" + logLevel65 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel65.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.RestAdapter.LogLevel logLevel6 = retrofit.RestAdapter.LogLevel.HEADERS;
        boolean boolean7 = logLevel6.log();
        builder0.logLevel = logLevel6;
        retrofit.RestAdapter.Builder builder9 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter10 = builder9.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler11 = builder9.errorHandler;
        builder9.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder13 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = builder13.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler15 = builder13.errorHandler;
        builder13.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.Server server20 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder22 = builder17.setConverter((retrofit.converter.Converter) gsonConverter21);
        builder17.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.Server server26 = serializedObjectSupporter24.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter27 = serializedObjectSupporter24.deserializeObjectConverter6();
        java.lang.String str28 = serializedObjectSupporter24.deserializeObjectString2();
        java.lang.String str29 = serializedObjectSupporter24.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler30 = serializedObjectSupporter24.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder31 = builder17.setErrorHandler(errorHandler30);
        builder31.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = builder31.getcallbackExecutor();
        builder13.httpExecutor = executor33;
        builder9.httpExecutor = executor33;
        retrofit.client.Client.Provider provider36 = builder9.getclientProvider();
        builder0.clientProvider = provider36;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + logLevel6 + "' != '" + retrofit.RestAdapter.LogLevel.HEADERS + "'", logLevel6.equals(retrofit.RestAdapter.LogLevel.HEADERS));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(errorHandler15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(gsonConverter27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Retrofit-Idle" + "'", str28, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(executor33);
        org.junit.Assert.assertNotNull(provider36);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.Server server2 = serializedObjectSupporter0.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter3 = serializedObjectSupporter0.deserializeObjectConverter6();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString4();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString8();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString1();
        retrofit.client.Response response8 = serializedObjectSupporter0.deserializeObjectResponse3();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(server2);
        org.junit.Assert.assertNotNull(gsonConverter3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Retrofit-Idle" + "'", str4, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://example.com/" + "'", str5, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Retrofit-" + "'", str7, "Retrofit-");
        org.junit.Assert.assertNotNull(response8);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList11, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "default", headerList11, typedOutput16);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = new retrofit.SerializedObjectSupporter();
        java.lang.String str44 = serializedObjectSupporter43.deserializeObjectString9();
        retrofit.Server server45 = serializedObjectSupporter43.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter46 = serializedObjectSupporter43.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder47 = builder42.setConverter((retrofit.converter.Converter) gsonConverter46);
        builder42.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.Server server51 = serializedObjectSupporter49.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter52 = serializedObjectSupporter49.deserializeObjectConverter6();
        java.lang.String str53 = serializedObjectSupporter49.deserializeObjectString2();
        java.lang.String str54 = serializedObjectSupporter49.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler55 = serializedObjectSupporter49.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder56 = builder42.setErrorHandler(errorHandler55);
        retrofit.client.Client.Provider provider57 = builder56.clientProvider;
        retrofit.RestAdapter.Builder builder58 = builder41.setClient(provider57);
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "http://example.com/" + "'", str44, "http://example.com/");
        org.junit.Assert.assertNotNull(server45);
        org.junit.Assert.assertNotNull(gsonConverter46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(server51);
        org.junit.Assert.assertNotNull(gsonConverter52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Retrofit-Idle" + "'", str53, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(provider57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        builder4.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        java.lang.String str15 = serializedObjectSupporter11.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder18 = builder4.setErrorHandler(errorHandler17);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.getcallbackExecutor();
        builder0.httpExecutor = executor20;
        retrofit.RequestInterceptor requestInterceptor22 = builder0.requestInterceptor;
        retrofit.RestAdapter.Builder builder23 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = builder23.serializedObjectSupporter;
        retrofit.Server server27 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider28 = null;
        java.util.concurrent.Executor executor29 = null;
        java.util.concurrent.Executor executor30 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter31 = new retrofit.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor33 = serializedObjectSupporter31.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.Server server36 = serializedObjectSupporter34.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter37 = serializedObjectSupporter34.deserializeObjectConverter6();
        retrofit.Profiler profiler38 = null;
        retrofit.ErrorHandler errorHandler39 = null;
        retrofit.RestAdapter.Builder builder40 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter41 = builder40.serializedObjectSupporter;
        retrofit.RestAdapter.Log log42 = retrofit.RestAdapter.Log.NONE;
        builder40.log = log42;
        retrofit.RestAdapter.LogLevel logLevel44 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter45 = new retrofit.RestAdapter(server27, provider28, executor29, executor30, requestInterceptor33, (retrofit.converter.Converter) gsonConverter37, profiler38, errorHandler39, log42, logLevel44);
        retrofit.RestAdapter.Builder builder46 = builder23.setRequestInterceptor(requestInterceptor33);
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        builder46.logLevel = logLevel47;
        retrofit.RestAdapter.Builder builder49 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter50 = new retrofit.SerializedObjectSupporter();
        java.lang.String str51 = serializedObjectSupporter50.deserializeObjectString9();
        retrofit.Server server52 = serializedObjectSupporter50.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter53 = serializedObjectSupporter50.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder54 = builder49.setConverter((retrofit.converter.Converter) gsonConverter53);
        builder49.ensureSaneDefaults();
        java.util.concurrent.Executor executor56 = null;
        builder49.httpExecutor = executor56;
        retrofit.client.Client.Provider provider58 = builder49.getclientProvider();
        builder46.clientProvider = provider58;
        retrofit.RestAdapter.Builder builder60 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = builder60.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler62 = builder60.errorHandler;
        builder60.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler66 = builder64.errorHandler;
        builder64.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        builder82.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = builder82.getcallbackExecutor();
        builder64.httpExecutor = executor84;
        builder60.httpExecutor = executor84;
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = builder87.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler89 = builder87.errorHandler;
        builder87.ensureSaneDefaults();
        retrofit.RestAdapter.Log log91 = builder87.log;
        retrofit.Profiler profiler92 = null;
        builder87.profiler = profiler92;
        retrofit.client.Client.Provider provider94 = builder87.getclientProvider();
        retrofit.RestAdapter.Builder builder95 = builder60.setClient(provider94);
        retrofit.RestAdapter.Builder builder96 = builder46.setClient(provider94);
        retrofit.RestAdapter.Builder builder97 = builder0.setClient(provider94);
        retrofit.ErrorHandler errorHandler98 = builder0.errorHandler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(requestInterceptor22);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "http://example.com/" + "'", str32, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(server36);
        org.junit.Assert.assertNotNull(gsonConverter37);
        org.junit.Assert.assertNull(serializedObjectSupporter41);
        org.junit.Assert.assertNotNull(log42);
        org.junit.Assert.assertTrue("'" + logLevel44 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel44.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(server52);
        org.junit.Assert.assertNotNull(gsonConverter53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(provider58);
        org.junit.Assert.assertNull(serializedObjectSupporter61);
        org.junit.Assert.assertNull(errorHandler62);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNull(errorHandler66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(executor84);
        org.junit.Assert.assertNull(serializedObjectSupporter88);
        org.junit.Assert.assertNull(errorHandler89);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(provider94);
        org.junit.Assert.assertNotNull(builder95);
        org.junit.Assert.assertNotNull(builder96);
        org.junit.Assert.assertNotNull(builder97);
        org.junit.Assert.assertNotNull(errorHandler98);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        retrofit.RestAdapter.Builder builder36 = builder23.setClient(provider35);
        retrofit.RestAdapter.Builder builder38 = builder23.setServer("default");
        retrofit.RestAdapter.Builder builder39 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder44 = builder39.setConverter((retrofit.converter.Converter) gsonConverter43);
        builder39.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter46 = new retrofit.SerializedObjectSupporter();
        java.lang.String str47 = serializedObjectSupporter46.deserializeObjectString9();
        retrofit.Server server48 = serializedObjectSupporter46.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter49 = serializedObjectSupporter46.deserializeObjectConverter6();
        java.lang.String str50 = serializedObjectSupporter46.deserializeObjectString2();
        java.lang.String str51 = serializedObjectSupporter46.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler52 = serializedObjectSupporter46.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder53 = builder39.setErrorHandler(errorHandler52);
        builder53.ensureSaneDefaults();
        java.util.concurrent.Executor executor55 = builder53.getcallbackExecutor();
        builder53.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder57 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder62 = builder57.setConverter((retrofit.converter.Converter) gsonConverter61);
        builder57.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        java.lang.String str68 = serializedObjectSupporter64.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter64.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler70 = serializedObjectSupporter64.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder71 = builder57.setErrorHandler(errorHandler70);
        builder71.ensureSaneDefaults();
        java.util.concurrent.Executor executor73 = builder71.getcallbackExecutor();
        builder53.sethttpExecutor(executor73);
        builder38.setcallbackExecutor(executor73);
        retrofit.Profiler profiler76 = builder38.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http://example.com/" + "'", str47, "http://example.com/");
        org.junit.Assert.assertNotNull(server48);
        org.junit.Assert.assertNotNull(gsonConverter49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Retrofit-Idle" + "'", str50, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "http://example.com/" + "'", str51, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(executor55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Retrofit-Idle" + "'", str68, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "http://example.com/" + "'", str69, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(executor73);
        org.junit.Assert.assertNull(profiler76);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList13, typedOutput16);
        java.lang.String str18 = request17.getUrl();
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("default", "http://example.com", headerList19, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com/", "http://example.com", headerList19, typedOutput22);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        retrofit.converter.Converter converter13 = restAdapter10.converter;
        retrofit.client.Client.Provider provider14 = restAdapter10.clientProvider;
        java.util.concurrent.Executor executor15 = restAdapter10.httpExecutor;
        retrofit.converter.Converter converter16 = restAdapter10.getconverter();
        retrofit.converter.Converter converter17 = restAdapter10.converter;
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNull(converter17);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.RestAdapter.Builder builder41 = builder14.setServer("http://example.com/");
        retrofit.Server server44 = new retrofit.Server("hi!", "Retrofit-Idle");
        retrofit.RestAdapter.Builder builder45 = builder14.setServer(server44);
        retrofit.RequestInterceptor requestInterceptor46 = builder14.requestInterceptor;
        java.util.concurrent.Executor executor47 = builder14.getcallbackExecutor();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(requestInterceptor46);
        org.junit.Assert.assertNotNull(executor47);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.Server server7 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.RequestInterceptor requestInterceptor11 = null;
        retrofit.converter.Converter converter12 = null;
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Log log15 = null;
        retrofit.RestAdapter.LogLevel logLevel16 = null;
        retrofit.RestAdapter restAdapter17 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor11, converter12, profiler13, errorHandler14, log15, logLevel16);
        java.lang.String str18 = restAdapter17.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter17.getrequestInterceptor();
        retrofit.RestAdapter.RestHandler restHandler20 = restAdapter17.new RestHandler();
        retrofit.client.Client.Provider provider21 = restAdapter17.getclientProvider();
        retrofit.client.Client.Provider provider22 = restAdapter17.getclientProvider();
        java.util.concurrent.Executor executor23 = restAdapter17.callbackExecutor;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = restAdapter17.serializedObjectSupporter;
        retrofit.client.Client.Provider provider25 = restAdapter17.clientProvider;
        retrofit.Server server26 = restAdapter17.getserver();
        retrofit.RestAdapter.Builder builder27 = builder0.setServer(server26);
        java.util.concurrent.Executor executor28 = builder0.callbackExecutor;
        java.lang.Class<?> wildcardClass29 = builder0.getClass();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Retrofit-Idle" + "'", str18, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(executor23);
        org.junit.Assert.assertNull(serializedObjectSupporter24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(server26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(executor28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        log66.log("Retrofit-");
        log66.log("Retrofit-");
        log66.log("http://example.com/");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.RequestInterceptor requestInterceptor14 = restAdapter12.getrequestInterceptor();
        java.util.concurrent.Executor executor15 = restAdapter12.httpExecutor;
        java.util.concurrent.Executor executor16 = restAdapter12.httpExecutor;
        retrofit.ErrorHandler errorHandler17 = restAdapter12.geterrorHandler();
        retrofit.RestAdapter.RestHandler restHandler18 = restAdapter12.new RestHandler();
        retrofit.RequestInterceptor requestInterceptor19 = restAdapter12.requestInterceptor;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(requestInterceptor14);
        org.junit.Assert.assertNull(executor15);
        org.junit.Assert.assertNull(executor16);
        org.junit.Assert.assertNull(errorHandler17);
        org.junit.Assert.assertNull(requestInterceptor19);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        java.util.concurrent.Executor executor17 = builder14.callbackExecutor;
        retrofit.Server server20 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider21 = null;
        java.util.concurrent.Executor executor22 = null;
        java.util.concurrent.Executor executor23 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter24 = new retrofit.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor26 = serializedObjectSupporter24.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.Profiler profiler31 = null;
        retrofit.ErrorHandler errorHandler32 = null;
        retrofit.RestAdapter.Builder builder33 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = builder33.serializedObjectSupporter;
        retrofit.RestAdapter.Log log35 = retrofit.RestAdapter.Log.NONE;
        builder33.log = log35;
        retrofit.RestAdapter.LogLevel logLevel37 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter38 = new retrofit.RestAdapter(server20, provider21, executor22, executor23, requestInterceptor26, (retrofit.converter.Converter) gsonConverter30, profiler31, errorHandler32, log35, logLevel37);
        builder14.log = log35;
        retrofit.SerializedObjectSupporter serializedObjectSupporter40 = new retrofit.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString9();
        retrofit.Server server42 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter43 = serializedObjectSupporter40.deserializeObjectConverter6();
        java.lang.String str44 = serializedObjectSupporter40.deserializeObjectString2();
        java.lang.String str45 = serializedObjectSupporter40.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler46 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.Server server47 = serializedObjectSupporter40.deserializeObjectServer1();
        retrofit.ErrorHandler errorHandler48 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        retrofit.ErrorHandler errorHandler49 = serializedObjectSupporter40.deserializeObjectErrorHandler1();
        builder14.errorHandler = errorHandler49;
        retrofit.client.Client client51 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder52 = builder14.setClient(client51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Client may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(executor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "http://example.com/" + "'", str25, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertTrue("'" + logLevel37 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel37.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "http://example.com/" + "'", str41, "http://example.com/");
        org.junit.Assert.assertNotNull(server42);
        org.junit.Assert.assertNotNull(gsonConverter43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Retrofit-Idle" + "'", str44, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "http://example.com/" + "'", str45, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler46);
        org.junit.Assert.assertNotNull(server47);
        org.junit.Assert.assertNotNull(errorHandler48);
        org.junit.Assert.assertNotNull(errorHandler49);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.ErrorHandler errorHandler95 = restAdapter91.errorHandler;
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNull(errorHandler95);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.Server server4 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider5 = null;
        java.util.concurrent.Executor executor6 = null;
        java.util.concurrent.Executor executor7 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = new retrofit.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor10 = serializedObjectSupporter8.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.Profiler profiler15 = null;
        retrofit.ErrorHandler errorHandler16 = null;
        retrofit.RestAdapter.Builder builder17 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = builder17.serializedObjectSupporter;
        retrofit.RestAdapter.Log log19 = retrofit.RestAdapter.Log.NONE;
        builder17.log = log19;
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter22 = new retrofit.RestAdapter(server4, provider5, executor6, executor7, requestInterceptor10, (retrofit.converter.Converter) gsonConverter14, profiler15, errorHandler16, log19, logLevel21);
        retrofit.RestAdapter.Builder builder23 = builder0.setRequestInterceptor(requestInterceptor10);
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        builder23.logLevel = logLevel24;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor33 = null;
        builder26.httpExecutor = executor33;
        retrofit.client.Client.Provider provider35 = builder26.getclientProvider();
        builder23.clientProvider = provider35;
        java.util.concurrent.Executor executor37 = builder23.httpExecutor;
        retrofit.Profiler profiler38 = null;
        builder23.profiler = profiler38;
        retrofit.Profiler profiler40 = builder23.profiler;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://example.com/" + "'", str9, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(provider35);
        org.junit.Assert.assertNull(executor37);
        org.junit.Assert.assertNull(profiler40);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel1 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder2 = builder0.setLogLevel(logLevel1);
        retrofit.converter.Converter converter3 = builder2.converter;
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = builder4.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler6 = builder4.errorHandler;
        builder4.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler8 = builder4.errorHandler;
        retrofit.RestAdapter.Builder builder9 = builder2.setErrorHandler(errorHandler8);
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = builder10.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler12 = builder10.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel13 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean14 = logLevel13.log();
        builder10.logLevel = logLevel13;
        retrofit.Server server17 = new retrofit.Server("hi!");
        builder10.server = server17;
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor21 = serializedObjectSupporter19.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response22 = serializedObjectSupporter19.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter23 = serializedObjectSupporter19.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder24 = builder10.setConverter((retrofit.converter.Converter) gsonConverter23);
        retrofit.converter.Converter converter25 = builder10.converter;
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = new retrofit.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString9();
        retrofit.Server server29 = serializedObjectSupporter27.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter30 = serializedObjectSupporter27.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder31 = builder26.setConverter((retrofit.converter.Converter) gsonConverter30);
        builder26.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.Server server35 = serializedObjectSupporter33.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter36 = serializedObjectSupporter33.deserializeObjectConverter6();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        java.lang.String str38 = serializedObjectSupporter33.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler39 = serializedObjectSupporter33.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder40 = builder26.setErrorHandler(errorHandler39);
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.Server server45 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider46 = null;
        java.util.concurrent.Executor executor47 = null;
        java.util.concurrent.Executor executor48 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter49 = new retrofit.SerializedObjectSupporter();
        java.lang.String str50 = serializedObjectSupporter49.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor51 = serializedObjectSupporter49.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = new retrofit.SerializedObjectSupporter();
        java.lang.String str53 = serializedObjectSupporter52.deserializeObjectString9();
        retrofit.Server server54 = serializedObjectSupporter52.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter52.deserializeObjectConverter6();
        retrofit.Profiler profiler56 = null;
        retrofit.ErrorHandler errorHandler57 = null;
        retrofit.RestAdapter.Builder builder58 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = builder58.serializedObjectSupporter;
        retrofit.RestAdapter.Log log60 = retrofit.RestAdapter.Log.NONE;
        builder58.log = log60;
        retrofit.RestAdapter.LogLevel logLevel62 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter63 = new retrofit.RestAdapter(server45, provider46, executor47, executor48, requestInterceptor51, (retrofit.converter.Converter) gsonConverter55, profiler56, errorHandler57, log60, logLevel62);
        retrofit.RestAdapter.Builder builder64 = builder41.setRequestInterceptor(requestInterceptor51);
        builder40.requestInterceptor = requestInterceptor51;
        retrofit.RestAdapter.Builder builder67 = builder40.setServer("http://example.com/");
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = new retrofit.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString9();
        retrofit.Server server71 = serializedObjectSupporter69.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter72 = serializedObjectSupporter69.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder73 = builder68.setConverter((retrofit.converter.Converter) gsonConverter72);
        builder68.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter75 = new retrofit.SerializedObjectSupporter();
        java.lang.String str76 = serializedObjectSupporter75.deserializeObjectString9();
        retrofit.Server server77 = serializedObjectSupporter75.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter78 = serializedObjectSupporter75.deserializeObjectConverter6();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        java.lang.String str80 = serializedObjectSupporter75.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler81 = serializedObjectSupporter75.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder82 = builder68.setErrorHandler(errorHandler81);
        retrofit.client.Client.Provider provider83 = builder82.clientProvider;
        retrofit.RestAdapter.Builder builder84 = builder67.setClient(provider83);
        builder10.setclientProvider(provider83);
        retrofit.RestAdapter.Builder builder86 = builder9.setClient(provider83);
        retrofit.RestAdapter.Builder builder87 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter88 = builder87.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler89 = builder87.errorHandler;
        builder87.ensureSaneDefaults();
        retrofit.RestAdapter.Log log91 = builder87.log;
        retrofit.Profiler profiler92 = null;
        builder87.profiler = profiler92;
        retrofit.client.Client.Provider provider94 = builder87.getclientProvider();
        retrofit.RestAdapter.Builder builder95 = builder86.setClient(provider94);
        builder95.ensureSaneDefaults();
        org.junit.Assert.assertTrue("'" + logLevel1 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel1.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(errorHandler6);
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(errorHandler12);
        org.junit.Assert.assertTrue("'" + logLevel13 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel13.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor21);
        org.junit.Assert.assertNotNull(response22);
        org.junit.Assert.assertNotNull(gsonConverter23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(converter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "http://example.com/" + "'", str28, "http://example.com/");
        org.junit.Assert.assertNotNull(server29);
        org.junit.Assert.assertNotNull(gsonConverter30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(server35);
        org.junit.Assert.assertNotNull(gsonConverter36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Retrofit-Idle" + "'", str37, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "http://example.com/" + "'", str50, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(server54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNull(serializedObjectSupporter59);
        org.junit.Assert.assertNotNull(log60);
        org.junit.Assert.assertTrue("'" + logLevel62 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel62.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder64);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "http://example.com/" + "'", str70, "http://example.com/");
        org.junit.Assert.assertNotNull(server71);
        org.junit.Assert.assertNotNull(gsonConverter72);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "http://example.com/" + "'", str76, "http://example.com/");
        org.junit.Assert.assertNotNull(server77);
        org.junit.Assert.assertNotNull(gsonConverter78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Retrofit-Idle" + "'", str79, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNull(serializedObjectSupporter88);
        org.junit.Assert.assertNull(errorHandler89);
        org.junit.Assert.assertNotNull(log91);
        org.junit.Assert.assertNotNull(provider94);
        org.junit.Assert.assertNotNull(builder95);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.Profiler profiler40 = null;
        builder14.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        builder14.log = log44;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder48 = builder14.setServer("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Server may not be blank.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.logLevel;
        retrofit.Server server15 = restAdapter10.getserver();
        java.util.concurrent.Executor executor16 = restAdapter10.callbackExecutor;
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(server15);
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        java.lang.String str25 = restAdapter20.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor26 = restAdapter20.callbackExecutor;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Retrofit-" + "'", str25, "Retrofit-");
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("default", "default", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "http://example.com/", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("Retrofit-", "hi!", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "http://example.com/", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-", "default", headerList15, typedOutput24);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        java.lang.String str13 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = null;
        restAdapter12.serializedObjectSupporter = serializedObjectSupporter14;
        retrofit.Profiler profiler16 = restAdapter12.profiler;
        retrofit.client.Client.Provider provider17 = restAdapter12.clientProvider;
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-Idle" + "'", str13, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler16);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler4 = builder0.errorHandler;
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        java.lang.String str9 = serializedObjectSupporter5.deserializeObjectString2();
        builder0.serializedObjectSupporter = serializedObjectSupporter5;
        retrofit.Profiler profiler11 = builder0.profiler;
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = builder12.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler14 = builder12.errorHandler;
        builder12.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler16 = builder12.errorHandler;
        retrofit.RestAdapter.Builder builder17 = builder0.setErrorHandler(errorHandler16);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertNotNull(errorHandler4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Retrofit-Idle" + "'", str9, "Retrofit-Idle");
        org.junit.Assert.assertNull(profiler11);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNull(errorHandler14);
        org.junit.Assert.assertNotNull(errorHandler16);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.RestAdapter.Builder builder7 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter8 = builder7.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler9 = builder7.errorHandler;
        builder7.ensureSaneDefaults();
        retrofit.RestAdapter.Log log11 = builder7.log;
        retrofit.Profiler profiler12 = null;
        builder7.profiler = profiler12;
        retrofit.client.Client.Provider provider14 = builder7.getclientProvider();
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = new retrofit.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString9();
        retrofit.Server server18 = serializedObjectSupporter16.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter19 = serializedObjectSupporter16.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder20 = builder15.setConverter((retrofit.converter.Converter) gsonConverter19);
        builder15.ensureSaneDefaults();
        java.util.concurrent.Executor executor22 = null;
        builder15.httpExecutor = executor22;
        retrofit.client.Client.Provider provider24 = builder15.getclientProvider();
        builder7.setclientProvider(provider24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.Server server30 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString9();
        retrofit.Server server39 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log45, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder26.setRequestInterceptor(requestInterceptor36);
        retrofit.RestAdapter.LogLevel logLevel50 = retrofit.RestAdapter.LogLevel.BASIC;
        builder49.logLevel = logLevel50;
        retrofit.RestAdapter.Builder builder52 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter53 = new retrofit.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString9();
        retrofit.Server server55 = serializedObjectSupporter53.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter56 = serializedObjectSupporter53.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder57 = builder52.setConverter((retrofit.converter.Converter) gsonConverter56);
        builder52.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.Server server61 = serializedObjectSupporter59.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter62 = serializedObjectSupporter59.deserializeObjectConverter6();
        java.lang.String str63 = serializedObjectSupporter59.deserializeObjectString2();
        java.lang.String str64 = serializedObjectSupporter59.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler65 = serializedObjectSupporter59.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder66 = builder52.setErrorHandler(errorHandler65);
        builder66.ensureSaneDefaults();
        java.util.concurrent.Executor executor68 = builder66.getcallbackExecutor();
        builder49.sethttpExecutor(executor68);
        java.util.concurrent.Executor executor70 = builder49.gethttpExecutor();
        builder7.sethttpExecutor(executor70);
        builder0.httpExecutor = executor70;
        retrofit.client.Client.Provider provider73 = builder0.getclientProvider();
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(errorHandler9);
        org.junit.Assert.assertNotNull(log11);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "http://example.com/" + "'", str17, "http://example.com/");
        org.junit.Assert.assertNotNull(server18);
        org.junit.Assert.assertNotNull(gsonConverter19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(provider24);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + logLevel50 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel50.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "http://example.com/" + "'", str54, "http://example.com/");
        org.junit.Assert.assertNotNull(server55);
        org.junit.Assert.assertNotNull(gsonConverter56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(server61);
        org.junit.Assert.assertNotNull(gsonConverter62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Retrofit-Idle" + "'", str63, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "http://example.com/" + "'", str64, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(executor68);
        org.junit.Assert.assertNotNull(executor70);
        org.junit.Assert.assertNull(provider73);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.LogLevel logLevel2 = null;
        builder0.logLevel = logLevel2;
        retrofit.RequestInterceptor requestInterceptor4 = builder0.requestInterceptor;
        retrofit.converter.Converter converter5 = builder0.converter;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(requestInterceptor4);
        org.junit.Assert.assertNull(converter5);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        retrofit.Server server1 = new retrofit.Server("hi!");
        retrofit.client.Client.Provider provider2 = null;
        java.util.concurrent.Executor executor3 = null;
        java.util.concurrent.Executor executor4 = null;
        retrofit.Server server7 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider8 = null;
        java.util.concurrent.Executor executor9 = null;
        java.util.concurrent.Executor executor10 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor13 = serializedObjectSupporter11.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter14 = new retrofit.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString9();
        retrofit.Server server16 = serializedObjectSupporter14.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter17 = serializedObjectSupporter14.deserializeObjectConverter6();
        retrofit.Profiler profiler18 = null;
        retrofit.ErrorHandler errorHandler19 = null;
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter21 = builder20.serializedObjectSupporter;
        retrofit.RestAdapter.Log log22 = retrofit.RestAdapter.Log.NONE;
        builder20.log = log22;
        retrofit.RestAdapter.LogLevel logLevel24 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter25 = new retrofit.RestAdapter(server7, provider8, executor9, executor10, requestInterceptor13, (retrofit.converter.Converter) gsonConverter17, profiler18, errorHandler19, log22, logLevel24);
        retrofit.Server server28 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider29 = null;
        java.util.concurrent.Executor executor30 = null;
        java.util.concurrent.Executor executor31 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter32 = new retrofit.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor34 = serializedObjectSupporter32.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter35 = new retrofit.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString9();
        retrofit.Server server37 = serializedObjectSupporter35.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter38 = serializedObjectSupporter35.deserializeObjectConverter6();
        retrofit.Profiler profiler39 = null;
        retrofit.ErrorHandler errorHandler40 = null;
        retrofit.RestAdapter.Builder builder41 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter42 = builder41.serializedObjectSupporter;
        retrofit.RestAdapter.Log log43 = retrofit.RestAdapter.Log.NONE;
        builder41.log = log43;
        retrofit.RestAdapter.LogLevel logLevel45 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter46 = new retrofit.RestAdapter(server28, provider29, executor30, executor31, requestInterceptor34, (retrofit.converter.Converter) gsonConverter38, profiler39, errorHandler40, log43, logLevel45);
        retrofit.Profiler profiler47 = null;
        retrofit.ErrorHandler errorHandler48 = null;
        retrofit.Server server51 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider52 = null;
        java.util.concurrent.Executor executor53 = null;
        java.util.concurrent.Executor executor54 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter55 = new retrofit.SerializedObjectSupporter();
        java.lang.String str56 = serializedObjectSupporter55.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor57 = serializedObjectSupporter55.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter58 = new retrofit.SerializedObjectSupporter();
        java.lang.String str59 = serializedObjectSupporter58.deserializeObjectString9();
        retrofit.Server server60 = serializedObjectSupporter58.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter61 = serializedObjectSupporter58.deserializeObjectConverter6();
        retrofit.Profiler profiler62 = null;
        retrofit.ErrorHandler errorHandler63 = null;
        retrofit.RestAdapter.Builder builder64 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter65 = builder64.serializedObjectSupporter;
        retrofit.RestAdapter.Log log66 = retrofit.RestAdapter.Log.NONE;
        builder64.log = log66;
        retrofit.RestAdapter.LogLevel logLevel68 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter69 = new retrofit.RestAdapter(server51, provider52, executor53, executor54, requestInterceptor57, (retrofit.converter.Converter) gsonConverter61, profiler62, errorHandler63, log66, logLevel68);
        retrofit.Server server72 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider73 = null;
        java.util.concurrent.Executor executor74 = null;
        java.util.concurrent.Executor executor75 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter76 = new retrofit.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor78 = serializedObjectSupporter76.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter79 = new retrofit.SerializedObjectSupporter();
        java.lang.String str80 = serializedObjectSupporter79.deserializeObjectString9();
        retrofit.Server server81 = serializedObjectSupporter79.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter82 = serializedObjectSupporter79.deserializeObjectConverter6();
        retrofit.Profiler profiler83 = null;
        retrofit.ErrorHandler errorHandler84 = null;
        retrofit.RestAdapter.Builder builder85 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = builder85.serializedObjectSupporter;
        retrofit.RestAdapter.Log log87 = retrofit.RestAdapter.Log.NONE;
        builder85.log = log87;
        retrofit.RestAdapter.LogLevel logLevel89 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter90 = new retrofit.RestAdapter(server72, provider73, executor74, executor75, requestInterceptor78, (retrofit.converter.Converter) gsonConverter82, profiler83, errorHandler84, log87, logLevel89);
        retrofit.RestAdapter restAdapter91 = new retrofit.RestAdapter(server1, provider2, executor3, executor4, requestInterceptor13, (retrofit.converter.Converter) gsonConverter38, profiler47, errorHandler48, log66, logLevel89);
        retrofit.RestAdapter.LogLevel logLevel92 = restAdapter91.logLevel;
        retrofit.Server server93 = restAdapter91.getserver();
        retrofit.RestAdapter.RestHandler restHandler94 = restAdapter91.new RestHandler();
        retrofit.RestAdapter.Log log95 = restAdapter91.log;
        retrofit.client.Client.Provider provider96 = restAdapter91.getclientProvider();
        java.lang.String str97 = restAdapter91.getTHREAD_PREFIX();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "http://example.com/" + "'", str15, "http://example.com/");
        org.junit.Assert.assertNotNull(server16);
        org.junit.Assert.assertNotNull(gsonConverter17);
        org.junit.Assert.assertNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(log22);
        org.junit.Assert.assertTrue("'" + logLevel24 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel24.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "http://example.com/" + "'", str33, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "http://example.com/" + "'", str36, "http://example.com/");
        org.junit.Assert.assertNotNull(server37);
        org.junit.Assert.assertNotNull(gsonConverter38);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(log43);
        org.junit.Assert.assertTrue("'" + logLevel45 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel45.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "http://example.com/" + "'", str56, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "http://example.com/" + "'", str59, "http://example.com/");
        org.junit.Assert.assertNotNull(server60);
        org.junit.Assert.assertNotNull(gsonConverter61);
        org.junit.Assert.assertNull(serializedObjectSupporter65);
        org.junit.Assert.assertNotNull(log66);
        org.junit.Assert.assertTrue("'" + logLevel68 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel68.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "http://example.com/" + "'", str77, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "http://example.com/" + "'", str80, "http://example.com/");
        org.junit.Assert.assertNotNull(server81);
        org.junit.Assert.assertNotNull(gsonConverter82);
        org.junit.Assert.assertNull(serializedObjectSupporter86);
        org.junit.Assert.assertNotNull(log87);
        org.junit.Assert.assertTrue("'" + logLevel89 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel89.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel92 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel92.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(server93);
        org.junit.Assert.assertNotNull(log95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Retrofit-" + "'", str97, "Retrofit-");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.util.List<retrofit.client.Header> headerList11 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("", "", headerList11, typedOutput12);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList11, typedOutput14);
        java.lang.String str16 = request15.getUrl();
        java.util.List<retrofit.client.Header> headerList17 = request15.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("default", "http://example.com", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        builder14.ensureSaneDefaults();
        java.util.concurrent.Executor executor16 = builder14.getcallbackExecutor();
        retrofit.Profiler profiler17 = null;
        builder14.profiler = profiler17;
        retrofit.client.Client.Provider provider19 = builder14.clientProvider;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(executor16);
        org.junit.Assert.assertNotNull(provider19);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.client.Client.Provider provider21 = restAdapter20.getclientProvider();
        retrofit.Profiler profiler22 = restAdapter20.profiler;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(profiler22);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter6();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        builder0.requestInterceptor = requestInterceptor35;
        retrofit.RestAdapter.Builder builder51 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter52 = builder51.serializedObjectSupporter;
        retrofit.Server server55 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider56 = null;
        java.util.concurrent.Executor executor57 = null;
        java.util.concurrent.Executor executor58 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter59 = new retrofit.SerializedObjectSupporter();
        java.lang.String str60 = serializedObjectSupporter59.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor61 = serializedObjectSupporter59.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter62 = new retrofit.SerializedObjectSupporter();
        java.lang.String str63 = serializedObjectSupporter62.deserializeObjectString9();
        retrofit.Server server64 = serializedObjectSupporter62.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter65 = serializedObjectSupporter62.deserializeObjectConverter6();
        retrofit.Profiler profiler66 = null;
        retrofit.ErrorHandler errorHandler67 = null;
        retrofit.RestAdapter.Builder builder68 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter69 = builder68.serializedObjectSupporter;
        retrofit.RestAdapter.Log log70 = retrofit.RestAdapter.Log.NONE;
        builder68.log = log70;
        retrofit.RestAdapter.LogLevel logLevel72 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter73 = new retrofit.RestAdapter(server55, provider56, executor57, executor58, requestInterceptor61, (retrofit.converter.Converter) gsonConverter65, profiler66, errorHandler67, log70, logLevel72);
        retrofit.RestAdapter.Builder builder74 = builder51.setRequestInterceptor(requestInterceptor61);
        retrofit.RestAdapter.LogLevel logLevel75 = retrofit.RestAdapter.LogLevel.BASIC;
        builder74.logLevel = logLevel75;
        retrofit.RestAdapter.Builder builder77 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter78 = new retrofit.SerializedObjectSupporter();
        java.lang.String str79 = serializedObjectSupporter78.deserializeObjectString9();
        retrofit.Server server80 = serializedObjectSupporter78.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter81 = serializedObjectSupporter78.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder82 = builder77.setConverter((retrofit.converter.Converter) gsonConverter81);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor84 = null;
        builder77.httpExecutor = executor84;
        retrofit.client.Client.Provider provider86 = builder77.getclientProvider();
        builder74.clientProvider = provider86;
        retrofit.RestAdapter.Builder builder88 = builder0.setClient(provider86);
        retrofit.SerializedObjectSupporter serializedObjectSupporter89 = new retrofit.SerializedObjectSupporter();
        retrofit.converter.GsonConverter gsonConverter90 = serializedObjectSupporter89.deserializeObjectConverter5();
        retrofit.Server server91 = serializedObjectSupporter89.deserializeObjectServer1();
        builder0.server = server91;
        java.lang.String str93 = server91.getapiUrl();
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(serializedObjectSupporter52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http://example.com/" + "'", str60, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "http://example.com/" + "'", str63, "http://example.com/");
        org.junit.Assert.assertNotNull(server64);
        org.junit.Assert.assertNotNull(gsonConverter65);
        org.junit.Assert.assertNull(serializedObjectSupporter69);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertTrue("'" + logLevel72 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel72.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + logLevel75 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel75.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "http://example.com/" + "'", str79, "http://example.com/");
        org.junit.Assert.assertNotNull(server80);
        org.junit.Assert.assertNotNull(gsonConverter81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(provider86);
        org.junit.Assert.assertNotNull(builder88);
        org.junit.Assert.assertNotNull(gsonConverter90);
        org.junit.Assert.assertNotNull(server91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "http://example.com" + "'", str93, "http://example.com");
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        retrofit.Server server2 = new retrofit.Server("", "Retrofit-");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.ErrorHandler errorHandler11 = restAdapter10.errorHandler;
        retrofit.RequestInterceptor requestInterceptor12 = restAdapter10.getrequestInterceptor();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.logLevel;
        retrofit.Server server15 = restAdapter10.getserver();
        retrofit.RestAdapter.RestHandler restHandler16 = restAdapter10.new RestHandler();
        org.junit.Assert.assertNull(errorHandler11);
        org.junit.Assert.assertNull(requestInterceptor12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(server15);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("http://example.com/", "", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("http://example.com", "http://example.com", (java.util.List<retrofit.client.Header>) headerList9, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("Retrofit-Idle", "http://example.com/", (java.util.List<retrofit.client.Header>) headerList9, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("http://example.com", "default", (java.util.List<retrofit.client.Header>) headerList9, typedOutput17);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.RestAdapter.RestHandler restHandler11 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.RestHandler restHandler12 = restAdapter10.new RestHandler();
        java.lang.String str13 = restAdapter10.getTHREAD_PREFIX();
        retrofit.Profiler profiler14 = restAdapter10.profiler;
        retrofit.RestAdapter.LogLevel logLevel15 = restAdapter10.logLevel;
        retrofit.Server server16 = restAdapter10.getserver();
        java.util.concurrent.Executor executor17 = restAdapter10.gethttpExecutor();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Retrofit-" + "'", str13, "Retrofit-");
        org.junit.Assert.assertNull(profiler14);
        org.junit.Assert.assertNull(logLevel15);
        org.junit.Assert.assertNull(server16);
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        retrofit.Server server2 = new retrofit.Server("", "");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.RequestInterceptor requestInterceptor6 = null;
        retrofit.converter.Converter converter7 = null;
        retrofit.Profiler profiler8 = null;
        retrofit.ErrorHandler errorHandler9 = null;
        retrofit.RestAdapter.Log log10 = null;
        retrofit.RestAdapter.LogLevel logLevel11 = null;
        retrofit.RestAdapter restAdapter12 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor6, converter7, profiler8, errorHandler9, log10, logLevel11);
        retrofit.RequestInterceptor requestInterceptor13 = restAdapter12.requestInterceptor;
        java.lang.String str14 = restAdapter12.getIDLE_THREAD_NAME();
        retrofit.Server server15 = restAdapter12.server;
        java.lang.String str16 = restAdapter12.getTHREAD_PREFIX();
        java.util.concurrent.Executor executor17 = restAdapter12.getcallbackExecutor();
        org.junit.Assert.assertNull(requestInterceptor13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Retrofit-Idle" + "'", str14, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Retrofit-" + "'", str16, "Retrofit-");
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        java.util.List<retrofit.client.Header> headerList14 = null;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("http://example.com/", "", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "Retrofit-", headerList17, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", headerList17, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-Idle", "hi!", headerList17, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("Retrofit-", "http://example.com", headerList17, typedOutput26);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "http://example.com", headerList17, typedOutput28);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        java.util.concurrent.Executor executor5 = null;
        builder0.httpExecutor = executor5;
        retrofit.Server server9 = new retrofit.Server("", "");
        retrofit.RestAdapter.Builder builder10 = builder0.setServer(server9);
        retrofit.RestAdapter.Builder builder11 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter12 = new retrofit.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString9();
        retrofit.Server server14 = serializedObjectSupporter12.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter15 = serializedObjectSupporter12.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder16 = builder11.setConverter((retrofit.converter.Converter) gsonConverter15);
        builder11.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter18 = new retrofit.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString9();
        retrofit.Server server20 = serializedObjectSupporter18.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter21 = serializedObjectSupporter18.deserializeObjectConverter6();
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString2();
        java.lang.String str23 = serializedObjectSupporter18.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler24 = serializedObjectSupporter18.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder25 = builder11.setErrorHandler(errorHandler24);
        retrofit.RestAdapter.Builder builder26 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter27 = builder26.serializedObjectSupporter;
        retrofit.Server server30 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider31 = null;
        java.util.concurrent.Executor executor32 = null;
        java.util.concurrent.Executor executor33 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter34 = new retrofit.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor36 = serializedObjectSupporter34.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter37 = new retrofit.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString9();
        retrofit.Server server39 = serializedObjectSupporter37.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter40 = serializedObjectSupporter37.deserializeObjectConverter6();
        retrofit.Profiler profiler41 = null;
        retrofit.ErrorHandler errorHandler42 = null;
        retrofit.RestAdapter.Builder builder43 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter44 = builder43.serializedObjectSupporter;
        retrofit.RestAdapter.Log log45 = retrofit.RestAdapter.Log.NONE;
        builder43.log = log45;
        retrofit.RestAdapter.LogLevel logLevel47 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter48 = new retrofit.RestAdapter(server30, provider31, executor32, executor33, requestInterceptor36, (retrofit.converter.Converter) gsonConverter40, profiler41, errorHandler42, log45, logLevel47);
        retrofit.RestAdapter.Builder builder49 = builder26.setRequestInterceptor(requestInterceptor36);
        builder25.requestInterceptor = requestInterceptor36;
        retrofit.RestAdapter.Builder builder51 = builder10.setRequestInterceptor(requestInterceptor36);
        builder51.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder53 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter54 = builder53.serializedObjectSupporter;
        retrofit.Server server57 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider58 = null;
        java.util.concurrent.Executor executor59 = null;
        java.util.concurrent.Executor executor60 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter61 = new retrofit.SerializedObjectSupporter();
        java.lang.String str62 = serializedObjectSupporter61.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor63 = serializedObjectSupporter61.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        retrofit.Profiler profiler68 = null;
        retrofit.ErrorHandler errorHandler69 = null;
        retrofit.RestAdapter.Builder builder70 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter71 = builder70.serializedObjectSupporter;
        retrofit.RestAdapter.Log log72 = retrofit.RestAdapter.Log.NONE;
        builder70.log = log72;
        retrofit.RestAdapter.LogLevel logLevel74 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter75 = new retrofit.RestAdapter(server57, provider58, executor59, executor60, requestInterceptor63, (retrofit.converter.Converter) gsonConverter67, profiler68, errorHandler69, log72, logLevel74);
        retrofit.RestAdapter.Builder builder76 = builder53.setRequestInterceptor(requestInterceptor63);
        retrofit.RestAdapter.LogLevel logLevel77 = retrofit.RestAdapter.LogLevel.BASIC;
        builder76.logLevel = logLevel77;
        retrofit.RestAdapter.Builder builder79 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter80 = new retrofit.SerializedObjectSupporter();
        java.lang.String str81 = serializedObjectSupporter80.deserializeObjectString9();
        retrofit.Server server82 = serializedObjectSupporter80.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter83 = serializedObjectSupporter80.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder84 = builder79.setConverter((retrofit.converter.Converter) gsonConverter83);
        builder79.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter86 = new retrofit.SerializedObjectSupporter();
        java.lang.String str87 = serializedObjectSupporter86.deserializeObjectString9();
        retrofit.Server server88 = serializedObjectSupporter86.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter89 = serializedObjectSupporter86.deserializeObjectConverter6();
        java.lang.String str90 = serializedObjectSupporter86.deserializeObjectString2();
        java.lang.String str91 = serializedObjectSupporter86.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler92 = serializedObjectSupporter86.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder93 = builder79.setErrorHandler(errorHandler92);
        builder93.ensureSaneDefaults();
        java.util.concurrent.Executor executor95 = builder93.getcallbackExecutor();
        builder76.sethttpExecutor(executor95);
        builder51.httpExecutor = executor95;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "http://example.com/" + "'", str13, "http://example.com/");
        org.junit.Assert.assertNotNull(server14);
        org.junit.Assert.assertNotNull(gsonConverter15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http://example.com/" + "'", str19, "http://example.com/");
        org.junit.Assert.assertNotNull(server20);
        org.junit.Assert.assertNotNull(gsonConverter21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Retrofit-Idle" + "'", str22, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "http://example.com/" + "'", str23, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(serializedObjectSupporter27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "http://example.com/" + "'", str35, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "http://example.com/" + "'", str38, "http://example.com/");
        org.junit.Assert.assertNotNull(server39);
        org.junit.Assert.assertNotNull(gsonConverter40);
        org.junit.Assert.assertNull(serializedObjectSupporter44);
        org.junit.Assert.assertNotNull(log45);
        org.junit.Assert.assertTrue("'" + logLevel47 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel47.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "http://example.com/" + "'", str62, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNull(serializedObjectSupporter71);
        org.junit.Assert.assertNotNull(log72);
        org.junit.Assert.assertTrue("'" + logLevel74 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel74.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertTrue("'" + logLevel77 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel77.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "http://example.com/" + "'", str81, "http://example.com/");
        org.junit.Assert.assertNotNull(server82);
        org.junit.Assert.assertNotNull(gsonConverter83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "http://example.com/" + "'", str87, "http://example.com/");
        org.junit.Assert.assertNotNull(server88);
        org.junit.Assert.assertNotNull(gsonConverter89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Retrofit-Idle" + "'", str90, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "http://example.com/" + "'", str91, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler92);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(executor95);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        java.util.concurrent.Executor executor7 = builder0.httpExecutor;
        retrofit.RestAdapter.Builder builder8 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = builder8.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler10 = builder8.errorHandler;
        builder8.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder12 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter13 = new retrofit.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString9();
        retrofit.Server server15 = serializedObjectSupporter13.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter16 = serializedObjectSupporter13.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder17 = builder12.setConverter((retrofit.converter.Converter) gsonConverter16);
        builder12.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter19 = new retrofit.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString9();
        retrofit.Server server21 = serializedObjectSupporter19.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter19.deserializeObjectConverter6();
        java.lang.String str23 = serializedObjectSupporter19.deserializeObjectString2();
        java.lang.String str24 = serializedObjectSupporter19.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler25 = serializedObjectSupporter19.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder26 = builder12.setErrorHandler(errorHandler25);
        builder26.ensureSaneDefaults();
        java.util.concurrent.Executor executor28 = builder26.getcallbackExecutor();
        builder8.httpExecutor = executor28;
        retrofit.client.Client.Provider provider30 = builder8.clientProvider;
        retrofit.RestAdapter.Builder builder31 = builder0.setClient(provider30);
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(executor7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(errorHandler10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http://example.com/" + "'", str14, "http://example.com/");
        org.junit.Assert.assertNotNull(server15);
        org.junit.Assert.assertNotNull(gsonConverter16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertNotNull(server21);
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Retrofit-Idle" + "'", str23, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(executor28);
        org.junit.Assert.assertNotNull(provider30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.util.List<retrofit.client.Header> headerList12 = null;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("http://example.com/", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "Retrofit-", headerList15, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput20);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("http://example.com", "default", headerList15, typedOutput22);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("Retrofit-Idle", "", headerList15, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.String str27 = request25.getMethod();
        java.util.List<retrofit.client.Header> headerList28 = request25.getHeaders();
        java.util.List<retrofit.client.Header> headerList29 = request25.getHeaders();
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Retrofit-Idle" + "'", str27, "Retrofit-Idle");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList29);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        retrofit.RestAdapter.LogLevel logLevel3 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean4 = logLevel3.log();
        builder0.logLevel = logLevel3;
        retrofit.RequestInterceptor requestInterceptor6 = builder0.requestInterceptor;
        retrofit.Server server7 = builder0.server;
        retrofit.Profiler profiler8 = null;
        builder0.profiler = profiler8;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertTrue("'" + logLevel3 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel3.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(requestInterceptor6);
        org.junit.Assert.assertNull(server7);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.SerializedObjectSupporter serializedObjectSupporter15 = new retrofit.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString9();
        retrofit.Server server17 = serializedObjectSupporter15.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter18 = serializedObjectSupporter15.deserializeObjectConverter6();
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString4();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString5();
        retrofit.converter.GsonConverter gsonConverter22 = serializedObjectSupporter15.deserializeObjectConverter7();
        builder14.converter = gsonConverter22;
        retrofit.Server server26 = new retrofit.Server("http://example.com/", "hi!");
        java.lang.String str27 = server26.getName();
        builder14.server = server26;
        java.lang.String str29 = server26.getUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(server17);
        org.junit.Assert.assertNotNull(gsonConverter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Retrofit-Idle" + "'", str19, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "http://example.com/" + "'", str20, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://example.com/" + "'", str21, "http://example.com/");
        org.junit.Assert.assertNotNull(gsonConverter22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "http://example.com/" + "'", str29, "http://example.com/");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        java.util.concurrent.Executor executor7 = null;
        builder0.httpExecutor = executor7;
        retrofit.client.Client.Provider provider9 = builder0.getclientProvider();
        retrofit.RestAdapter.Log log10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.RestAdapter.Builder builder11 = builder0.setLog(log10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(provider9);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.RestAdapter.RestHandler restHandler25 = restAdapter20.new RestHandler();
        java.util.concurrent.Executor executor26 = restAdapter20.httpExecutor;
        retrofit.client.Client.Provider provider27 = restAdapter20.getclientProvider();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(executor26);
        org.junit.Assert.assertNull(provider27);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler2 = builder0.errorHandler;
        builder0.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder4 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter5 = new retrofit.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString9();
        retrofit.Server server7 = serializedObjectSupporter5.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter8 = serializedObjectSupporter5.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder9 = builder4.setConverter((retrofit.converter.Converter) gsonConverter8);
        builder4.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        java.lang.String str15 = serializedObjectSupporter11.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter11.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler17 = serializedObjectSupporter11.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder18 = builder4.setErrorHandler(errorHandler17);
        builder18.ensureSaneDefaults();
        java.util.concurrent.Executor executor20 = builder18.getcallbackExecutor();
        builder0.httpExecutor = executor20;
        retrofit.Profiler profiler22 = null;
        builder0.profiler = profiler22;
        retrofit.ErrorHandler errorHandler24 = builder0.errorHandler;
        java.util.concurrent.Executor executor25 = builder0.callbackExecutor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNull(errorHandler2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://example.com/" + "'", str6, "http://example.com/");
        org.junit.Assert.assertNotNull(server7);
        org.junit.Assert.assertNotNull(gsonConverter8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Retrofit-Idle" + "'", str15, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "http://example.com/" + "'", str16, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(executor20);
        org.junit.Assert.assertNotNull(errorHandler24);
        org.junit.Assert.assertNotNull(executor25);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = new retrofit.SerializedObjectSupporter();
        java.lang.String str2 = serializedObjectSupporter1.deserializeObjectString9();
        retrofit.Server server3 = serializedObjectSupporter1.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter1.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder5 = builder0.setConverter((retrofit.converter.Converter) gsonConverter4);
        builder0.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter7 = new retrofit.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString9();
        retrofit.Server server9 = serializedObjectSupporter7.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter10 = serializedObjectSupporter7.deserializeObjectConverter6();
        java.lang.String str11 = serializedObjectSupporter7.deserializeObjectString2();
        java.lang.String str12 = serializedObjectSupporter7.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler13 = serializedObjectSupporter7.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder14 = builder0.setErrorHandler(errorHandler13);
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.Server server19 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider20 = null;
        java.util.concurrent.Executor executor21 = null;
        java.util.concurrent.Executor executor22 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter23 = new retrofit.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor25 = serializedObjectSupporter23.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = new retrofit.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString9();
        retrofit.Server server28 = serializedObjectSupporter26.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter29 = serializedObjectSupporter26.deserializeObjectConverter6();
        retrofit.Profiler profiler30 = null;
        retrofit.ErrorHandler errorHandler31 = null;
        retrofit.RestAdapter.Builder builder32 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = builder32.serializedObjectSupporter;
        retrofit.RestAdapter.Log log34 = retrofit.RestAdapter.Log.NONE;
        builder32.log = log34;
        retrofit.RestAdapter.LogLevel logLevel36 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter37 = new retrofit.RestAdapter(server19, provider20, executor21, executor22, requestInterceptor25, (retrofit.converter.Converter) gsonConverter29, profiler30, errorHandler31, log34, logLevel36);
        retrofit.RestAdapter.Builder builder38 = builder15.setRequestInterceptor(requestInterceptor25);
        builder14.requestInterceptor = requestInterceptor25;
        retrofit.Profiler profiler40 = null;
        builder14.profiler = profiler40;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        builder14.log = log44;
        retrofit.SerializedObjectSupporter serializedObjectSupporter47 = new retrofit.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString9();
        retrofit.Server server49 = serializedObjectSupporter47.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter50 = serializedObjectSupporter47.deserializeObjectConverter6();
        java.lang.String str51 = serializedObjectSupporter47.deserializeObjectString2();
        java.lang.String str52 = serializedObjectSupporter47.deserializeObjectString4();
        java.lang.String str53 = serializedObjectSupporter47.deserializeObjectString4();
        retrofit.client.Response response54 = serializedObjectSupporter47.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter55 = serializedObjectSupporter47.deserializeObjectConverter2();
        retrofit.RestAdapter.Builder builder56 = builder14.setConverter((retrofit.converter.Converter) gsonConverter55);
        retrofit.RestAdapter.Builder builder58 = builder14.setServer("hi!");
        retrofit.client.Client.Provider provider59 = builder14.clientProvider;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://example.com/" + "'", str2, "http://example.com/");
        org.junit.Assert.assertNotNull(server3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://example.com/" + "'", str8, "http://example.com/");
        org.junit.Assert.assertNotNull(server9);
        org.junit.Assert.assertNotNull(gsonConverter10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Retrofit-Idle" + "'", str11, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "http://example.com/" + "'", str24, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "http://example.com/" + "'", str27, "http://example.com/");
        org.junit.Assert.assertNotNull(server28);
        org.junit.Assert.assertNotNull(gsonConverter29);
        org.junit.Assert.assertNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(log34);
        org.junit.Assert.assertTrue("'" + logLevel36 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel36.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "http://example.com/" + "'", str48, "http://example.com/");
        org.junit.Assert.assertNotNull(server49);
        org.junit.Assert.assertNotNull(gsonConverter50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Retrofit-Idle" + "'", str51, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "http://example.com/" + "'", str52, "http://example.com/");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "http://example.com/" + "'", str53, "http://example.com/");
        org.junit.Assert.assertNotNull(response54);
        org.junit.Assert.assertNotNull(gsonConverter55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(provider59);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        retrofit.Server server2 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider3 = null;
        java.util.concurrent.Executor executor4 = null;
        java.util.concurrent.Executor executor5 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor8 = serializedObjectSupporter6.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter9 = new retrofit.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString9();
        retrofit.Server server11 = serializedObjectSupporter9.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter12 = serializedObjectSupporter9.deserializeObjectConverter6();
        retrofit.Profiler profiler13 = null;
        retrofit.ErrorHandler errorHandler14 = null;
        retrofit.RestAdapter.Builder builder15 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter16 = builder15.serializedObjectSupporter;
        retrofit.RestAdapter.Log log17 = retrofit.RestAdapter.Log.NONE;
        builder15.log = log17;
        retrofit.RestAdapter.LogLevel logLevel19 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter20 = new retrofit.RestAdapter(server2, provider3, executor4, executor5, requestInterceptor8, (retrofit.converter.Converter) gsonConverter12, profiler13, errorHandler14, log17, logLevel19);
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        boolean boolean22 = logLevel21.log();
        restAdapter20.setLogLevel(logLevel21);
        retrofit.client.Client.Provider provider24 = restAdapter20.getclientProvider();
        retrofit.Profiler profiler25 = restAdapter20.getprofiler();
        retrofit.ErrorHandler errorHandler26 = restAdapter20.geterrorHandler();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://example.com/" + "'", str10, "http://example.com/");
        org.junit.Assert.assertNotNull(server11);
        org.junit.Assert.assertNotNull(gsonConverter12);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(log17);
        org.junit.Assert.assertTrue("'" + logLevel19 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel19.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(profiler25);
        org.junit.Assert.assertNull(errorHandler26);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        retrofit.Server server0 = null;
        retrofit.client.Client.Provider provider1 = null;
        java.util.concurrent.Executor executor2 = null;
        java.util.concurrent.Executor executor3 = null;
        retrofit.RequestInterceptor requestInterceptor4 = null;
        retrofit.converter.Converter converter5 = null;
        retrofit.Profiler profiler6 = null;
        retrofit.ErrorHandler errorHandler7 = null;
        retrofit.RestAdapter.Log log8 = null;
        retrofit.RestAdapter.LogLevel logLevel9 = null;
        retrofit.RestAdapter restAdapter10 = new retrofit.RestAdapter(server0, provider1, executor2, executor3, requestInterceptor4, converter5, profiler6, errorHandler7, log8, logLevel9);
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = restAdapter10.serializedObjectSupporter;
        retrofit.converter.Converter converter12 = restAdapter10.converter;
        java.util.concurrent.Executor executor13 = restAdapter10.httpExecutor;
        retrofit.RestAdapter.LogLevel logLevel14 = restAdapter10.getLogLevel();
        retrofit.RequestInterceptor requestInterceptor15 = restAdapter10.getrequestInterceptor();
        retrofit.client.Client.Provider provider16 = restAdapter10.clientProvider;
        retrofit.Profiler profiler17 = restAdapter10.profiler;
        java.util.concurrent.Executor executor18 = restAdapter10.gethttpExecutor();
        retrofit.RestAdapter.RestHandler restHandler19 = restAdapter10.new RestHandler();
        retrofit.RestAdapter.Builder builder20 = new retrofit.RestAdapter.Builder();
        retrofit.RestAdapter.LogLevel logLevel21 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter.Builder builder22 = builder20.setLogLevel(logLevel21);
        retrofit.converter.Converter converter23 = builder22.converter;
        retrofit.RestAdapter.Builder builder24 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter25 = builder24.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler26 = builder24.errorHandler;
        builder24.ensureSaneDefaults();
        retrofit.ErrorHandler errorHandler28 = builder24.errorHandler;
        retrofit.RestAdapter.Builder builder29 = builder22.setErrorHandler(errorHandler28);
        retrofit.RestAdapter.LogLevel logLevel30 = builder22.logLevel;
        // The following exception was thrown during execution in test generation
        try {
            restAdapter10.setLogLevel(logLevel30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Log level may not be null.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(executor13);
        org.junit.Assert.assertNull(logLevel14);
        org.junit.Assert.assertNull(requestInterceptor15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(profiler17);
        org.junit.Assert.assertNull(executor18);
        org.junit.Assert.assertTrue("'" + logLevel21 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel21.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNull(serializedObjectSupporter25);
        org.junit.Assert.assertNull(errorHandler26);
        org.junit.Assert.assertNotNull(errorHandler28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + logLevel30 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel30.equals(retrofit.RestAdapter.LogLevel.BASIC));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        retrofit.SerializedObjectSupporter serializedObjectSupporter0 = new retrofit.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor2 = serializedObjectSupporter0.deserializeObjectRequestInterceptor1();
        retrofit.client.Response response3 = serializedObjectSupporter0.deserializeObjectResponse2();
        retrofit.converter.GsonConverter gsonConverter4 = serializedObjectSupporter0.deserializeObjectConverter5();
        retrofit.client.Response response5 = serializedObjectSupporter0.deserializeObjectResponse7();
        retrofit.converter.GsonConverter gsonConverter6 = serializedObjectSupporter0.deserializeObjectConverter2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "http://example.com/" + "'", str1, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor2);
        org.junit.Assert.assertNotNull(response3);
        org.junit.Assert.assertNotNull(gsonConverter4);
        org.junit.Assert.assertNotNull(response5);
        org.junit.Assert.assertNotNull(gsonConverter6);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.converter.Converter converter1 = builder0.converter;
        retrofit.SerializedObjectSupporter serializedObjectSupporter2 = new retrofit.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString9();
        retrofit.Server server4 = serializedObjectSupporter2.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter5 = serializedObjectSupporter2.deserializeObjectConverter6();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler8 = serializedObjectSupporter2.deserializeObjectErrorHandler1();
        builder0.errorHandler = errorHandler8;
        retrofit.RestAdapter.Builder builder10 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter11 = new retrofit.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString9();
        retrofit.Server server13 = serializedObjectSupporter11.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter14 = serializedObjectSupporter11.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder15 = builder10.setConverter((retrofit.converter.Converter) gsonConverter14);
        builder10.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = new retrofit.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString9();
        retrofit.Server server19 = serializedObjectSupporter17.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter20 = serializedObjectSupporter17.deserializeObjectConverter6();
        java.lang.String str21 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler23 = serializedObjectSupporter17.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder24 = builder10.setErrorHandler(errorHandler23);
        retrofit.RestAdapter.Builder builder25 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter26 = builder25.serializedObjectSupporter;
        retrofit.Server server29 = new retrofit.Server("Retrofit-", "http://example.com/");
        retrofit.client.Client.Provider provider30 = null;
        java.util.concurrent.Executor executor31 = null;
        java.util.concurrent.Executor executor32 = null;
        retrofit.SerializedObjectSupporter serializedObjectSupporter33 = new retrofit.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString9();
        retrofit.RequestInterceptor requestInterceptor35 = serializedObjectSupporter33.deserializeObjectRequestInterceptor1();
        retrofit.SerializedObjectSupporter serializedObjectSupporter36 = new retrofit.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString9();
        retrofit.Server server38 = serializedObjectSupporter36.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter39 = serializedObjectSupporter36.deserializeObjectConverter6();
        retrofit.Profiler profiler40 = null;
        retrofit.ErrorHandler errorHandler41 = null;
        retrofit.RestAdapter.Builder builder42 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter43 = builder42.serializedObjectSupporter;
        retrofit.RestAdapter.Log log44 = retrofit.RestAdapter.Log.NONE;
        builder42.log = log44;
        retrofit.RestAdapter.LogLevel logLevel46 = retrofit.RestAdapter.LogLevel.BASIC;
        retrofit.RestAdapter restAdapter47 = new retrofit.RestAdapter(server29, provider30, executor31, executor32, requestInterceptor35, (retrofit.converter.Converter) gsonConverter39, profiler40, errorHandler41, log44, logLevel46);
        retrofit.RestAdapter.Builder builder48 = builder25.setRequestInterceptor(requestInterceptor35);
        builder24.requestInterceptor = requestInterceptor35;
        builder0.requestInterceptor = requestInterceptor35;
        retrofit.Server server51 = builder0.server;
        retrofit.RestAdapter.Builder builder53 = builder0.setServer("http://example.com");
        retrofit.RestAdapter.Log log54 = builder0.log;
        retrofit.RestAdapter.Builder builder55 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter56 = builder55.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler57 = builder55.errorHandler;
        builder55.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder59 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter60 = builder59.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler61 = builder59.errorHandler;
        builder59.ensureSaneDefaults();
        retrofit.RestAdapter.Builder builder63 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter64 = new retrofit.SerializedObjectSupporter();
        java.lang.String str65 = serializedObjectSupporter64.deserializeObjectString9();
        retrofit.Server server66 = serializedObjectSupporter64.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter67 = serializedObjectSupporter64.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder68 = builder63.setConverter((retrofit.converter.Converter) gsonConverter67);
        builder63.ensureSaneDefaults();
        retrofit.SerializedObjectSupporter serializedObjectSupporter70 = new retrofit.SerializedObjectSupporter();
        java.lang.String str71 = serializedObjectSupporter70.deserializeObjectString9();
        retrofit.Server server72 = serializedObjectSupporter70.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter73 = serializedObjectSupporter70.deserializeObjectConverter6();
        java.lang.String str74 = serializedObjectSupporter70.deserializeObjectString2();
        java.lang.String str75 = serializedObjectSupporter70.deserializeObjectString4();
        retrofit.ErrorHandler errorHandler76 = serializedObjectSupporter70.deserializeObjectErrorHandler1();
        retrofit.RestAdapter.Builder builder77 = builder63.setErrorHandler(errorHandler76);
        builder77.ensureSaneDefaults();
        java.util.concurrent.Executor executor79 = builder77.getcallbackExecutor();
        builder59.httpExecutor = executor79;
        builder55.httpExecutor = executor79;
        retrofit.client.Client.Provider provider82 = builder55.getclientProvider();
        builder0.setclientProvider(provider82);
        retrofit.SerializedObjectSupporter serializedObjectSupporter84 = builder0.serializedObjectSupporter;
        retrofit.Profiler profiler85 = null;
        builder0.profiler = profiler85;
        org.junit.Assert.assertNull(converter1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "http://example.com/" + "'", str3, "http://example.com/");
        org.junit.Assert.assertNotNull(server4);
        org.junit.Assert.assertNotNull(gsonConverter5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Retrofit-Idle" + "'", str6, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "http://example.com/" + "'", str12, "http://example.com/");
        org.junit.Assert.assertNotNull(server13);
        org.junit.Assert.assertNotNull(gsonConverter14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "http://example.com/" + "'", str18, "http://example.com/");
        org.junit.Assert.assertNotNull(server19);
        org.junit.Assert.assertNotNull(gsonConverter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Retrofit-Idle" + "'", str21, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "http://example.com/" + "'", str22, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "http://example.com/" + "'", str34, "http://example.com/");
        org.junit.Assert.assertNotNull(requestInterceptor35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "http://example.com/" + "'", str37, "http://example.com/");
        org.junit.Assert.assertNotNull(server38);
        org.junit.Assert.assertNotNull(gsonConverter39);
        org.junit.Assert.assertNull(serializedObjectSupporter43);
        org.junit.Assert.assertNotNull(log44);
        org.junit.Assert.assertTrue("'" + logLevel46 + "' != '" + retrofit.RestAdapter.LogLevel.BASIC + "'", logLevel46.equals(retrofit.RestAdapter.LogLevel.BASIC));
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNull(server51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNull(log54);
        org.junit.Assert.assertNull(serializedObjectSupporter56);
        org.junit.Assert.assertNull(errorHandler57);
        org.junit.Assert.assertNull(serializedObjectSupporter60);
        org.junit.Assert.assertNull(errorHandler61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "http://example.com/" + "'", str65, "http://example.com/");
        org.junit.Assert.assertNotNull(server66);
        org.junit.Assert.assertNotNull(gsonConverter67);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "http://example.com/" + "'", str71, "http://example.com/");
        org.junit.Assert.assertNotNull(server72);
        org.junit.Assert.assertNotNull(gsonConverter73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Retrofit-Idle" + "'", str74, "Retrofit-Idle");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "http://example.com/" + "'", str75, "http://example.com/");
        org.junit.Assert.assertNotNull(errorHandler76);
        org.junit.Assert.assertNotNull(builder77);
        org.junit.Assert.assertNotNull(executor79);
        org.junit.Assert.assertNotNull(provider82);
        org.junit.Assert.assertNull(serializedObjectSupporter84);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        retrofit.RestAdapter.Builder builder0 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter1 = builder0.serializedObjectSupporter;
        retrofit.RestAdapter.Log log2 = retrofit.RestAdapter.Log.NONE;
        builder0.log = log2;
        retrofit.Server server4 = builder0.server;
        retrofit.RestAdapter.Builder builder5 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter6 = new retrofit.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString9();
        retrofit.Server server8 = serializedObjectSupporter6.deserializeObjectServer1();
        retrofit.converter.GsonConverter gsonConverter9 = serializedObjectSupporter6.deserializeObjectConverter6();
        retrofit.RestAdapter.Builder builder10 = builder5.setConverter((retrofit.converter.Converter) gsonConverter9);
        builder5.ensureSaneDefaults();
        java.util.concurrent.Executor executor12 = null;
        builder5.httpExecutor = executor12;
        retrofit.client.Client.Provider provider14 = builder5.getclientProvider();
        builder0.setclientProvider(provider14);
        retrofit.RestAdapter.Builder builder16 = new retrofit.RestAdapter.Builder();
        retrofit.SerializedObjectSupporter serializedObjectSupporter17 = builder16.serializedObjectSupporter;
        retrofit.ErrorHandler errorHandler18 = builder16.errorHandler;
        builder16.ensureSaneDefaults();
        retrofit.RestAdapter.Log log20 = builder16.log;
        retrofit.Profiler profiler21 = null;
        builder16.profiler = profiler21;
        retrofit.client.Client.Provider provider23 = builder16.getclientProvider();
        java.util.concurrent.Executor executor24 = builder16.callbackExecutor;
        builder0.callbackExecutor = executor24;
        retrofit.RequestInterceptor requestInterceptor26 = builder0.requestInterceptor;
        org.junit.Assert.assertNull(serializedObjectSupporter1);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertNull(server4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://example.com/" + "'", str7, "http://example.com/");
        org.junit.Assert.assertNotNull(server8);
        org.junit.Assert.assertNotNull(gsonConverter9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(provider14);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(errorHandler18);
        org.junit.Assert.assertNotNull(log20);
        org.junit.Assert.assertNotNull(provider23);
        org.junit.Assert.assertNotNull(executor24);
        org.junit.Assert.assertNull(requestInterceptor26);
    }
}

