/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 07 03:07:18 GMT 2021
 */

package me.prettyprint.cassandra.connection.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.security.auth.Subject;
import me.prettyprint.cassandra.connection.client.HKerberosThriftClient;
import me.prettyprint.cassandra.service.CassandraHost;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HKerberosThriftClient_ESTest extends HKerberosThriftClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Subject subject0 = new Subject();
      CassandraHost cassandraHost0 = new CassandraHost("");
      HKerberosThriftClient hKerberosThriftClient0 = new HKerberosThriftClient(subject0, cassandraHost0, "nX9eY:x@&0pKnCf");
      // EXCEPTION DIFF:
      // The original version did not exhibit this exception:
      //     java.lang.IllegalArgumentException : object is not an instance of declaring class
      cassandraHost0.setMaxFrameSize(1);
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     me.prettyprint.hector.api.exceptions.HectorTransportException : Unable to open transport to (127.0.0.1):9160 , Cannot open null host.
      // Undeclared exception!
      try { 
        hKerberosThriftClient0.open();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to open transport to (127.0.0.1):9160 , Cannot open null host.
         //
         verifyException("me.prettyprint.cassandra.connection.client.HKerberosThriftClient", e);
         assertTrue(e.getMessage().equals("Unable to open transport to (127.0.0.1):9160 , Cannot open null host."));   
      }
  }
}
