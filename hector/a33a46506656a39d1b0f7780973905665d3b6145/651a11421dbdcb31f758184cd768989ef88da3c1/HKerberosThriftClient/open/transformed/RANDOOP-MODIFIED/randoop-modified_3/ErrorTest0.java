import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0001");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient4 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost2, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient4.equals(null)", !hKerberosThriftClient4.equals(null));
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0002");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost2.setCassandraThriftSocketTimeout(0);
        cassandraHost2.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost2, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0003");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0004");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0005");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        cassandraHost3.setUseSocketKeepalive(false);
        java.lang.String str8 = cassandraHost3.getIp();
        java.lang.String str9 = cassandraHost3.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0006");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0007");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost2.setCassandraThriftSocketTimeout(0);
        cassandraHost2.setUseSocketKeepalive(false);
        java.lang.String str7 = cassandraHost2.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost2, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0008");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0009");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int5 = cassandraHost4.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0010");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost77.setCassandraThriftSocketTimeout(0);
        cassandraHost77.setUseSocketKeepalive(false);
        int int82 = cassandraHost77.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost77, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0011");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str9 = cassandraHost8.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0012");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        java.lang.String str6 = cassandraHost3.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        boolean boolean10 = cassandraHost3.equals((java.lang.Object) boolean9);
        boolean boolean12 = cassandraHost3.equals((java.lang.Object) (-1L));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0013");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost33 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str34 = cassandraHost33.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient36 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost33, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient36.equals(null)", !hKerberosThriftClient36.equals(null));
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0014");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0015");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0016");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient36 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient36.equals(null)", !hKerberosThriftClient36.equals(null));
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0017");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        org.slf4j.Logger logger2 = me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log;
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log = logger2;
        boolean boolean4 = subject0.equals((java.lang.Object) logger2);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        int int8 = cassandraHost7.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0018");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0019");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str12 = cassandraHost11.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0020");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0021");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong11 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean12 = cassandraHost9.equals((java.lang.Object) (short) 100);
        long long13 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        boolean boolean14 = cassandraHost9.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0022");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        java.lang.String str17 = cassandraHost12.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0023");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost39, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0024");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        org.slf4j.Logger logger2 = me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log;
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log = logger2;
        boolean boolean4 = subject0.equals((java.lang.Object) logger2);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0025");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        cassandraHost3.setUseSocketKeepalive(false);
        java.lang.String str8 = cassandraHost3.getIp();
        java.lang.String str9 = cassandraHost3.getUrl();
        cassandraHost3.setMaxFrameSize(10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0026");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        java.lang.String str93 = cassandraHost91.getHost();
        cassandraHost91.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost91.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0027");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        cassandraHost39.setLifo(false);
        boolean boolean43 = cassandraHost39.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost39, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0028");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0029");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str11 = cassandraHost10.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0030");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        long long44 = cassandraHost40.getMaxWaitTimeWhenExhausted();
        boolean boolean45 = cassandraHost40.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean49 = cassandraHost40.equals((java.lang.Object) cassandraHost48);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost48, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0031");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        int int11 = cassandraHost9.getCassandraThriftSocketTimeout();
        cassandraHost9.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0032");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0033");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        int int9 = cassandraHost4.getMaxActive();
        java.lang.String str10 = cassandraHost4.getUrl();
        cassandraHost4.setMaxActive((int) (short) 10);
        boolean boolean13 = cassandraHost4.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0034");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        boolean boolean44 = cassandraHost42.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0035");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost91.setCassandraThriftSocketTimeout(0);
        cassandraHost91.setUseSocketKeepalive(false);
        java.lang.String str96 = cassandraHost91.getIp();
        java.lang.String str97 = cassandraHost91.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0036");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str41 = cassandraHost40.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0037");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str12 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0038");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient5 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient5.equals(null)", !hKerberosThriftClient5.equals(null));
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0039");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0040");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int37 = cassandraHost36.getMaxActive();
        java.lang.String str38 = cassandraHost36.toString();
        cassandraHost36.setMaxActive((int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0041");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0042");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong80 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean81 = cassandraHost78.equals((java.lang.Object) (short) 100);
        int int82 = cassandraHost78.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0043");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str78 = cassandraHost77.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost77, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0044");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str12 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0045");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0046");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0047");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean37 = cassandraHost34.equals((java.lang.Object) (short) 100);
        long long38 = cassandraHost34.getMaxWaitTimeWhenExhausted();
        boolean boolean39 = cassandraHost34.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0048");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0049");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int9 = cassandraHost8.getPort();
        java.lang.String str10 = cassandraHost8.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0050");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) (short) 100);
        long long17 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        boolean boolean18 = cassandraHost13.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean22 = cassandraHost13.equals((java.lang.Object) cassandraHost21);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0051");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        cassandraHost37.setUseSocketKeepalive(false);
        boolean boolean42 = cassandraHost37.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0052");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0053");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0054");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost34.setCassandraThriftSocketTimeout(0);
        java.lang.String str37 = cassandraHost34.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean40 = cassandraHost39.getUseSocketKeepalive();
        boolean boolean41 = cassandraHost34.equals((java.lang.Object) boolean40);
        boolean boolean43 = cassandraHost34.equals((java.lang.Object) (-1L));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0055");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        java.lang.String str16 = cassandraHost11.getIp();
        long long17 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0056");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str85 = cassandraHost84.getIp();
        cassandraHost84.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost84.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0057");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        long long9 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        boolean boolean10 = cassandraHost5.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean14 = cassandraHost5.equals((java.lang.Object) cassandraHost13);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0058");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        java.lang.String str13 = cassandraHost10.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost10.equals((java.lang.Object) boolean16);
        int int18 = cassandraHost10.getMaxActive();
        boolean boolean19 = cassandraHost10.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0059");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0060");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        cassandraHost41.setUseSocketKeepalive(false);
        int int46 = cassandraHost41.getMaxActive();
        java.lang.String str47 = cassandraHost41.getUrl();
        cassandraHost41.setMaxActive((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0061");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0062");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong39 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean40 = cassandraHost37.equals((java.lang.Object) (short) 100);
        cassandraHost37.setUseSocketKeepalive(false);
        long long43 = cassandraHost37.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0063");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        org.slf4j.Logger logger2 = me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log;
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log = logger2;
        boolean boolean4 = subject0.equals((java.lang.Object) logger2);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0064");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        java.lang.String str40 = cassandraHost37.getUrl();
        long long41 = cassandraHost37.getMaxWaitTimeWhenExhausted();
        cassandraHost37.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0065");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        boolean boolean12 = cassandraHost11.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0066");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        cassandraHost3.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0067");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str7 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0068");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0069");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0070");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str13 = cassandraHost12.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0071");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        cassandraHost37.setUseSocketKeepalive(false);
        cassandraHost37.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0072");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        org.slf4j.Logger logger2 = me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log;
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient.log = logger2;
        boolean boolean4 = subject0.equals((java.lang.Object) logger2);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0073");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str14 = cassandraHost13.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0074");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 1);
        long long8 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0075");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        cassandraHost40.setUseSocketKeepalive(false);
        java.lang.String str45 = cassandraHost40.getIp();
        int int46 = cassandraHost40.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost40, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0076");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        int int7 = cassandraHost5.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0077");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        java.lang.String str12 = cassandraHost9.getUrl();
        long long13 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        cassandraHost9.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0078");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0079");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean37 = cassandraHost36.getUseSocketKeepalive();
        cassandraHost36.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0080");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        cassandraHost10.setUseSocketKeepalive(false);
        int int15 = cassandraHost10.getMaxActive();
        java.lang.String str16 = cassandraHost10.getUrl();
        cassandraHost10.setMaxActive((int) (short) 10);
        boolean boolean19 = cassandraHost10.isPerformNameResolution();
        int int20 = cassandraHost10.getMaxActive();
        boolean boolean21 = cassandraHost10.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0081");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        cassandraHost41.setUseSocketKeepalive(false);
        long long47 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0082");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        java.lang.String str42 = cassandraHost40.getUrl();
        cassandraHost40.setMaxFrameSize(100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost40, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0083");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("0");
        int int40 = cassandraHost39.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost39, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0084");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("0");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0085");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0086");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        java.lang.String str13 = cassandraHost11.getUrl();
        cassandraHost11.setMaxFrameSize(100);
        int int16 = cassandraHost11.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost11, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0087");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        cassandraHost37.setUseSocketKeepalive(false);
        int int42 = cassandraHost37.getMaxActive();
        java.lang.String str43 = cassandraHost37.getUrl();
        cassandraHost37.setMaxActive((int) (short) 10);
        boolean boolean46 = cassandraHost37.isPerformNameResolution();
        java.lang.String str47 = cassandraHost37.toString();
        boolean boolean48 = cassandraHost37.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0088");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        boolean boolean88 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost90.setCassandraThriftSocketTimeout((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0089");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost12.setMaxActive((-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0090");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean6 = cassandraHost5.isPerformNameResolution();
        long long7 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0091");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0092");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0093");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost7.setCassandraThriftSocketTimeout((int) (short) 10);
        boolean boolean10 = cassandraHost5.equals((java.lang.Object) cassandraHost7);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0094");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        int int15 = cassandraHost13.getCassandraThriftSocketTimeout();
        java.lang.String str16 = cassandraHost13.getName();
        int int17 = cassandraHost13.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0095");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong6 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean7 = cassandraHost4.equals((java.lang.Object) (short) 100);
        cassandraHost4.setUseSocketKeepalive(false);
        long long10 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        cassandraHost4.setCassandraThriftSocketTimeout((int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0096");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("1", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0097");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost15.isPerformNameResolution();
        long long18 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        cassandraHost15.setCassandraThriftSocketTimeout((int) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0098");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        int int9 = cassandraHost4.getMaxActive();
        java.lang.String str10 = cassandraHost4.getUrl();
        cassandraHost4.setMaxActive((int) (short) 10);
        boolean boolean13 = cassandraHost4.isPerformNameResolution();
        int int14 = cassandraHost4.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0099");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0100");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost11.equals((java.lang.Object) boolean17);
        int int19 = cassandraHost11.getMaxActive();
        boolean boolean20 = cassandraHost11.getUseSocketKeepalive();
        java.lang.String str21 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0101");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        boolean boolean13 = cassandraHost11.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost11.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0102");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str12 = cassandraHost11.getHost();
        int int13 = cassandraHost11.getMaxActive();
        java.lang.String str14 = cassandraHost11.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0103");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0104");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str15 = cassandraHost14.getIp();
        cassandraHost14.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str18 = cassandraHost14.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0105");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost92, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0106");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        cassandraHost91.setLifo(false);
        boolean boolean95 = cassandraHost91.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0107");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean91 = cassandraHost90.getUseSocketKeepalive();
        java.lang.String str92 = cassandraHost90.getUrl();
        cassandraHost90.setMaxFrameSize(100);
        int int95 = cassandraHost90.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0108");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0109");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        cassandraHost15.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0110");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0111");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) 50);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0112");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str41 = cassandraHost40.getIp();
        cassandraHost40.setMaxWaitTimeWhenExhausted((long) 0);
        boolean boolean44 = cassandraHost40.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0113");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str86 = cassandraHost85.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient88 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient88.equals(null)", !hKerberosThriftClient88.equals(null));
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0114");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str38 = cassandraHost37.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0115");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int15 = cassandraHost14.getMaxActive();
        java.lang.String str16 = cassandraHost14.toString();
        cassandraHost14.setMaxActive((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0116");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        cassandraHost12.setUseSocketKeepalive(false);
        int int19 = cassandraHost12.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0117");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        java.lang.String str43 = cassandraHost40.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        boolean boolean47 = cassandraHost40.equals((java.lang.Object) boolean46);
        boolean boolean49 = cassandraHost40.equals((java.lang.Object) (-1L));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost40, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0118");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0119");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost12.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0120");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost11.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0121");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str12 = cassandraHost11.getIp();
        cassandraHost11.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str15 = cassandraHost11.getHost();
        java.lang.String str16 = cassandraHost11.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0122");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0123");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong6 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean7 = cassandraHost4.equals((java.lang.Object) (short) 100);
        long long8 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0124");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        cassandraHost5.setUseSocketKeepalive(false);
        long long11 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0125");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        boolean boolean88 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str91 = cassandraHost90.getIp();
        cassandraHost90.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str94 = cassandraHost90.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0126");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int39 = cassandraHost38.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0127");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.lang.String str36 = cassandraHost35.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0128");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost84.setCassandraThriftSocketTimeout(0);
        java.lang.String str87 = cassandraHost84.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean90 = cassandraHost89.getUseSocketKeepalive();
        boolean boolean91 = cassandraHost84.equals((java.lang.Object) boolean90);
        int int92 = cassandraHost84.getMaxActive();
        java.lang.String str93 = cassandraHost84.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost84, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0129");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str15 = cassandraHost14.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0130");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        java.lang.String str93 = cassandraHost91.getUrl();
        int int94 = cassandraHost91.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0131");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean91 = cassandraHost90.getUseSocketKeepalive();
        int int92 = cassandraHost90.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0132");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        cassandraHost11.setLifo(false);
        boolean boolean15 = cassandraHost11.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0133");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        long long9 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        boolean boolean10 = cassandraHost5.getUseThriftFramedTransport();
        cassandraHost5.setMaxWaitTimeWhenExhausted((long) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0134");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0135");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0136");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean37 = cassandraHost34.equals((java.lang.Object) (short) 100);
        long long38 = cassandraHost34.getMaxWaitTimeWhenExhausted();
        boolean boolean39 = cassandraHost34.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean43 = cassandraHost34.equals((java.lang.Object) cassandraHost42);
        cassandraHost42.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str46 = cassandraHost42.getHost();
        int int47 = cassandraHost42.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0137");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        long long41 = cassandraHost40.getMaxWaitTimeWhenExhausted();
        java.lang.String str42 = cassandraHost40.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0138");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost13.setCassandraThriftSocketTimeout((int) (short) 10);
        java.lang.String str16 = cassandraHost13.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0139");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean91 = cassandraHost90.getUseSocketKeepalive();
        int int92 = cassandraHost90.getCassandraThriftSocketTimeout();
        cassandraHost90.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0140");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost56, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0141");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.lang.String str18 = cassandraHost17.getIp();
        java.lang.String str19 = cassandraHost17.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0142");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) (short) 100);
        long long17 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        boolean boolean18 = cassandraHost13.getUseThriftFramedTransport();
        cassandraHost13.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost13.setUseSocketKeepalive(false);
        int int23 = cassandraHost13.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0143");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        int int93 = cassandraHost91.getCassandraThriftSocketTimeout();
        cassandraHost91.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0144");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost5.setMaxActive((int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0145");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":97");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0146");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str15 = cassandraHost14.getName();
        cassandraHost14.setMaxActive(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0147");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0148");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str8 = cassandraHost7.getHost();
        int int9 = cassandraHost7.getMaxActive();
        java.lang.String str10 = cassandraHost7.getHost();
        java.lang.String str11 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0149");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean93 = cassandraHost92.getUseSocketKeepalive();
        java.lang.String str94 = cassandraHost92.getUrl();
        cassandraHost92.setMaxFrameSize(100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0150");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        cassandraHost40.setUseSocketKeepalive(false);
        long long46 = cassandraHost40.getMaxWaitTimeWhenExhausted();
        cassandraHost40.setMaxActive((int) '4');
        int int49 = cassandraHost40.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0151");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int93 = cassandraHost92.getPort();
        int int94 = cassandraHost92.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0152");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        java.lang.String str45 = cassandraHost44.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0153");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost89.setCassandraThriftSocketTimeout(0);
        java.lang.String str92 = cassandraHost89.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost89, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0154");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean5 = cassandraHost4.getUseSocketKeepalive();
        java.lang.String str6 = cassandraHost4.getUrl();
        int int7 = cassandraHost4.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0155");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0156");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long37 = cassandraHost36.getMaxWaitTimeWhenExhausted();
        cassandraHost36.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0157");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0158");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        int int18 = cassandraHost13.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0159");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        long long6 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        cassandraHost5.setCassandraThriftSocketTimeout((int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0160");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int9 = cassandraHost8.getMaxActive();
        cassandraHost8.setCassandraThriftSocketTimeout((int) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0161");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean38 = cassandraHost37.getUseSocketKeepalive();
        java.lang.String str39 = cassandraHost37.getHost();
        cassandraHost37.setCassandraThriftSocketTimeout((int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0162");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":97");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0163");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost93, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0164");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        boolean boolean43 = subject42.isReadOnly();
        java.lang.String str44 = subject42.toString();
        java.util.Set<java.security.Principal> principalSet45 = subject42.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean51 = cassandraHost48.equals((java.lang.Object) (short) 100);
        int int52 = cassandraHost48.getCassandraThriftSocketTimeout();
        boolean boolean53 = subject42.equals((java.lang.Object) cassandraHost48);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0165");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost8.setCassandraThriftSocketTimeout(0);
        cassandraHost8.setUseSocketKeepalive(false);
        java.lang.String str13 = cassandraHost8.getIp();
        java.lang.String str14 = cassandraHost8.getUrl();
        cassandraHost8.setMaxFrameSize(10);
        cassandraHost8.setLifo(true);
        cassandraHost8.setLifo(true);
        java.lang.String str21 = cassandraHost8.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0166");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("0");
        int int8 = cassandraHost7.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0167");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long5 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0168");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        cassandraHost5.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0169");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.lang.Object> objSet90 = subject89.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost93.setMaxWaitTimeWhenExhausted((long) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost93, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0170");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0171");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0172");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost39.setCassandraThriftSocketTimeout(10);
        java.lang.String str42 = cassandraHost39.getName();
        boolean boolean43 = cassandraHost39.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0173");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0174");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0175");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        java.lang.Class<?> wildcardClass93 = cassandraHost92.getClass();
        boolean boolean94 = subject87.equals((java.lang.Object) wildcardClass93);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost97, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0176");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        cassandraHost40.setUseSocketKeepalive(false);
        java.lang.String str45 = cassandraHost40.getIp();
        java.lang.String str46 = cassandraHost40.getUrl();
        cassandraHost40.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost40.setMaxActive((int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0177");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean11 = cassandraHost8.equals((java.lang.Object) (short) 100);
        boolean boolean12 = cassandraHost8.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0178");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        java.lang.String str12 = cassandraHost9.getUrl();
        long long13 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        cassandraHost9.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0179");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0180");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0181");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str14 = cassandraHost13.getHost();
        int int15 = cassandraHost13.getMaxActive();
        java.lang.String str16 = cassandraHost13.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0182");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        cassandraHost36.setUseSocketKeepalive(false);
        java.lang.String str41 = cassandraHost36.getIp();
        long long42 = cassandraHost36.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0183");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0184");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int8 = cassandraHost7.getMaxActive();
        java.lang.String str9 = cassandraHost7.toString();
        cassandraHost7.setMaxActive((int) (short) 101);
        cassandraHost7.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0185");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        cassandraHost11.setMaxFrameSize(0);
        cassandraHost11.setMaxActive((int) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0186");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        long long8 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        cassandraHost4.setUseThriftFramedTransport(false);
        java.lang.String str11 = cassandraHost4.getName();
        java.lang.String str12 = cassandraHost4.toString();
        int int13 = cassandraHost4.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0187");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean86 = cassandraHost85.getUseSocketKeepalive();
        boolean boolean87 = cassandraHost85.isPerformNameResolution();
        cassandraHost85.setUseSocketKeepalive(false);
        boolean boolean90 = cassandraHost85.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0188");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("100", 9160);
        int int37 = cassandraHost36.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0189");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        int int16 = cassandraHost14.getCassandraThriftSocketTimeout();
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0190");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost93.setMaxActive((-1));
        int int96 = cassandraHost93.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost93, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0191");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean91 = cassandraHost90.isPerformNameResolution();
        long long92 = cassandraHost90.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0192");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost84.setCassandraThriftSocketTimeout(0);
        cassandraHost84.setUseSocketKeepalive(false);
        java.lang.String str89 = cassandraHost84.getIp();
        cassandraHost84.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0193");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0194");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0195");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0196");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        long long25 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0197");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean43 = cassandraHost42.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0198");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong6 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean7 = cassandraHost4.equals((java.lang.Object) (short) 100);
        long long8 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        boolean boolean9 = cassandraHost4.getUseThriftFramedTransport();
        cassandraHost4.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost4.setUseSocketKeepalive(false);
        int int14 = cassandraHost4.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0199");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) 'a');
        long long11 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0200");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0201");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.lang.String str15 = cassandraHost14.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0202");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0203");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0204");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int17 = cassandraHost16.getPort();
        java.lang.String str18 = cassandraHost16.toString();
        boolean boolean19 = cassandraHost16.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0205");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (byte) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0206");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost11.equals((java.lang.Object) boolean17);
        boolean boolean20 = cassandraHost11.equals((java.lang.Object) (-1L));
        cassandraHost11.setMaxFrameSize((int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0207");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str43 = cassandraHost42.getUrl();
        java.lang.String str44 = cassandraHost42.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0208");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        java.lang.String str15 = cassandraHost12.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        boolean boolean19 = cassandraHost12.equals((java.lang.Object) boolean18);
        int int20 = cassandraHost12.getMaxActive();
        cassandraHost12.setMaxFrameSize((int) 'a');
        boolean boolean23 = cassandraHost12.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "Subject:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0209");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str94 = cassandraHost93.getHost();
        int int95 = cassandraHost93.getMaxActive();
        java.lang.String str96 = cassandraHost93.getHost();
        java.lang.String str97 = cassandraHost93.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost93, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0210");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong37 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean38 = cassandraHost35.equals((java.lang.Object) (short) 100);
        long long39 = cassandraHost35.getMaxWaitTimeWhenExhausted();
        boolean boolean40 = cassandraHost35.getUseThriftFramedTransport();
        java.lang.String str41 = cassandraHost35.getHost();
        boolean boolean42 = cassandraHost35.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0211");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost91.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0212");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):-1", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0213");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str8 = cassandraHost7.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0214");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0215");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        int int79 = cassandraHost78.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient81 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient81.equals(null)", !hKerberosThriftClient81.equals(null));
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0216");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        long long11 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        cassandraHost10.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0217");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", 9160);
        boolean boolean93 = cassandraHost92.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0218");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0219");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        cassandraHost41.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0220");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong87 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean88 = cassandraHost85.equals((java.lang.Object) (short) 100);
        int int89 = cassandraHost85.getCassandraThriftSocketTimeout();
        cassandraHost85.setLifo(false);
        cassandraHost85.setCassandraThriftSocketTimeout((int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0221");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        boolean boolean6 = cassandraHost5.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0222");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        java.lang.String str6 = cassandraHost3.getUrl();
        long long7 = cassandraHost3.getMaxWaitTimeWhenExhausted();
        cassandraHost3.setMaxFrameSize((int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0223");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.lang.Object> objSet90 = subject89.getPrivateCredentials();
        boolean boolean91 = subject89.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        int int95 = cassandraHost94.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost94, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0224");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        cassandraHost10.setUseSocketKeepalive(false);
        int int15 = cassandraHost10.getPort();
        cassandraHost10.setLifo(false);
        int int18 = cassandraHost10.getPort();
        boolean boolean19 = cassandraHost10.getUseThriftFramedTransport();
        cassandraHost10.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0225");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        java.lang.String str44 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean47 = cassandraHost46.getUseSocketKeepalive();
        boolean boolean48 = cassandraHost41.equals((java.lang.Object) boolean47);
        int int49 = cassandraHost41.getMaxActive();
        boolean boolean50 = cassandraHost41.getUseSocketKeepalive();
        java.lang.String str51 = cassandraHost41.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0226");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0227");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "Subject:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0228");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0229");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        int int9 = cassandraHost4.getMaxFrameSize();
        int int10 = cassandraHost4.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0230");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost3.setCassandraThriftSocketTimeout((int) (short) 10);
        java.lang.String str6 = cassandraHost3.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0231");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        cassandraHost11.setMaxFrameSize(2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0232");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        cassandraHost14.setCassandraThriftSocketTimeout(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0233");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) 'a');
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0234");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("1");
        cassandraHost6.setUseSocketKeepalive(true);
        cassandraHost6.setMaxFrameSize((int) (byte) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0235");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0236");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        boolean boolean17 = cassandraHost12.getUseThriftFramedTransport();
        boolean boolean18 = cassandraHost12.getLifo();
        cassandraHost12.setLifo(true);
        boolean boolean21 = cassandraHost12.getLifo();
        boolean boolean22 = cassandraHost12.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0237");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0238");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost11, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0239");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0240");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        int int46 = cassandraHost45.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0241");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("", (int) 'a');
        java.lang.String str12 = cassandraHost11.getIp();
        java.lang.String str13 = cassandraHost11.getUrl();
        int int14 = cassandraHost11.getMaxActive();
        boolean boolean15 = cassandraHost11.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0242");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        boolean boolean88 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        int int92 = cassandraHost91.getMaxFrameSize();
        java.lang.String str93 = cassandraHost91.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0243");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        int int13 = cassandraHost11.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0244");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0245");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean39 = cassandraHost38.getUseSocketKeepalive();
        java.lang.String str40 = cassandraHost38.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0246");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0247");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0248");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0249");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str12 = cassandraHost11.getIp();
        cassandraHost11.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost11.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str17 = cassandraHost11.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0250");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        long long18 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        cassandraHost17.setMaxFrameSize(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0251");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("99");
        boolean boolean91 = cassandraHost90.getUseThriftFramedTransport();
        java.lang.String str92 = cassandraHost90.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0252");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0253");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 2);
        long long44 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0254");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        cassandraHost17.setUseSocketKeepalive(false);
        int int22 = cassandraHost17.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "0.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0255");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long15 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0256");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost83.setCassandraThriftSocketTimeout(0);
        cassandraHost83.setUseSocketKeepalive(false);
        int int88 = cassandraHost83.getMaxFrameSize();
        int int89 = cassandraHost83.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost83, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0257");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str92 = cassandraHost91.getName();
        cassandraHost91.setMaxActive(0);
        cassandraHost91.setMaxActive((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0258");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str37 = cassandraHost36.getHost();
        int int38 = cassandraHost36.getMaxActive();
        java.lang.String str39 = cassandraHost36.getHost();
        java.lang.String str40 = cassandraHost36.getUrl();
        java.lang.String str41 = cassandraHost36.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0259");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        java.lang.String str18 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean21 = cassandraHost20.getUseSocketKeepalive();
        boolean boolean22 = cassandraHost15.equals((java.lang.Object) boolean21);
        int int23 = cassandraHost15.getMaxActive();
        boolean boolean24 = cassandraHost15.isPerformNameResolution();
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0260");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient36 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient36.equals(null)", !hKerberosThriftClient36.equals(null));
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0261");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost39.setCassandraThriftSocketTimeout(0);
        cassandraHost39.setUseSocketKeepalive(false);
        java.lang.String str44 = cassandraHost39.getIp();
        java.lang.String str45 = cassandraHost39.getUrl();
        cassandraHost39.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost39.setMaxActive((int) (byte) 100);
        int int50 = cassandraHost39.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0262");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0263");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost55 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost55.setCassandraThriftSocketTimeout(10);
        cassandraHost55.setMaxActive((int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost55, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0264");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost8.setCassandraThriftSocketTimeout(0);
        java.lang.String str11 = cassandraHost8.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        boolean boolean15 = cassandraHost8.equals((java.lang.Object) boolean14);
        boolean boolean17 = cassandraHost8.equals((java.lang.Object) (-1L));
        cassandraHost8.setMaxFrameSize((int) (byte) 1);
        int int20 = cassandraHost8.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0265");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0266");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str7 = cassandraHost6.getHost();
        long long8 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0267");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        long long8 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        cassandraHost4.setMaxFrameSize((int) (short) 100);
        cassandraHost4.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0268");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0269");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxFrameSize();
        int int20 = cassandraHost14.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0270");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0271");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        cassandraHost4.setUseSocketKeepalive(false);
        int int11 = cassandraHost4.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0272");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean11 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        cassandraHost13.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0273");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean42 = cassandraHost41.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0274");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str33 = cassandraHost32.getIp();
        cassandraHost32.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str36 = cassandraHost32.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0275");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10");
        cassandraHost13.setMaxFrameSize((int) (short) 102);
        java.lang.String str16 = cassandraHost13.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0276");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0277");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("102");
        cassandraHost91.setMaxFrameSize(50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0278");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        java.lang.String str18 = cassandraHost13.getIp();
        java.lang.String str19 = cassandraHost13.getUrl();
        cassandraHost13.setMaxFrameSize(10);
        int int22 = cassandraHost13.getMaxActive();
        cassandraHost13.setMaxActive((int) (byte) 0);
        int int25 = cassandraHost13.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0279");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0280");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        long long11 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        cassandraHost10.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0281");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost34.setCassandraThriftSocketTimeout(0);
        java.lang.String str37 = cassandraHost34.getUrl();
        long long38 = cassandraHost34.getMaxWaitTimeWhenExhausted();
        cassandraHost34.setUseThriftFramedTransport(false);
        java.lang.String str41 = cassandraHost34.getName();
        int int42 = cassandraHost34.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0282");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0283");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("103", 0);
        java.lang.String str46 = cassandraHost45.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0284");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost83.setCassandraThriftSocketTimeout(0);
        java.lang.String str86 = cassandraHost83.getUrl();
        int int87 = cassandraHost83.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost83, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0285");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long39 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        cassandraHost38.setUseSocketKeepalive(true);
        java.lang.String str42 = cassandraHost38.getHost();
        java.lang.String str43 = cassandraHost38.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0286");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str4 = cassandraHost3.getHost();
        int int5 = cassandraHost3.getMaxActive();
        java.lang.String str6 = cassandraHost3.getHost();
        java.lang.String str7 = cassandraHost3.getUrl();
        java.lang.String str8 = cassandraHost3.getUrl();
        boolean boolean9 = cassandraHost3.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0287");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0288");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0289");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong12 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean13 = cassandraHost10.equals((java.lang.Object) (short) 100);
        long long14 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        boolean boolean15 = cassandraHost10.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean19 = cassandraHost10.equals((java.lang.Object) cassandraHost18);
        cassandraHost18.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str22 = cassandraHost18.getHost();
        int int23 = cassandraHost18.getCassandraThriftSocketTimeout();
        java.lang.String str24 = cassandraHost18.getIp();
        java.lang.String str25 = cassandraHost18.getName();
        boolean boolean26 = cassandraHost18.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0290");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean17 = cassandraHost14.equals((java.lang.Object) (short) 100);
        cassandraHost14.setUseSocketKeepalive(false);
        long long20 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        cassandraHost14.setMaxActive((int) '4');
        cassandraHost14.setCassandraThriftSocketTimeout((int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0291");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long12 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        cassandraHost11.setUseSocketKeepalive(true);
        java.lang.String str15 = cassandraHost11.getHost();
        java.lang.String str16 = cassandraHost11.toString();
        java.lang.String str17 = cassandraHost11.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0292");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str3 = cassandraHost2.getIp();
        cassandraHost2.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost2.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str8 = cassandraHost2.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost2, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0293");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100");
        cassandraHost15.setCassandraThriftSocketTimeout(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0294");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str42 = cassandraHost41.getIp();
        cassandraHost41.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str45 = cassandraHost41.getName();
        boolean boolean46 = cassandraHost41.getLifo();
        boolean boolean47 = cassandraHost41.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0295");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("", (int) 'a');
        boolean boolean12 = cassandraHost11.getLifo();
        cassandraHost11.setCassandraThriftSocketTimeout((int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0296");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        long long39 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        java.lang.String str40 = cassandraHost38.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0297");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost55 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost55.setCassandraThriftSocketTimeout(0);
        java.lang.String str58 = cassandraHost55.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost60 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean61 = cassandraHost60.getUseSocketKeepalive();
        boolean boolean62 = cassandraHost55.equals((java.lang.Object) boolean61);
        boolean boolean64 = cassandraHost55.equals((java.lang.Object) (-1L));
        cassandraHost55.setMaxFrameSize((int) (byte) 1);
        int int67 = cassandraHost55.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient69 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost55, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient69.equals(null)", !hKerberosThriftClient69.equals(null));
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0298");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        int int93 = cassandraHost91.getPort();
        boolean boolean94 = cassandraHost91.getUseSocketKeepalive();
        int int95 = cassandraHost91.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0299");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient5 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient5.equals(null)", !hKerberosThriftClient5.equals(null));
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0300");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean38 = cassandraHost37.getUseSocketKeepalive();
        java.lang.String str39 = cassandraHost37.getUrl();
        cassandraHost37.setMaxFrameSize(100);
        int int42 = cassandraHost37.getMaxActive();
        int int43 = cassandraHost37.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0301");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0302");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        cassandraHost11.setUseSocketKeepalive(false);
        int int18 = cassandraHost11.getMaxActive();
        java.lang.String str19 = cassandraHost11.getIp();
        java.lang.String str20 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0303");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int6 = cassandraHost5.getMaxActive();
        java.lang.String str7 = cassandraHost5.toString();
        cassandraHost5.setMaxActive((int) (short) 0);
        int int10 = cassandraHost5.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0304");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("99");
        boolean boolean15 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0305");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0306");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0307");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        boolean boolean93 = cassandraHost92.getUseSocketKeepalive();
        int int94 = cassandraHost92.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost92, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0308");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):10", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0309");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost11.equals((java.lang.Object) boolean17);
        int int19 = cassandraHost11.getMaxActive();
        cassandraHost11.setMaxFrameSize((int) 'a');
        boolean boolean22 = cassandraHost11.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0310");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        cassandraHost15.setUseSocketKeepalive(true);
        cassandraHost15.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0311");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost56.setCassandraThriftSocketTimeout(0);
        cassandraHost56.setUseSocketKeepalive(false);
        java.lang.String str61 = cassandraHost56.getIp();
        int int62 = cassandraHost56.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient64 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost56, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient64.equals(null)", !hKerberosThriftClient64.equals(null));
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0312");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0313");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxActive();
        boolean boolean14 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str15 = cassandraHost5.getUrl();
        cassandraHost5.setCassandraThriftSocketTimeout((int) (byte) 1);
        cassandraHost5.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0314");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (byte) 1);
        cassandraHost81.setCassandraThriftSocketTimeout((int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0315");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int37 = cassandraHost36.getPort();
        boolean boolean38 = cassandraHost36.getLifo();
        cassandraHost36.setMaxWaitTimeWhenExhausted((long) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0316");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet12 = subject11.getPrincipals();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet28, principalSet36);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet10, principalSet12, principalSet36);
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.lang.Object> objSet60 = subject47.getPrivateCredentials();
        subject47.setReadOnly();
        java.util.Set<java.security.Principal> principalSet62 = subject47.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(true, principalSet7, principalSet46, principalSet62);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", (int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient68 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject63, cassandraHost66, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient68.equals(null)", !hKerberosThriftClient68.equals(null));
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0317");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0318");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("102");
        cassandraHost11.setMaxFrameSize(50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0319");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) 'a');
        java.lang.String str91 = cassandraHost90.getUrl();
        boolean boolean92 = cassandraHost90.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0320");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean11 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0321");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        long long7 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0322");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str8 = cassandraHost7.getHost();
        cassandraHost7.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) cassandraHost13);
        cassandraHost13.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0323");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        int int16 = cassandraHost15.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0324");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("99");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0325");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0326");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) 50);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) 50);
        cassandraHost5.setMaxActive((int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0327");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        cassandraHost45.setLifo(true);
        java.lang.String str48 = cassandraHost45.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0328");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        long long16 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        boolean boolean17 = cassandraHost12.getUseThriftFramedTransport();
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost12.setUseSocketKeepalive(false);
        cassandraHost12.setCassandraThriftSocketTimeout(103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0329");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost89.setMaxActive((int) 'a');
        int int92 = cassandraHost89.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost89, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0330");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        int int15 = cassandraHost14.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160(:9160):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0331");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", 0);
        boolean boolean17 = cassandraHost16.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0332");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong44 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean45 = cassandraHost42.equals((java.lang.Object) (short) 100);
        long long46 = cassandraHost42.getMaxWaitTimeWhenExhausted();
        boolean boolean47 = cassandraHost42.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean51 = cassandraHost42.equals((java.lang.Object) cassandraHost50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost50, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0333");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet10, principalSet29);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost33 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient35 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject30, cassandraHost33, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient35.equals(null)", !hKerberosThriftClient35.equals(null));
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0334");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean17 = cassandraHost14.equals((java.lang.Object) (short) 100);
        cassandraHost14.setUseSocketKeepalive(false);
        long long20 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        cassandraHost14.setMaxActive((int) '4');
        int int23 = cassandraHost14.getMaxFrameSize();
        boolean boolean24 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0335");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 0);
        int int16 = cassandraHost15.getPort();
        boolean boolean17 = cassandraHost15.isPerformNameResolution();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int20 = cassandraHost19.getMaxActive();
        java.lang.String str21 = cassandraHost19.toString();
        cassandraHost19.setMaxActive((int) (short) 101);
        cassandraHost19.setUseThriftFramedTransport(true);
        boolean boolean26 = cassandraHost15.equals((java.lang.Object) cassandraHost19);
        java.lang.String str27 = cassandraHost15.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0336");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        java.lang.String str87 = cassandraHost86.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost86, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0337");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.lang.Object> objSet90 = subject89.getPrivateCredentials();
        boolean boolean91 = subject89.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("103", 0);
        int int95 = cassandraHost94.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost94, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0338");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0339");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong80 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean81 = cassandraHost78.equals((java.lang.Object) (short) 100);
        long long82 = cassandraHost78.getMaxWaitTimeWhenExhausted();
        boolean boolean83 = cassandraHost78.getUseThriftFramedTransport();
        cassandraHost78.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost78.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost78.setUseSocketKeepalive(false);
        cassandraHost78.setCassandraThriftSocketTimeout(103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0340");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost16.setCassandraThriftSocketTimeout(10);
        java.lang.String str19 = cassandraHost16.getName();
        boolean boolean20 = cassandraHost16.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0341");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost38.setMaxActive((int) 'a');
        int int41 = cassandraHost38.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0342");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str17 = cassandraHost16.getIp();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost16.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str22 = cassandraHost16.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0343");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str10 = cassandraHost9.getIp();
        cassandraHost9.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str13 = cassandraHost9.getHost();
        java.lang.String str14 = cassandraHost9.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0344");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0345");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0346");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        cassandraHost57.setCassandraThriftSocketTimeout(2147483647);
        boolean boolean60 = cassandraHost57.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost57, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0347");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        cassandraHost36.setUseSocketKeepalive(false);
        int int41 = cassandraHost36.getMaxActive();
        java.lang.String str42 = cassandraHost36.getUrl();
        cassandraHost36.setMaxActive((int) (short) 10);
        boolean boolean45 = cassandraHost36.isPerformNameResolution();
        int int46 = cassandraHost36.getMaxActive();
        boolean boolean47 = cassandraHost36.getLifo();
        int int48 = cassandraHost36.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0348");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        cassandraHost43.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0349");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("99", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0350");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost14.isPerformNameResolution();
        long long17 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0351");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        cassandraHost11.setMaxFrameSize(2);
        cassandraHost11.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0352");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0353");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0354");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean17 = subject0.equals((java.lang.Object) "hi!(hi!):101");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str20 = cassandraHost19.getIp();
        cassandraHost19.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost19.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str25 = cassandraHost19.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0355");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str46 = cassandraHost45.getHost();
        int int47 = cassandraHost45.getMaxActive();
        java.lang.String str48 = cassandraHost45.getHost();
        java.lang.String str49 = cassandraHost45.getUrl();
        java.lang.String str50 = cassandraHost45.getUrl();
        boolean boolean51 = cassandraHost45.getLifo();
        cassandraHost45.setUseThriftFramedTransport(false);
        cassandraHost45.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient57 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient57.equals(null)", !hKerberosThriftClient57.equals(null));
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0356");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean92 = cassandraHost91.getUseSocketKeepalive();
        int int93 = cassandraHost91.getCassandraThriftSocketTimeout();
        java.lang.String str94 = cassandraHost91.getName();
        int int95 = cassandraHost91.getCassandraThriftSocketTimeout();
        cassandraHost91.setMaxActive((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0357");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        cassandraHost17.setUseSocketKeepalive(false);
        int int22 = cassandraHost17.getPort();
        cassandraHost17.setLifo(false);
        int int25 = cassandraHost17.getPort();
        boolean boolean26 = cassandraHost17.getUseThriftFramedTransport();
        cassandraHost17.setUseSocketKeepalive(true);
        int int29 = cassandraHost17.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0358");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0359");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int41 = cassandraHost40.getPort();
        java.lang.String str42 = cassandraHost40.toString();
        int int43 = cassandraHost40.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "hi!(hi!)(hi!(hi!)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0360");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        java.lang.String str17 = cassandraHost16.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0361");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):-1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0362");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0363");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long46 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        cassandraHost45.setUseSocketKeepalive(true);
        java.lang.String str49 = cassandraHost45.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0364");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, principalSet53, principalSet55, principalSet79);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet40, (java.util.Set<java.security.Principal>) principalSet48, principalSet79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (short) 52);
        boolean boolean93 = cassandraHost92.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost92, "0.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0365");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0366");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        boolean boolean85 = cassandraHost84.getUseSocketKeepalive();
        cassandraHost84.setMaxActive(2147483647);
        java.lang.String str88 = cassandraHost84.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "9740");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0367");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 34);
        int int42 = cassandraHost41.getPort();
        java.lang.String str43 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0368");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost92, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0369");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0370");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 2);
        long long15 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0371");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0372");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int14 = cassandraHost13.getPort();
        int int15 = cassandraHost13.getMaxFrameSize();
        int int16 = cassandraHost13.getPort();
        boolean boolean17 = cassandraHost13.isPerformNameResolution();
        int int18 = cassandraHost13.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0373");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("35", 0);
        cassandraHost92.setCassandraThriftSocketTimeout(105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0374");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0375");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        java.lang.String str44 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean47 = cassandraHost46.getUseSocketKeepalive();
        boolean boolean48 = cassandraHost41.equals((java.lang.Object) boolean47);
        boolean boolean50 = cassandraHost41.equals((java.lang.Object) (-1L));
        cassandraHost41.setMaxFrameSize((int) (byte) 1);
        int int53 = cassandraHost41.getMaxActive();
        boolean boolean54 = cassandraHost41.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0376");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str14 = cassandraHost13.getName();
        cassandraHost13.setCassandraThriftSocketTimeout(2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0377");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        boolean boolean92 = cassandraHost91.getUseThriftFramedTransport();
        boolean boolean93 = cassandraHost91.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0378");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        long long9 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        boolean boolean10 = cassandraHost5.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean14 = cassandraHost5.equals((java.lang.Object) cassandraHost13);
        cassandraHost13.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str17 = cassandraHost13.getHost();
        int int18 = cassandraHost13.getCassandraThriftSocketTimeout();
        java.lang.String str19 = cassandraHost13.getIp();
        java.lang.String str20 = cassandraHost13.getName();
        int int21 = cassandraHost13.getMaxFrameSize();
        int int22 = cassandraHost13.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0379");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 50);
        cassandraHost39.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0380");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        int int9 = cassandraHost7.getPort();
        cassandraHost7.setMaxFrameSize((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0381");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0382");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean7 = cassandraHost6.getUseSocketKeepalive();
        long long8 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0383");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        java.lang.String str40 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("1", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost43, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0384");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0385");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        long long16 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        boolean boolean17 = cassandraHost12.getUseThriftFramedTransport();
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost12.setUseSocketKeepalive(false);
        cassandraHost12.setCassandraThriftSocketTimeout(103);
        int int26 = cassandraHost12.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0386");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        java.lang.String str19 = cassandraHost14.getIp();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxFrameSize(10);
        boolean boolean23 = cassandraHost14.getLifo();
        boolean boolean24 = cassandraHost14.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0387");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        java.lang.String str16 = cassandraHost14.getHost();
        java.lang.String str17 = cassandraHost14.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0388");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        java.lang.String str43 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost45.setCassandraThriftSocketTimeout(0);
        java.lang.String str48 = cassandraHost45.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean51 = cassandraHost50.getUseSocketKeepalive();
        boolean boolean52 = cassandraHost45.equals((java.lang.Object) boolean51);
        boolean boolean54 = cassandraHost45.equals((java.lang.Object) (-1L));
        cassandraHost45.setMaxFrameSize((int) (byte) 1);
        cassandraHost45.setUseThriftFramedTransport(false);
        cassandraHost45.setMaxWaitTimeWhenExhausted(51L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0389");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean5 = cassandraHost4.getUseSocketKeepalive();
        int int6 = cassandraHost4.getPort();
        cassandraHost4.setMaxFrameSize((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0390");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost85.setCassandraThriftSocketTimeout(0);
        java.lang.String str88 = cassandraHost85.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean91 = cassandraHost90.getUseSocketKeepalive();
        boolean boolean92 = cassandraHost85.equals((java.lang.Object) boolean91);
        boolean boolean94 = cassandraHost85.equals((java.lang.Object) (-1L));
        cassandraHost85.setMaxFrameSize((int) (byte) 1);
        long long97 = cassandraHost85.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0391");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        cassandraHost12.setUseSocketKeepalive(true);
        boolean boolean16 = cassandraHost12.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0392");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("9693", (int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient83 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient83.equals(null)", !hKerberosThriftClient83.equals(null));
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0393");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (short) 99);
        cassandraHost42.setMaxActive((int) (short) 100);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        boolean boolean46 = subject45.isReadOnly();
        java.lang.String str47 = subject45.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong48 = new java.util.concurrent.atomic.AtomicLong();
        double double49 = atomicLong48.doubleValue();
        long long50 = atomicLong48.incrementAndGet();
        boolean boolean51 = subject45.equals((java.lang.Object) long50);
        java.lang.String str52 = subject45.toString();
        java.util.Set<java.security.Principal> principalSet53 = subject45.getPrincipals();
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        boolean boolean55 = subject54.isReadOnly();
        java.lang.String str56 = subject54.toString();
        java.util.Set<java.security.Principal> principalSet57 = subject54.getPrincipals();
        java.util.Set<java.lang.Object> objSet58 = subject54.getPublicCredentials();
        boolean boolean59 = subject45.equals((java.lang.Object) objSet58);
        boolean boolean60 = cassandraHost42.equals((java.lang.Object) boolean59);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0394");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.lang.Object> objSet90 = subject89.getPrivateCredentials();
        boolean boolean91 = subject89.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost94, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0395");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        java.lang.String str93 = cassandraHost92.getHost();
        int int94 = cassandraHost92.getCassandraThriftSocketTimeout();
        boolean boolean95 = cassandraHost92.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0396");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        java.lang.String str18 = cassandraHost15.getUrl();
        long long19 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        cassandraHost15.setMaxFrameSize((int) (short) 100);
        cassandraHost15.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0397");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong87 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean88 = cassandraHost85.equals((java.lang.Object) (short) 100);
        cassandraHost85.setUseSocketKeepalive(false);
        long long91 = cassandraHost85.getMaxWaitTimeWhenExhausted();
        cassandraHost85.setCassandraThriftSocketTimeout((int) (short) 35);
        java.lang.String str94 = cassandraHost85.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0398");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        int int40 = cassandraHost39.getPort();
        int int41 = cassandraHost39.getPort();
        cassandraHost39.setMaxActive(98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0399");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        int int13 = cassandraHost11.getPort();
        int int14 = cassandraHost11.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160(:98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0400");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean12 = subject0.equals((java.lang.Object) "35");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("103", 0);
        int int16 = cassandraHost15.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0401");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 50);
        cassandraHost41.setUseThriftFramedTransport(false);
        java.lang.String str44 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0402");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        cassandraHost10.setUseSocketKeepalive(false);
        boolean boolean15 = cassandraHost10.getUseThriftFramedTransport();
        boolean boolean16 = cassandraHost10.getLifo();
        java.lang.String str17 = cassandraHost10.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0403");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        java.lang.String str18 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean21 = cassandraHost20.getUseSocketKeepalive();
        boolean boolean22 = cassandraHost15.equals((java.lang.Object) boolean21);
        int int23 = cassandraHost15.getMaxActive();
        cassandraHost15.setMaxFrameSize((int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0404");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int6 = cassandraHost5.getPort();
        int int7 = cassandraHost5.getCassandraThriftSocketTimeout();
        int int8 = cassandraHost5.getMaxActive();
        boolean boolean9 = cassandraHost5.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0405");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost25 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost25, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0406");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("102", 9160);
        boolean boolean6 = cassandraHost5.getUseThriftFramedTransport();
        long long7 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0407");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost42.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0408");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost92, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0409");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "(127.0.0.1):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0410");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long43 = cassandraHost42.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0411");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 10);
        cassandraHost18.setMaxActive((int) (short) 99);
        cassandraHost18.setCassandraThriftSocketTimeout((int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0412");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str3 = cassandraHost2.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient5 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost2, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient5.equals(null)", !hKerberosThriftClient5.equals(null));
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0413");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str40 = cassandraHost39.getHost();
        int int41 = cassandraHost39.getMaxActive();
        java.lang.String str42 = cassandraHost39.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0414");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 32);
        cassandraHost36.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0415");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):34", 101);
        int int36 = cassandraHost35.getMaxFrameSize();
        boolean boolean37 = subject31.equals((java.lang.Object) cassandraHost35);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0416");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        cassandraHost11.setUseSocketKeepalive(false);
        int int18 = cassandraHost11.getMaxActive();
        java.lang.String str19 = cassandraHost11.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0417");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost39.setMaxActive((-1));
        int int42 = cassandraHost39.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0418");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int45 = cassandraHost44.getPort();
        boolean boolean46 = cassandraHost44.getLifo();
        cassandraHost44.setMaxActive((int) (byte) 1);
        boolean boolean49 = cassandraHost44.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0419");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str12 = cassandraHost11.getUrl();
        java.lang.String str13 = cassandraHost11.getHost();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setMaxFrameSize((int) 'a');
        java.lang.String str18 = cassandraHost15.getIp();
        boolean boolean19 = cassandraHost11.equals((java.lang.Object) cassandraHost15);
        boolean boolean20 = cassandraHost11.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0420");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str16 = cassandraHost15.getHost();
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean22 = cassandraHost15.equals((java.lang.Object) cassandraHost21);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0421");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        int int46 = cassandraHost45.getPort();
        boolean boolean47 = cassandraHost45.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0422");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        long long12 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        java.lang.String str13 = cassandraHost11.getHost();
        boolean boolean14 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean15 = cassandraHost9.equals((java.lang.Object) boolean14);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0423");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient6 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient6.equals(null)", !hKerberosThriftClient6.equals(null));
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0424");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject1.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet44 = subject43.getPrincipals();
        java.security.Principal[] principalArray45 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet46 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet46, principalArray45);
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, principalSet44, (java.util.Set<java.security.Principal>) principalSet46, (java.util.Set<java.security.Principal>) principalSet49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet36, principalSet44);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet18, principalSet20, principalSet44);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        boolean boolean55 = subject54.isReadOnly();
        java.lang.String str56 = subject54.toString();
        subject54.setReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject54.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(true, principalSet15, principalSet44, principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost62 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (byte) 34);
        boolean boolean63 = cassandraHost62.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost62, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0425");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):-1", 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0426");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0427");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long16 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        cassandraHost15.setUseSocketKeepalive(true);
        long long19 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0428");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxActive();
        boolean boolean14 = cassandraHost5.isPerformNameResolution();
        cassandraHost5.setMaxWaitTimeWhenExhausted((long) (short) 35);
        boolean boolean17 = cassandraHost5.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0429");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("99");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0430");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean94 = cassandraHost93.getUseSocketKeepalive();
        boolean boolean95 = cassandraHost93.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "hi!(hi!)(hi!(hi!)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0431");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):10", (int) (short) 34);
        boolean boolean15 = cassandraHost14.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0432");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str44 = cassandraHost43.getName();
        boolean boolean45 = cassandraHost43.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost43, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0433");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean79 = subject75.equals((java.lang.Object) cassandraHost78);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str83 = cassandraHost82.getName();
        boolean boolean84 = cassandraHost82.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost82, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0434");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0435");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0436");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        cassandraHost12.setLifo(false);
        boolean boolean19 = cassandraHost12.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0437");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        java.lang.String str43 = cassandraHost40.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        boolean boolean47 = cassandraHost40.equals((java.lang.Object) boolean46);
        int int48 = cassandraHost40.getMaxFrameSize();
        int int49 = cassandraHost40.getPort();
        boolean boolean50 = cassandraHost40.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0438");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100");
        long long11 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0439");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0440");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean13 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0441");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        long long13 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, ":97(:97):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0442");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong();
        float float37 = atomicLong36.floatValue();
        boolean boolean40 = atomicLong36.compareAndSet(65L, (long) (short) 0);
        atomicLong36.set(0L);
        atomicLong36.lazySet((long) (short) 101);
        boolean boolean45 = subject31.equals((java.lang.Object) atomicLong36);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost47.setCassandraThriftSocketTimeout(0);
        cassandraHost47.setUseSocketKeepalive(false);
        int int52 = cassandraHost47.getMaxActive();
        java.lang.String str53 = cassandraHost47.getUrl();
        cassandraHost47.setMaxActive((int) (short) 10);
        boolean boolean56 = cassandraHost47.isPerformNameResolution();
        int int57 = cassandraHost47.getMaxActive();
        boolean boolean58 = cassandraHost47.getLifo();
        boolean boolean59 = cassandraHost47.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost47, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0443");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>)", (int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0444");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        java.util.Set<java.security.Principal> principalSet55 = subject53.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int58 = cassandraHost57.getPort();
        java.lang.String str59 = cassandraHost57.toString();
        cassandraHost57.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost57, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0445");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost25 = new me.prettyprint.cassandra.service.CassandraHost("12", (int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost25, ":9160(:9160):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0446");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean17 = cassandraHost14.equals((java.lang.Object) (short) 100);
        long long18 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        boolean boolean19 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean23 = cassandraHost14.equals((java.lang.Object) cassandraHost22);
        cassandraHost22.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str26 = cassandraHost22.getHost();
        int int27 = cassandraHost22.getCassandraThriftSocketTimeout();
        java.lang.String str28 = cassandraHost22.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost22, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0447");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>)", (int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0448");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        long long16 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        boolean boolean17 = cassandraHost12.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean21 = cassandraHost12.equals((java.lang.Object) cassandraHost20);
        cassandraHost20.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str24 = cassandraHost20.getHost();
        int int25 = cassandraHost20.getCassandraThriftSocketTimeout();
        java.lang.String str26 = cassandraHost20.getIp();
        java.lang.String str27 = cassandraHost20.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0449");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0450");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet12 = subject11.getPrincipals();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet28, principalSet36);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet10, principalSet12, principalSet36);
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.lang.Object> objSet60 = subject47.getPrivateCredentials();
        subject47.setReadOnly();
        java.util.Set<java.security.Principal> principalSet62 = subject47.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(true, principalSet7, principalSet46, principalSet62);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost66.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient70 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject63, cassandraHost66, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient70.equals(null)", !hKerberosThriftClient70.equals(null));
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0451");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("102", 9160);
        boolean boolean15 = cassandraHost14.getUseThriftFramedTransport();
        long long16 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0452");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160:50", (int) (short) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0453");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):-1");
        java.lang.String str91 = cassandraHost90.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0454");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.lang.Object> objSet44 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost46.setCassandraThriftSocketTimeout(0);
        cassandraHost46.setUseSocketKeepalive(false);
        java.lang.String str51 = cassandraHost46.getIp();
        java.lang.String str52 = cassandraHost46.getUrl();
        cassandraHost46.setMaxFrameSize(10);
        java.lang.String str55 = cassandraHost46.toString();
        long long56 = cassandraHost46.getMaxWaitTimeWhenExhausted();
        int int57 = cassandraHost46.getPort();
        cassandraHost46.setCassandraThriftSocketTimeout((int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0455");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str20 = cassandraHost19.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0456");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0457");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) 'a');
        java.lang.String str16 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0458");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0459");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str7 = cassandraHost6.getHost();
        int int8 = cassandraHost6.getMaxActive();
        java.lang.String str9 = cassandraHost6.getHost();
        java.lang.String str10 = cassandraHost6.getUrl();
        java.lang.String str11 = cassandraHost6.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0460");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) 99);
        long long80 = cassandraHost79.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost79, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0461");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)");
        cassandraHost14.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0462");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("103");
        int int6 = cassandraHost5.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0463");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0464");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("9381", (int) (byte) 52);
        java.lang.String str35 = cassandraHost34.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost34, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0465");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        java.lang.String str15 = cassandraHost12.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        boolean boolean19 = cassandraHost12.equals((java.lang.Object) boolean18);
        int int20 = cassandraHost12.getMaxActive();
        boolean boolean21 = cassandraHost12.getUseSocketKeepalive();
        java.lang.String str22 = cassandraHost12.getUrl();
        java.lang.String str23 = cassandraHost12.getHost();
        boolean boolean24 = cassandraHost12.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0466");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0467");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        cassandraHost40.setMaxFrameSize(2);
        cassandraHost40.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0468");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) 'a');
        java.lang.String str16 = cassandraHost15.getUrl();
        boolean boolean17 = cassandraHost15.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0469");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160:50", (int) (short) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0470");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        java.lang.String str13 = cassandraHost10.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost10.equals((java.lang.Object) boolean16);
        int int18 = cassandraHost10.getMaxFrameSize();
        int int19 = cassandraHost10.getPort();
        int int20 = cassandraHost10.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0471");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0472");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", (int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0473");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        boolean boolean7 = subject6.isReadOnly();
        java.lang.String str8 = subject6.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject6.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        boolean boolean17 = subject6.equals((java.lang.Object) cassandraHost12);
        java.util.Set<java.security.Principal> principalSet18 = subject6.getPrincipals();
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet35, principalSet43);
        subject51.setReadOnly();
        java.util.Set<java.lang.Object> objSet53 = subject51.getPublicCredentials();
        boolean boolean54 = subject51.isReadOnly();
        java.lang.String str55 = subject51.toString();
        subject51.setReadOnly();
        java.util.Set<java.security.Principal> principalSet57 = subject51.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        boolean boolean59 = subject58.isReadOnly();
        java.lang.String str60 = subject58.toString();
        java.util.Set<java.security.Principal> principalSet61 = subject58.getPrincipals();
        java.util.Set<java.security.Principal> principalSet62 = subject58.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject();
        boolean boolean64 = subject63.isReadOnly();
        java.lang.String str65 = subject63.toString();
        java.util.Set<java.security.Principal> principalSet66 = subject63.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost69 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong71 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean72 = cassandraHost69.equals((java.lang.Object) (short) 100);
        int int73 = cassandraHost69.getCassandraThriftSocketTimeout();
        boolean boolean74 = subject63.equals((java.lang.Object) cassandraHost69);
        java.util.Set<java.security.Principal> principalSet75 = subject63.getPrincipals();
        java.util.Set<java.security.Principal> principalSet76 = subject63.getPrincipals();
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet57, principalSet62, principalSet76);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(true, principalSet5, principalSet18, principalSet76);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 101);
        cassandraHost81.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0474");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("101:9160");
        java.lang.String str94 = cassandraHost93.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0475");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.lang.Object> objSet44 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong49 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean50 = cassandraHost47.equals((java.lang.Object) (short) 100);
        long long51 = cassandraHost47.getMaxWaitTimeWhenExhausted();
        boolean boolean52 = cassandraHost47.getUseThriftFramedTransport();
        cassandraHost47.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost47.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost47.setUseSocketKeepalive(false);
        cassandraHost47.setCassandraThriftSocketTimeout(103);
        int int61 = cassandraHost47.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0476");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.lang.String str9 = subject8.toString();
        java.lang.String str10 = subject8.toString();
        java.util.Set<java.lang.Object> objSet11 = subject8.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet12 = subject8.getPrincipals();
        boolean boolean13 = subject8.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject8.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet15 = subject8.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject8.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet17 = subject8.getPrincipals();
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        boolean boolean21 = subject20.isReadOnly();
        java.lang.String str22 = subject20.toString();
        subject20.setReadOnly();
        java.util.Set<java.security.Principal> principalSet24 = subject20.getPrincipals();
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet27 = subject26.getPrincipals();
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, principalSet27, (java.util.Set<java.security.Principal>) principalSet29, (java.util.Set<java.security.Principal>) principalSet32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        boolean boolean36 = subject35.isReadOnly();
        java.lang.String str37 = subject35.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong38 = new java.util.concurrent.atomic.AtomicLong();
        double double39 = atomicLong38.doubleValue();
        long long40 = atomicLong38.incrementAndGet();
        boolean boolean41 = subject35.equals((java.lang.Object) long40);
        java.lang.String str42 = subject35.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong44 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean45 = subject35.equals((java.lang.Object) atomicLong44);
        java.util.Set<java.lang.Object> objSet46 = subject35.getPrivateCredentials();
        boolean boolean47 = subject35.isReadOnly();
        java.util.Set<java.security.Principal> principalSet48 = subject35.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(true, principalSet24, (java.util.Set<java.security.Principal>) principalSet29, principalSet48);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject();
        java.lang.String str51 = subject50.toString();
        java.lang.String str52 = subject50.toString();
        java.util.Set<java.security.Principal> principalSet53 = subject50.getPrincipals();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        java.security.Principal[] principalArray78 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet79 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet79, principalArray78);
        java.security.Principal[] principalArray81 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet82 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet82, principalArray81);
        javax.security.auth.Subject subject84 = new javax.security.auth.Subject(false, principalSet77, (java.util.Set<java.security.Principal>) principalSet79, (java.util.Set<java.security.Principal>) principalSet82);
        javax.security.auth.Subject subject85 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet69, principalSet77);
        subject85.setReadOnly();
        java.util.Set<java.lang.Object> objSet87 = subject85.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet88 = subject85.getPrivateCredentials();
        boolean boolean89 = subject85.isReadOnly();
        java.util.Set<java.security.Principal> principalSet90 = subject85.getPrincipals();
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet29, principalSet53, principalSet90);
        javax.security.auth.Subject subject92 = new javax.security.auth.Subject(false, principalSet7, principalSet17, principalSet90);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject92, cassandraHost94, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0477");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", 0);
        boolean boolean40 = cassandraHost39.isPerformNameResolution();
        boolean boolean41 = cassandraHost39.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0478");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        java.lang.String str15 = cassandraHost12.getUrl();
        long long16 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        cassandraHost12.setMaxFrameSize((int) (short) 100);
        java.lang.String str19 = cassandraHost12.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0479");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean19 = cassandraHost16.equals((java.lang.Object) (short) 100);
        long long20 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean25 = cassandraHost16.equals((java.lang.Object) cassandraHost24);
        cassandraHost24.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str28 = cassandraHost24.getHost();
        java.lang.String str29 = cassandraHost24.getHost();
        cassandraHost24.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost24, ":9160(:9160):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0480");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("31", (int) (short) 35);
        java.lang.String str38 = cassandraHost37.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0481");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        cassandraHost3.setUseSocketKeepalive(false);
        java.lang.String str8 = cassandraHost3.getIp();
        java.lang.String str9 = cassandraHost3.getUrl();
        cassandraHost3.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost3.setMaxActive((int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0482");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        cassandraHost13.setUseSocketKeepalive(false);
        java.lang.String str20 = cassandraHost13.getIp();
        cassandraHost13.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0483");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) (short) 100);
        long long11 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        boolean boolean12 = cassandraHost7.getUseThriftFramedTransport();
        cassandraHost7.setMaxWaitTimeWhenExhausted((long) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0484");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) 50);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) 50);
        cassandraHost7.setMaxActive((int) (byte) 100);
        int int13 = cassandraHost7.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0485");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        java.lang.String str42 = cassandraHost41.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0486");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0487");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        int int12 = cassandraHost7.getMaxActive();
        java.lang.String str13 = cassandraHost7.getUrl();
        cassandraHost7.setMaxActive((int) (short) 10);
        boolean boolean16 = cassandraHost7.isPerformNameResolution();
        java.lang.String str17 = cassandraHost7.getIp();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost19.setUseThriftFramedTransport(true);
        java.lang.String str22 = cassandraHost19.getHost();
        boolean boolean23 = cassandraHost7.equals((java.lang.Object) str22);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160(:9160):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0488");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost84.setCassandraThriftSocketTimeout(0);
        cassandraHost84.setUseSocketKeepalive(false);
        boolean boolean89 = cassandraHost84.getUseThriftFramedTransport();
        boolean boolean90 = cassandraHost84.getLifo();
        java.lang.String str91 = cassandraHost84.toString();
        boolean boolean92 = cassandraHost84.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0489");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str41 = cassandraHost40.getName();
        java.lang.String str42 = cassandraHost40.getUrl();
        java.lang.String str43 = cassandraHost40.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "Subject(Subject):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0490");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) (short) 100);
        int int11 = cassandraHost7.getCassandraThriftSocketTimeout();
        cassandraHost7.setLifo(false);
        boolean boolean14 = cassandraHost7.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0491");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) (short) 100);
        long long17 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        boolean boolean18 = cassandraHost13.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean22 = cassandraHost13.equals((java.lang.Object) cassandraHost21);
        cassandraHost21.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str25 = cassandraHost21.getHost();
        int int26 = cassandraHost21.getCassandraThriftSocketTimeout();
        java.lang.String str27 = cassandraHost21.getIp();
        java.lang.String str28 = cassandraHost21.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0492");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str35 = cassandraHost34.getIp();
        cassandraHost34.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str38 = cassandraHost34.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0493");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        boolean boolean44 = cassandraHost42.isPerformNameResolution();
        long long45 = cassandraHost42.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0494");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int93 = cassandraHost92.getMaxActive();
        cassandraHost92.setCassandraThriftSocketTimeout((int) (byte) 0);
        java.lang.String str96 = cassandraHost92.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0495");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean20 = cassandraHost17.equals((java.lang.Object) (short) 100);
        long long21 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        boolean boolean22 = cassandraHost17.getUseThriftFramedTransport();
        cassandraHost17.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost17.setUseSocketKeepalive(false);
        int int27 = cassandraHost17.getCassandraThriftSocketTimeout();
        long long28 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        cassandraHost17.setCassandraThriftSocketTimeout((int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0496");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 101);
        cassandraHost9.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0497");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        cassandraHost17.setUseSocketKeepalive(false);
        int int22 = cassandraHost17.getMaxFrameSize();
        int int23 = cassandraHost17.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0498");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str6 = cassandraHost5.getHost();
        int int7 = cassandraHost5.getMaxActive();
        java.lang.String str8 = cassandraHost5.getHost();
        java.lang.String str9 = cassandraHost5.getUrl();
        java.lang.String str10 = cassandraHost5.getUrl();
        boolean boolean11 = cassandraHost5.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, ":9160(:98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0499");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int7 = cassandraHost6.getMaxActive();
        cassandraHost6.setCassandraThriftSocketTimeout((int) (byte) 0);
        int int10 = cassandraHost6.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest0.test0500");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "36");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }
}

