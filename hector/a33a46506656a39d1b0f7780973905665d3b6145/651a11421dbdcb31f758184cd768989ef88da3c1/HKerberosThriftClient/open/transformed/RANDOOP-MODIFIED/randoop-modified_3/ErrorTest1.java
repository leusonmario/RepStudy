import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0501");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean19 = cassandraHost18.getUseSocketKeepalive();
        java.lang.String str20 = cassandraHost18.getUrl();
        int int21 = cassandraHost18.getCassandraThriftSocketTimeout();
        int int22 = cassandraHost18.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0502");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("101(0.0.0.101):9160", (int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0503");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        long long14 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0504");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", 9160);
        boolean boolean15 = cassandraHost14.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0505");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        boolean boolean44 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long48 = cassandraHost47.getMaxWaitTimeWhenExhausted();
        java.lang.String str49 = cassandraHost47.getHost();
        cassandraHost47.setMaxFrameSize((int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0506");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 100);
        java.lang.String str40 = cassandraHost39.getUrl();
        java.lang.String str41 = cassandraHost39.getIp();
        boolean boolean42 = cassandraHost39.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0507");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean18 = cassandraHost15.equals((java.lang.Object) (short) 100);
        long long19 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        boolean boolean20 = cassandraHost15.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean24 = cassandraHost15.equals((java.lang.Object) cassandraHost23);
        java.lang.String str25 = cassandraHost23.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost23, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0508");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", 10);
        boolean boolean18 = cassandraHost17.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0509");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        java.util.Set<java.lang.Object> objSet74 = subject73.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean78 = cassandraHost77.getUseSocketKeepalive();
        java.lang.String str79 = cassandraHost77.getIp();
        cassandraHost77.setMaxActive(105);
        cassandraHost77.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost77, "9381:52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0510");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221):9160");
        cassandraHost92.setMaxActive(101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0511");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxActive();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive((int) (short) 10);
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        int int24 = cassandraHost14.getMaxActive();
        boolean boolean25 = cassandraHost14.getLifo();
        int int26 = cassandraHost14.getCassandraThriftSocketTimeout();
        int int27 = cassandraHost14.getMaxActive();
        int int28 = cassandraHost14.getPort();
        boolean boolean29 = cassandraHost14.getLifo();
        boolean boolean30 = subject0.equals((java.lang.Object) cassandraHost14);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost32.setCassandraThriftSocketTimeout(50);
        int int35 = cassandraHost32.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0512");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 34);
        int int12 = cassandraHost11.getPort();
        java.lang.String str13 = cassandraHost11.getUrl();
        int int14 = cassandraHost11.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0513");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (short) 101);
        java.lang.String str94 = cassandraHost93.toString();
        cassandraHost93.setMaxActive((int) (short) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost93, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0514");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "hi!(hi!)(hi!(hi!)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0515");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1");
        cassandraHost14.setCassandraThriftSocketTimeout((int) (short) 102);
        java.lang.String str17 = cassandraHost14.getIp();
        cassandraHost14.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0516");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        boolean boolean15 = cassandraHost13.isPerformNameResolution();
        cassandraHost13.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "Subject(Subject)(Subject(Subject)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0517");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        cassandraHost16.setUseSocketKeepalive(false);
        java.lang.String str21 = cassandraHost16.getIp();
        java.lang.String str22 = cassandraHost16.getUrl();
        cassandraHost16.setMaxFrameSize(10);
        int int25 = cassandraHost16.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0518");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", 50);
        cassandraHost7.setLifo(false);
        java.lang.String str10 = cassandraHost7.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0519");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean45 = cassandraHost44.getUseSocketKeepalive();
        int int46 = cassandraHost44.getCassandraThriftSocketTimeout();
        java.lang.String str47 = cassandraHost44.getName();
        int int48 = cassandraHost44.getCassandraThriftSocketTimeout();
        cassandraHost44.setUseSocketKeepalive(true);
        boolean boolean51 = cassandraHost44.getUseThriftFramedTransport();
        boolean boolean52 = cassandraHost44.getUseThriftFramedTransport();
        java.lang.String str53 = cassandraHost44.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "9381");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0520");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0521");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int7 = cassandraHost6.getMaxActive();
        java.lang.String str8 = cassandraHost6.toString();
        cassandraHost6.setMaxActive((int) (short) 101);
        cassandraHost6.setUseThriftFramedTransport(true);
        cassandraHost6.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0522");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject)");
        java.lang.String str14 = cassandraHost13.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0523");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost("9693", (int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost76, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0524");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        int int37 = cassandraHost36.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0525");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        int int42 = cassandraHost38.getCassandraThriftSocketTimeout();
        cassandraHost38.setLifo(false);
        cassandraHost38.setUseSocketKeepalive(false);
        boolean boolean47 = subject31.equals((java.lang.Object) false);
        java.lang.String str48 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost51 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost51, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0526");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        boolean boolean6 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        int int10 = cassandraHost8.getCassandraThriftSocketTimeout();
        java.lang.String str11 = cassandraHost8.getName();
        java.lang.String str12 = cassandraHost8.getHost();
        java.lang.String str13 = cassandraHost8.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0527");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("101");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost12, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0528");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        int int38 = cassandraHost37.getMaxFrameSize();
        java.lang.String str39 = cassandraHost37.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, ":97(:97)(:97(:97)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0529");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):99");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0530");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        cassandraHost16.setUseSocketKeepalive(false);
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        boolean boolean22 = cassandraHost16.getLifo();
        cassandraHost16.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0531");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        boolean boolean2 = subject0.isReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0532");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):9160", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0533");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        cassandraHost40.setUseSocketKeepalive(false);
        java.lang.String str45 = cassandraHost40.getIp();
        java.lang.String str46 = cassandraHost40.getUrl();
        cassandraHost40.setMaxFrameSize(10);
        boolean boolean49 = cassandraHost40.getLifo();
        int int50 = cassandraHost40.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0534");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "(127.0.0.1):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0535");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        cassandraHost9.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "9381");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0536");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) -1);
        int int10 = cassandraHost9.getCassandraThriftSocketTimeout();
        java.lang.String str11 = cassandraHost9.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0537");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean13 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        cassandraHost15.setUseSocketKeepalive(false);
        int int20 = cassandraHost15.getPort();
        cassandraHost15.setLifo(false);
        int int23 = cassandraHost15.getPort();
        boolean boolean24 = cassandraHost15.getUseThriftFramedTransport();
        cassandraHost15.setMaxFrameSize((int) (byte) 100);
        java.lang.String str27 = cassandraHost15.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "36");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0538");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost37.setCassandraThriftSocketTimeout(10);
        cassandraHost37.setMaxActive((int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0539");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        cassandraHost5.setUseSocketKeepalive(false);
        boolean boolean10 = cassandraHost5.getUseThriftFramedTransport();
        boolean boolean11 = cassandraHost5.getLifo();
        cassandraHost5.setMaxFrameSize((int) (byte) 98);
        cassandraHost5.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0540");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str6 = cassandraHost5.getName();
        boolean boolean7 = cassandraHost5.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0541");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (byte) 34);
        boolean boolean93 = cassandraHost92.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0542");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        subject0.setReadOnly();
        boolean boolean32 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost35, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0543");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        boolean boolean14 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean20 = cassandraHost17.equals((java.lang.Object) (short) 100);
        int int21 = cassandraHost17.getCassandraThriftSocketTimeout();
        cassandraHost17.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0544");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("97", (int) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0545");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong92 = new java.util.concurrent.atomic.AtomicLong(65L);
        boolean boolean93 = subject87.equals((java.lang.Object) atomicLong92);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>)", (int) (short) -1);
        int int97 = cassandraHost96.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost96, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0546");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 0);
        cassandraHost6.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0547");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        java.util.Set<java.lang.Object> objSet74 = subject73.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient79 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost77, "(127.0.0.1):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient79.equals(null)", !hKerberosThriftClient79.equals(null));
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0548");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong95 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean96 = cassandraHost93.equals((java.lang.Object) (short) 100);
        int int97 = cassandraHost93.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, ":9160(:98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0549");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0550");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        int int10 = cassandraHost8.getPort();
        boolean boolean11 = cassandraHost8.getUseSocketKeepalive();
        int int12 = cassandraHost8.getPort();
        int int13 = cassandraHost8.getMaxFrameSize();
        boolean boolean14 = cassandraHost8.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "0.0.0.99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0551");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean25 = cassandraHost24.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost24.getUrl();
        cassandraHost24.setMaxFrameSize(100);
        cassandraHost24.setMaxFrameSize((int) (short) 97);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost24, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0552");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost84.setCassandraThriftSocketTimeout(0);
        cassandraHost84.setUseSocketKeepalive(false);
        java.lang.String str89 = cassandraHost84.getIp();
        cassandraHost84.setCassandraThriftSocketTimeout(2);
        boolean boolean92 = cassandraHost84.getLifo();
        boolean boolean93 = cassandraHost84.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost84, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0553");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean11 = cassandraHost8.equals((java.lang.Object) (short) 100);
        long long12 = cassandraHost8.getMaxWaitTimeWhenExhausted();
        boolean boolean13 = cassandraHost8.getUseThriftFramedTransport();
        cassandraHost8.setMaxWaitTimeWhenExhausted((long) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0554");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        long long13 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0555");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        boolean boolean3 = subject0.equals((java.lang.Object) ":97(:97)");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("9179");
        cassandraHost5.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0556");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) (short) 100);
        long long11 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        boolean boolean12 = cassandraHost7.getUseThriftFramedTransport();
        cassandraHost7.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost7.setUseSocketKeepalive(false);
        int int17 = cassandraHost7.getCassandraThriftSocketTimeout();
        int int18 = cassandraHost7.getCassandraThriftSocketTimeout();
        java.lang.String str19 = cassandraHost7.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0557");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "127.0.0.1(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0558");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        java.lang.String str16 = cassandraHost14.getHost();
        cassandraHost14.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost14.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0559");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1");
        cassandraHost13.setCassandraThriftSocketTimeout((int) (short) 102);
        java.lang.String str16 = cassandraHost13.getIp();
        cassandraHost13.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0560");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.lang.String str38 = subject37.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("100", 9160);
        int int42 = cassandraHost41.getMaxFrameSize();
        int int43 = cassandraHost41.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0561");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        subject87.setReadOnly();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):100", (int) (short) 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost96, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0562");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet23 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost26 = new me.prettyprint.cassandra.service.CassandraHost("35", 0);
        cassandraHost26.setCassandraThriftSocketTimeout(105);
        boolean boolean29 = cassandraHost26.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost26, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0563");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("-1", (int) (short) 97);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0564");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):32");
        int int18 = cassandraHost17.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0565");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        boolean boolean42 = cassandraHost40.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0566");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        cassandraHost15.setUseSocketKeepalive(false);
        boolean boolean20 = cassandraHost15.getUseThriftFramedTransport();
        long long21 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        cassandraHost15.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "9381:52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0567");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost41.setUseSocketKeepalive(false);
        int int44 = cassandraHost41.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost41, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0568");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean40 = cassandraHost39.getUseSocketKeepalive();
        int int41 = cassandraHost39.getPort();
        boolean boolean42 = cassandraHost39.getUseSocketKeepalive();
        int int43 = cassandraHost39.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost39, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0569");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) -1);
        int int43 = cassandraHost42.getCassandraThriftSocketTimeout();
        java.lang.String str44 = cassandraHost42.getIp();
        java.lang.String str45 = cassandraHost42.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0570");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        boolean boolean12 = cassandraHost7.getUseThriftFramedTransport();
        boolean boolean13 = cassandraHost7.getLifo();
        cassandraHost7.setLifo(true);
        int int16 = cassandraHost7.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "105");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0571");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int11 = cassandraHost10.getPort();
        java.lang.String str12 = cassandraHost10.toString();
        boolean boolean13 = cassandraHost10.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "9381");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0572");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        cassandraHost7.setMaxFrameSize((int) (byte) 1);
        cassandraHost7.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.Set<java.security.Principal> principalSet29 = subject21.getPrincipals();
        boolean boolean30 = cassandraHost7.equals((java.lang.Object) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        boolean boolean33 = subject32.isReadOnly();
        java.lang.String str34 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(true, principalSet36, (java.util.Set<java.security.Principal>) principalSet41, principalSet60);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject(false, principalSet5, principalSet29, principalSet60);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost64 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean65 = cassandraHost64.getUseSocketKeepalive();
        java.lang.String str66 = cassandraHost64.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient68 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject62, cassandraHost64, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient68.equals(null)", !hKerberosThriftClient68.equals(null));
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0573");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        cassandraHost37.setUseSocketKeepalive(false);
        boolean boolean42 = cassandraHost37.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0574");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str13 = cassandraHost12.getUrl();
        java.lang.String str14 = cassandraHost12.getHost();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setMaxFrameSize((int) 'a');
        java.lang.String str19 = cassandraHost16.getIp();
        boolean boolean20 = cassandraHost12.equals((java.lang.Object) cassandraHost16);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0575");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0576");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        java.lang.String str16 = cassandraHost11.getIp();
        java.lang.String str17 = cassandraHost11.getUrl();
        cassandraHost11.setMaxFrameSize(10);
        cassandraHost11.setLifo(true);
        cassandraHost11.setLifo(true);
        java.lang.String str24 = cassandraHost11.getHost();
        java.lang.String str25 = cassandraHost11.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0577");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str43 = cassandraHost42.getIp();
        cassandraHost42.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost42.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str48 = cassandraHost42.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0578");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost7.setCassandraThriftSocketTimeout(10);
        java.lang.String str10 = cassandraHost7.getName();
        boolean boolean11 = cassandraHost7.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean17 = cassandraHost14.equals((java.lang.Object) (short) 100);
        cassandraHost14.setUseSocketKeepalive(false);
        long long20 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        cassandraHost14.setMaxActive((int) '4');
        int int23 = cassandraHost14.getMaxFrameSize();
        boolean boolean24 = cassandraHost14.getUseThriftFramedTransport();
        boolean boolean25 = cassandraHost7.equals((java.lang.Object) boolean24);
        cassandraHost7.setMaxWaitTimeWhenExhausted(0L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0579");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", 101);
        boolean boolean94 = cassandraHost93.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost93, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0580");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        cassandraHost11.setUseSocketKeepalive(false);
        long long17 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        cassandraHost11.setMaxActive((int) '4');
        cassandraHost11.setCassandraThriftSocketTimeout((int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160(:9160):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0581");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost11.equals((java.lang.Object) boolean17);
        cassandraHost11.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0582");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost39.setCassandraThriftSocketTimeout(0);
        cassandraHost39.setUseSocketKeepalive(false);
        cassandraHost39.setUseSocketKeepalive(false);
        java.lang.String str46 = cassandraHost39.getIp();
        boolean boolean47 = cassandraHost39.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost39, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0583");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        boolean boolean77 = cassandraHost76.getUseSocketKeepalive();
        int int78 = cassandraHost76.getPort();
        int int79 = cassandraHost76.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient81 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost76, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient81.equals(null)", !hKerberosThriftClient81.equals(null));
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0584");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        boolean boolean7 = subject6.isReadOnly();
        java.lang.String str8 = subject6.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject6.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        boolean boolean17 = subject6.equals((java.lang.Object) cassandraHost12);
        java.util.Set<java.security.Principal> principalSet18 = subject6.getPrincipals();
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet35, principalSet43);
        subject51.setReadOnly();
        java.util.Set<java.lang.Object> objSet53 = subject51.getPublicCredentials();
        boolean boolean54 = subject51.isReadOnly();
        java.lang.String str55 = subject51.toString();
        subject51.setReadOnly();
        java.util.Set<java.security.Principal> principalSet57 = subject51.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        boolean boolean59 = subject58.isReadOnly();
        java.lang.String str60 = subject58.toString();
        java.util.Set<java.security.Principal> principalSet61 = subject58.getPrincipals();
        java.util.Set<java.security.Principal> principalSet62 = subject58.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject();
        boolean boolean64 = subject63.isReadOnly();
        java.lang.String str65 = subject63.toString();
        java.util.Set<java.security.Principal> principalSet66 = subject63.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost69 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong71 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean72 = cassandraHost69.equals((java.lang.Object) (short) 100);
        int int73 = cassandraHost69.getCassandraThriftSocketTimeout();
        boolean boolean74 = subject63.equals((java.lang.Object) cassandraHost69);
        java.util.Set<java.security.Principal> principalSet75 = subject63.getPrincipals();
        java.util.Set<java.security.Principal> principalSet76 = subject63.getPrincipals();
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet57, principalSet62, principalSet76);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(true, principalSet5, principalSet18, principalSet76);
        subject78.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost81.setCassandraThriftSocketTimeout(0);
        cassandraHost81.setUseSocketKeepalive(false);
        java.lang.String str86 = cassandraHost81.getIp();
        java.lang.String str87 = cassandraHost81.getUrl();
        cassandraHost81.setMaxFrameSize(10);
        int int90 = cassandraHost81.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0585");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        long long44 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        java.lang.String str45 = cassandraHost43.getName();
        cassandraHost43.setMaxActive((int) (byte) -121);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0586");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject1.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet16 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.lang.Object> objSet30 = subject17.getPrivateCredentials();
        subject17.setReadOnly();
        java.lang.String str32 = subject17.toString();
        subject17.setReadOnly();
        boolean boolean34 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet35 = subject17.getPrincipals();
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        boolean boolean37 = subject36.isReadOnly();
        java.lang.String str38 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong39 = new java.util.concurrent.atomic.AtomicLong();
        double double40 = atomicLong39.doubleValue();
        long long41 = atomicLong39.incrementAndGet();
        boolean boolean42 = subject36.equals((java.lang.Object) long41);
        java.lang.String str43 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong45 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean46 = subject36.equals((java.lang.Object) atomicLong45);
        java.util.Set<java.lang.Object> objSet47 = subject36.getPrivateCredentials();
        boolean boolean48 = subject36.isReadOnly();
        java.util.Set<java.security.Principal> principalSet49 = subject36.getPrincipals();
        java.util.Set<java.security.Principal> principalSet50 = subject36.getPrincipals();
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet16, principalSet35, principalSet50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int54 = cassandraHost53.getPort();
        int int55 = cassandraHost53.getCassandraThriftSocketTimeout();
        long long56 = cassandraHost53.getMaxWaitTimeWhenExhausted();
        boolean boolean57 = cassandraHost53.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost53, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0587");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        java.lang.String str9 = cassandraHost8.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "10154");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0588");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong92 = new java.util.concurrent.atomic.AtomicLong(65L);
        boolean boolean93 = subject87.equals((java.lang.Object) atomicLong92);
        java.util.Set<java.lang.Object> objSet94 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost97, "103(0.0.0.103)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0589");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str85 = cassandraHost84.getName();
        java.lang.String str86 = cassandraHost84.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient88 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient88.equals(null)", !hKerberosThriftClient88.equals(null));
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0590");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        java.lang.String str13 = cassandraHost10.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost10.equals((java.lang.Object) boolean16);
        int int18 = cassandraHost10.getMaxActive();
        boolean boolean19 = cassandraHost10.getUseSocketKeepalive();
        java.lang.String str20 = cassandraHost10.getUrl();
        cassandraHost10.setCassandraThriftSocketTimeout((int) (byte) 1);
        cassandraHost10.setUseSocketKeepalive(true);
        java.lang.String str25 = cassandraHost10.getUrl();
        boolean boolean26 = cassandraHost10.isPerformNameResolution();
        java.lang.String str27 = cassandraHost10.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0591");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0592");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, ":97(:97):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0593");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject)");
        java.lang.String str5 = cassandraHost4.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0594");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost43.setCassandraThriftSocketTimeout((int) (short) 10);
        boolean boolean46 = cassandraHost41.equals((java.lang.Object) cassandraHost43);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost43, "0.0.0.99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0595");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        boolean boolean16 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost18.setCassandraThriftSocketTimeout(0);
        cassandraHost18.setUseSocketKeepalive(false);
        int int23 = cassandraHost18.getMaxActive();
        boolean boolean24 = cassandraHost18.getUseThriftFramedTransport();
        long long25 = cassandraHost18.getMaxWaitTimeWhenExhausted();
        cassandraHost18.setMaxWaitTimeWhenExhausted(136L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0596");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0597");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        cassandraHost7.setMaxFrameSize((int) (byte) 1);
        cassandraHost7.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.Set<java.security.Principal> principalSet29 = subject21.getPrincipals();
        boolean boolean30 = cassandraHost7.equals((java.lang.Object) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        boolean boolean33 = subject32.isReadOnly();
        java.lang.String str34 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(true, principalSet36, (java.util.Set<java.security.Principal>) principalSet41, principalSet60);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject(false, principalSet5, principalSet29, principalSet60);
        subject62.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.service.CassandraHost cassandraHost68 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost68.setCassandraThriftSocketTimeout((int) (short) 10);
        boolean boolean71 = cassandraHost66.equals((java.lang.Object) cassandraHost68);
        int int72 = cassandraHost66.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient74 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject62, cassandraHost66, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient74.equals(null)", !hKerberosThriftClient74.equals(null));
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0598");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost44.setCassandraThriftSocketTimeout(0);
        java.lang.String str47 = cassandraHost44.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean50 = cassandraHost49.getUseSocketKeepalive();
        boolean boolean51 = cassandraHost44.equals((java.lang.Object) boolean50);
        int int52 = cassandraHost44.getMaxFrameSize();
        int int53 = cassandraHost44.getPort();
        int int54 = cassandraHost44.getCassandraThriftSocketTimeout();
        cassandraHost44.setUseSocketKeepalive(true);
        java.lang.String str57 = cassandraHost44.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "Subject(Subject)(Subject(Subject)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0599");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        boolean boolean7 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":9160(:98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0600");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        long long45 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        boolean boolean46 = cassandraHost41.getUseThriftFramedTransport();
        cassandraHost41.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost41.setUseSocketKeepalive(false);
        int int51 = cassandraHost41.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0601");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet91 = subject87.getPublicCredentials();
        java.lang.String str92 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0602");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (short) 33);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0603");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 34);
        int int8 = cassandraHost7.getMaxActive();
        cassandraHost7.setMaxActive(101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0604");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject1.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet44 = subject43.getPrincipals();
        java.security.Principal[] principalArray45 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet46 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet46, principalArray45);
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, principalSet44, (java.util.Set<java.security.Principal>) principalSet46, (java.util.Set<java.security.Principal>) principalSet49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet36, principalSet44);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet18, principalSet20, principalSet44);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        boolean boolean55 = subject54.isReadOnly();
        java.lang.String str56 = subject54.toString();
        subject54.setReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject54.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(true, principalSet15, principalSet44, principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost61 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost61, "127.0.0.1:2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0605");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost19.setUseThriftFramedTransport(true);
        cassandraHost19.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0606");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        java.lang.String str9 = cassandraHost4.getIp();
        java.lang.String str10 = cassandraHost4.getUrl();
        cassandraHost4.setMaxFrameSize(10);
        int int13 = cassandraHost4.getMaxActive();
        cassandraHost4.setMaxActive((int) (byte) 0);
        cassandraHost4.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0607");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        int int42 = cassandraHost38.getCassandraThriftSocketTimeout();
        cassandraHost38.setLifo(false);
        cassandraHost38.setUseSocketKeepalive(false);
        boolean boolean47 = subject31.equals((java.lang.Object) false);
        java.lang.String str48 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost51 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 50);
        cassandraHost51.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost51, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0608");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost39.setCassandraThriftSocketTimeout(0);
        cassandraHost39.setUseSocketKeepalive(false);
        int int44 = cassandraHost39.getMaxActive();
        java.lang.String str45 = cassandraHost39.getUrl();
        cassandraHost39.setMaxActive((int) (short) 10);
        boolean boolean48 = cassandraHost39.isPerformNameResolution();
        java.lang.String str49 = cassandraHost39.toString();
        boolean boolean50 = cassandraHost39.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0609");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str12 = cassandraHost11.getUrl();
        boolean boolean13 = cassandraHost11.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0610");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        boolean boolean42 = cassandraHost41.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0611");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0612");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost18.setCassandraThriftSocketTimeout(0);
        cassandraHost18.setUseSocketKeepalive(false);
        int int23 = cassandraHost18.getMaxActive();
        boolean boolean24 = cassandraHost18.getUseThriftFramedTransport();
        long long25 = cassandraHost18.getMaxWaitTimeWhenExhausted();
        int int26 = cassandraHost18.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0613");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str39 = cassandraHost38.getIp();
        cassandraHost38.setUseThriftFramedTransport(true);
        java.lang.String str42 = cassandraHost38.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0614");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.lang.String str14 = cassandraHost13.getIp();
        java.lang.String str15 = cassandraHost13.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":97(:97):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0615");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", 9160);
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0616");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str4 = cassandraHost3.getIp();
        cassandraHost3.setMaxWaitTimeWhenExhausted((long) 0);
        boolean boolean7 = cassandraHost3.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0617");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("99", 112);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0618");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0619");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):1", (int) (byte) 51);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0620");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int43 = cassandraHost42.getMaxActive();
        java.lang.String str44 = cassandraHost42.toString();
        cassandraHost42.setMaxActive((int) (short) 101);
        cassandraHost42.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0621");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "0.0.0.99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0622");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        cassandraHost41.setUseSocketKeepalive(false);
        java.lang.String str46 = cassandraHost41.getIp();
        java.lang.String str47 = cassandraHost41.getUrl();
        cassandraHost41.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost41.setMaxActive((int) (byte) 100);
        int int52 = cassandraHost41.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, ":97(:97):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0623");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        cassandraHost41.setUseSocketKeepalive(false);
        int int46 = cassandraHost41.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0624");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("9179", (int) (byte) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":97(:97):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0625");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("9740");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0626");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.lang.String str83 = subject81.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("Subject:0");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0627");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        int int18 = cassandraHost16.getCassandraThriftSocketTimeout();
        java.lang.String str19 = cassandraHost16.getName();
        int int20 = cassandraHost16.getCassandraThriftSocketTimeout();
        cassandraHost16.setUseSocketKeepalive(true);
        boolean boolean23 = cassandraHost16.getUseThriftFramedTransport();
        boolean boolean24 = cassandraHost16.getUseThriftFramedTransport();
        int int25 = cassandraHost16.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0628");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        cassandraHost15.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0629");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("203", (int) (byte) 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0630");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean17 = subject0.equals((java.lang.Object) "hi!(hi!):101");
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong23 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean24 = cassandraHost21.equals((java.lang.Object) (short) 100);
        cassandraHost21.setUseSocketKeepalive(false);
        long long27 = cassandraHost21.getMaxWaitTimeWhenExhausted();
        cassandraHost21.setMaxActive((int) '4');
        int int30 = cassandraHost21.getMaxFrameSize();
        java.lang.String str31 = cassandraHost21.getIp();
        int int32 = cassandraHost21.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient34 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient34.equals(null)", !hKerberosThriftClient34.equals(null));
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0631");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost(":9160:50", (int) (short) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0632");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "0.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0633");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):0");
        long long8 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0634");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxActive();
        boolean boolean14 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str15 = cassandraHost5.getUrl();
        cassandraHost5.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "Subject(Subject)(Subject(Subject)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0635");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        java.lang.String str11 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        int int18 = cassandraHost13.getMaxActive();
        boolean boolean19 = cassandraHost13.getUseThriftFramedTransport();
        long long20 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        cassandraHost13.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0636");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost42.setCassandraThriftSocketTimeout(0);
        java.lang.String str45 = cassandraHost42.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean48 = cassandraHost47.getUseSocketKeepalive();
        boolean boolean49 = cassandraHost42.equals((java.lang.Object) boolean48);
        int int50 = cassandraHost42.getMaxActive();
        boolean boolean51 = cassandraHost42.getUseSocketKeepalive();
        java.lang.String str52 = cassandraHost42.getUrl();
        java.lang.String str53 = cassandraHost42.getHost();
        int int54 = cassandraHost42.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0637");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160)", (int) (byte) 98);
        java.lang.String str19 = cassandraHost18.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0638");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0");
        java.lang.String str10 = cassandraHost9.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "0.0.0.208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0639");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        boolean boolean91 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0640");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("203", (int) (byte) 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0641");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost95 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):0", (int) (short) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost95, "268");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0642");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong();
        double double16 = atomicLong15.doubleValue();
        long long17 = atomicLong15.incrementAndGet();
        float float18 = atomicLong15.floatValue();
        long long19 = atomicLong15.incrementAndGet();
        boolean boolean20 = subject0.equals((java.lang.Object) long19);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost23, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0643");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        long long15 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        cassandraHost13.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160(:9160):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0644");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (short) 99);
        cassandraHost10.setMaxActive((int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0645");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("32", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0646");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0647");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost80 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (-1));
        boolean boolean81 = cassandraHost80.getUseSocketKeepalive();
        java.lang.String str82 = cassandraHost80.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost80, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0648");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str94 = cassandraHost93.getIp();
        cassandraHost93.setUseThriftFramedTransport(true);
        java.lang.String str97 = cassandraHost93.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0649");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        boolean boolean15 = cassandraHost13.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0650");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong();
        float float37 = atomicLong36.floatValue();
        boolean boolean40 = atomicLong36.compareAndSet(65L, (long) (short) 0);
        atomicLong36.set(0L);
        atomicLong36.lazySet((long) (short) 101);
        boolean boolean45 = subject31.equals((java.lang.Object) atomicLong36);
        java.util.Set<java.security.Principal> principalSet46 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost48.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost48, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0651");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        subject32.setReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject32.getPublicCredentials();
        boolean boolean35 = subject32.isReadOnly();
        java.lang.String str36 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet38 = subject32.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        subject70.setReadOnly();
        java.util.Set<java.lang.Object> objSet72 = subject70.getPublicCredentials();
        java.lang.String str73 = subject70.toString();
        java.util.Set<java.security.Principal> principalSet74 = subject70.getPrincipals();
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject();
        boolean boolean76 = subject75.isReadOnly();
        java.lang.String str77 = subject75.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong78 = new java.util.concurrent.atomic.AtomicLong();
        double double79 = atomicLong78.doubleValue();
        long long80 = atomicLong78.incrementAndGet();
        boolean boolean81 = subject75.equals((java.lang.Object) long80);
        java.lang.String str82 = subject75.toString();
        java.lang.String str83 = subject75.toString();
        java.util.Set<java.security.Principal> principalSet84 = subject75.getPrincipals();
        javax.security.auth.Subject subject85 = new javax.security.auth.Subject(true, principalSet38, principalSet74, principalSet84);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong90 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean91 = cassandraHost88.equals((java.lang.Object) (short) 100);
        cassandraHost88.setUseSocketKeepalive(false);
        long long94 = cassandraHost88.getMaxWaitTimeWhenExhausted();
        cassandraHost88.setCassandraThriftSocketTimeout((int) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject85, cassandraHost88, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0652");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong22 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean23 = cassandraHost20.equals((java.lang.Object) (short) 100);
        cassandraHost20.setUseSocketKeepalive(false);
        long long26 = cassandraHost20.getMaxWaitTimeWhenExhausted();
        cassandraHost20.setMaxActive((int) '4');
        int int29 = cassandraHost20.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost20, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0653");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        java.lang.String str91 = subject89.toString();
        subject89.setReadOnly();
        boolean boolean93 = subject89.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        java.lang.String str97 = cassandraHost96.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost96, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0654");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        boolean boolean33 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):32");
        int int36 = cassandraHost35.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0655");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0656");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        int int11 = cassandraHost10.getMaxActive();
        cassandraHost10.setMaxFrameSize((int) (short) 52);
        cassandraHost10.setMaxWaitTimeWhenExhausted(9179L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "36");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0657");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost7.isPerformNameResolution();
        cassandraHost7.setUseSocketKeepalive(false);
        boolean boolean12 = cassandraHost7.getUseThriftFramedTransport();
        cassandraHost7.setLifo(true);
        java.lang.String str15 = cassandraHost7.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "Subject(Subject)(Subject(Subject))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0658");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        java.lang.String str43 = cassandraHost40.getUrl();
        long long44 = cassandraHost40.getMaxWaitTimeWhenExhausted();
        cassandraHost40.setMaxFrameSize((int) (short) 100);
        int int47 = cassandraHost40.getMaxActive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str51 = cassandraHost50.getHost();
        cassandraHost50.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean57 = cassandraHost50.equals((java.lang.Object) cassandraHost56);
        long long58 = cassandraHost50.getMaxWaitTimeWhenExhausted();
        boolean boolean59 = cassandraHost40.equals((java.lang.Object) cassandraHost50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost50, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0659");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        boolean boolean38 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "Subject(Subject)(Subject(Subject))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0660");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean45 = cassandraHost44.isPerformNameResolution();
        long long46 = cassandraHost44.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0661");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        cassandraHost5.setMaxFrameSize((int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0662");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean36 = cassandraHost35.getUseSocketKeepalive();
        cassandraHost35.setUseSocketKeepalive(true);
        cassandraHost35.setMaxActive(2147483647);
        cassandraHost35.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0663");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", 9160);
        long long9 = cassandraHost8.getMaxWaitTimeWhenExhausted();
        cassandraHost8.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!)(hi!(hi!)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0664");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):32");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0665");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0666");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        cassandraHost5.setUseSocketKeepalive(false);
        java.lang.String str10 = cassandraHost5.getIp();
        java.lang.String str11 = cassandraHost5.getUrl();
        cassandraHost5.setMaxFrameSize(10);
        java.lang.String str14 = cassandraHost5.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0667");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong5 = new java.util.concurrent.atomic.AtomicLong((long) (short) 0);
        long long6 = atomicLong5.incrementAndGet();
        boolean boolean7 = subject0.equals((java.lang.Object) long6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        cassandraHost9.setUseSocketKeepalive(false);
        java.lang.String str14 = cassandraHost9.getIp();
        cassandraHost9.setCassandraThriftSocketTimeout(2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0668");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost38.setCassandraThriftSocketTimeout(0);
        cassandraHost38.setUseSocketKeepalive(false);
        int int43 = cassandraHost38.getPort();
        cassandraHost38.setLifo(false);
        java.lang.String str46 = cassandraHost38.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0669");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost20.setCassandraThriftSocketTimeout(0);
        cassandraHost20.setUseSocketKeepalive(false);
        java.lang.String str25 = cassandraHost20.getIp();
        java.lang.String str26 = cassandraHost20.getUrl();
        cassandraHost20.setMaxFrameSize(10);
        cassandraHost20.setLifo(true);
        cassandraHost20.setMaxWaitTimeWhenExhausted(108L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient34 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient34.equals(null)", !hKerberosThriftClient34.equals(null));
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0670");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int17 = cassandraHost16.getPort();
        boolean boolean18 = cassandraHost16.getLifo();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0671");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 32);
        boolean boolean6 = cassandraHost5.getLifo();
        java.lang.String str7 = cassandraHost5.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0672");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("103", 0);
        int int45 = cassandraHost44.getCassandraThriftSocketTimeout();
        int int46 = cassandraHost44.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0673");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong12 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean13 = cassandraHost10.equals((java.lang.Object) (short) 100);
        cassandraHost10.setUseSocketKeepalive(false);
        long long16 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        cassandraHost10.setMaxActive((int) '4');
        int int19 = cassandraHost10.getMaxFrameSize();
        java.lang.String str20 = cassandraHost10.getIp();
        boolean boolean21 = cassandraHost10.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0674");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        boolean boolean7 = subject6.isReadOnly();
        java.lang.String str8 = subject6.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject6.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        boolean boolean17 = subject6.equals((java.lang.Object) cassandraHost12);
        java.util.Set<java.security.Principal> principalSet18 = subject6.getPrincipals();
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet35, principalSet43);
        subject51.setReadOnly();
        java.util.Set<java.lang.Object> objSet53 = subject51.getPublicCredentials();
        boolean boolean54 = subject51.isReadOnly();
        java.lang.String str55 = subject51.toString();
        subject51.setReadOnly();
        java.util.Set<java.security.Principal> principalSet57 = subject51.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        boolean boolean59 = subject58.isReadOnly();
        java.lang.String str60 = subject58.toString();
        java.util.Set<java.security.Principal> principalSet61 = subject58.getPrincipals();
        java.util.Set<java.security.Principal> principalSet62 = subject58.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject();
        boolean boolean64 = subject63.isReadOnly();
        java.lang.String str65 = subject63.toString();
        java.util.Set<java.security.Principal> principalSet66 = subject63.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost69 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong71 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean72 = cassandraHost69.equals((java.lang.Object) (short) 100);
        int int73 = cassandraHost69.getCassandraThriftSocketTimeout();
        boolean boolean74 = subject63.equals((java.lang.Object) cassandraHost69);
        java.util.Set<java.security.Principal> principalSet75 = subject63.getPrincipals();
        java.util.Set<java.security.Principal> principalSet76 = subject63.getPrincipals();
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet57, principalSet62, principalSet76);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(true, principalSet5, principalSet18, principalSet76);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("103:97", (int) (byte) 102);
        long long82 = cassandraHost81.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0675");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):34");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "105");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0676");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost14.getUseSocketKeepalive();
        cassandraHost14.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0677");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0678");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        boolean boolean2 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("35", 0);
        int int7 = cassandraHost6.getMaxActive();
        boolean boolean8 = cassandraHost6.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0679");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (-1));
        boolean boolean79 = cassandraHost78.getUseSocketKeepalive();
        java.lang.String str80 = cassandraHost78.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost78, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0680");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) (short) 100);
        long long17 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        boolean boolean18 = cassandraHost13.getUseThriftFramedTransport();
        boolean boolean19 = cassandraHost13.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0681");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("2", (int) (short) 12);
        long long5 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0682");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        java.lang.String str12 = cassandraHost9.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost9.equals((java.lang.Object) boolean15);
        int int17 = cassandraHost9.getMaxActive();
        cassandraHost9.setMaxFrameSize((int) 'a');
        boolean boolean20 = cassandraHost9.getUseSocketKeepalive();
        cassandraHost9.setUseSocketKeepalive(false);
        cassandraHost9.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0683");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost39.setCassandraThriftSocketTimeout(0);
        cassandraHost39.setUseSocketKeepalive(false);
        int int44 = cassandraHost39.getMaxActive();
        java.lang.String str45 = cassandraHost39.getUrl();
        cassandraHost39.setMaxActive((int) (short) 10);
        boolean boolean48 = cassandraHost39.isPerformNameResolution();
        int int49 = cassandraHost39.getMaxActive();
        boolean boolean50 = cassandraHost39.getLifo();
        int int51 = cassandraHost39.getCassandraThriftSocketTimeout();
        int int52 = cassandraHost39.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160(:9160):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0684");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean33 = cassandraHost32.getUseSocketKeepalive();
        java.lang.String str34 = cassandraHost32.getHost();
        boolean boolean35 = cassandraHost32.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0685");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (byte) 100);
        boolean boolean8 = cassandraHost7.isPerformNameResolution();
        long long9 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        boolean boolean10 = cassandraHost7.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "85");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0686");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost18.setCassandraThriftSocketTimeout(10);
        java.lang.String str21 = cassandraHost18.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost18, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0687");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):32");
        int int57 = cassandraHost56.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost56, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0688");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) 52);
        cassandraHost78.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost78, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0689");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.lang.String str72 = subject71.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost74 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int75 = cassandraHost74.getPort();
        java.lang.String str76 = cassandraHost74.toString();
        int int77 = cassandraHost74.getCassandraThriftSocketTimeout();
        int int78 = cassandraHost74.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost74, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0690");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean23 = cassandraHost22.getUseSocketKeepalive();
        boolean boolean24 = cassandraHost17.equals((java.lang.Object) boolean23);
        int int25 = cassandraHost17.getMaxActive();
        cassandraHost17.setMaxFrameSize((int) 'a');
        boolean boolean28 = cassandraHost17.getUseSocketKeepalive();
        cassandraHost17.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0691");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0692");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        boolean boolean39 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost41.setUseSocketKeepalive(false);
        int int44 = cassandraHost41.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost41, "127.0.0.1:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0693");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient79 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost77, "127.0.0.1:2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient79.equals(null)", !hKerberosThriftClient79.equals(null));
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0694");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int7 = cassandraHost6.getPort();
        int int8 = cassandraHost6.getMaxFrameSize();
        int int9 = cassandraHost6.getPort();
        boolean boolean10 = cassandraHost6.isPerformNameResolution();
        int int11 = cassandraHost6.getMaxActive();
        java.lang.String str12 = cassandraHost6.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0695");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0696");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0697");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet41 = subject37.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet42 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost45, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0698");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        java.lang.String str18 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean21 = cassandraHost20.getUseSocketKeepalive();
        boolean boolean22 = cassandraHost15.equals((java.lang.Object) boolean21);
        boolean boolean24 = cassandraHost15.equals((java.lang.Object) (-1L));
        cassandraHost15.setMaxFrameSize((int) (byte) 1);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost28 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str29 = cassandraHost28.getIp();
        cassandraHost28.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost28.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str34 = cassandraHost28.getHost();
        boolean boolean35 = cassandraHost15.equals((java.lang.Object) cassandraHost28);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost28, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0699");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost2.setCassandraThriftSocketTimeout(0);
        java.lang.String str5 = cassandraHost2.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost2.equals((java.lang.Object) boolean8);
        boolean boolean11 = cassandraHost2.equals((java.lang.Object) (-1L));
        cassandraHost2.setMaxFrameSize((int) (byte) 1);
        cassandraHost2.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.Set<java.security.Principal> principalSet24 = subject16.getPrincipals();
        boolean boolean25 = cassandraHost2.equals((java.lang.Object) principalSet24);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        boolean boolean27 = subject26.isReadOnly();
        java.lang.String str28 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong29 = new java.util.concurrent.atomic.AtomicLong();
        double double30 = atomicLong29.doubleValue();
        long long31 = atomicLong29.incrementAndGet();
        boolean boolean32 = subject26.equals((java.lang.Object) long31);
        java.lang.String str33 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong35 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean36 = subject26.equals((java.lang.Object) atomicLong35);
        java.util.Set<java.lang.Object> objSet37 = subject26.getPrivateCredentials();
        boolean boolean38 = subject26.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject26.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet40 = subject26.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet24, principalSet40, principalSet43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean54 = cassandraHost53.getUseSocketKeepalive();
        int int55 = cassandraHost53.getCassandraThriftSocketTimeout();
        java.lang.String str56 = cassandraHost53.getName();
        java.lang.String str57 = cassandraHost53.getHost();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost60 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong62 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean63 = cassandraHost60.equals((java.lang.Object) (short) 100);
        cassandraHost60.setUseSocketKeepalive(false);
        boolean boolean66 = cassandraHost53.equals((java.lang.Object) cassandraHost60);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient68 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost60, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient68.equals(null)", !hKerberosThriftClient68.equals(null));
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0700");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.lang.String str38 = subject37.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        cassandraHost41.setCassandraThriftSocketTimeout(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0701");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0702");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost10.setCassandraThriftSocketTimeout(10);
        java.lang.String str13 = cassandraHost10.getName();
        java.lang.String str14 = cassandraHost10.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0703");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        cassandraHost10.setUseThriftFramedTransport(true);
        int int13 = cassandraHost10.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0704");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        cassandraHost45.setUseSocketKeepalive(true);
        boolean boolean49 = cassandraHost45.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0705");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long93 = cassandraHost92.getMaxWaitTimeWhenExhausted();
        cassandraHost92.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "268");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0706");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0707");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "hi!(hi!)(hi!(hi!)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0708");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        java.lang.String str15 = cassandraHost12.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        boolean boolean19 = cassandraHost12.equals((java.lang.Object) boolean18);
        boolean boolean21 = cassandraHost12.equals((java.lang.Object) (-1L));
        cassandraHost12.setMaxFrameSize((int) (byte) 1);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost25 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str26 = cassandraHost25.getIp();
        cassandraHost25.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost25.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str31 = cassandraHost25.getHost();
        boolean boolean32 = cassandraHost12.equals((java.lang.Object) cassandraHost25);
        long long33 = cassandraHost25.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient35 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost25, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient35.equals(null)", !hKerberosThriftClient35.equals(null));
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0709");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (short) 99);
        cassandraHost13.setMaxActive((int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0710");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxActive();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive((int) (short) 10);
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        int int24 = cassandraHost14.getMaxActive();
        boolean boolean25 = cassandraHost14.getLifo();
        int int26 = cassandraHost14.getCassandraThriftSocketTimeout();
        int int27 = cassandraHost14.getMaxActive();
        int int28 = cassandraHost14.getPort();
        boolean boolean29 = cassandraHost14.getLifo();
        boolean boolean30 = subject0.equals((java.lang.Object) cassandraHost14);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("101");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient34 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient34.equals(null)", !hKerberosThriftClient34.equals(null));
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0711");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):34");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0712");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean21 = cassandraHost20.getUseSocketKeepalive();
        java.lang.String str22 = cassandraHost20.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost20, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0713");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", 10);
        cassandraHost5.setMaxFrameSize((int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0714");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str82 = cassandraHost81.getIp();
        cassandraHost81.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost81.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str87 = cassandraHost81.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0715");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int18 = cassandraHost17.getMaxActive();
        cassandraHost17.setMaxFrameSize(2);
        long long21 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        boolean boolean22 = cassandraHost17.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0716");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong87 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean88 = cassandraHost85.equals((java.lang.Object) (short) 100);
        cassandraHost85.setUseSocketKeepalive(false);
        long long91 = cassandraHost85.getMaxWaitTimeWhenExhausted();
        cassandraHost85.setMaxActive((int) '4');
        int int94 = cassandraHost85.getMaxFrameSize();
        int int95 = cassandraHost85.getMaxActive();
        int int96 = cassandraHost85.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0717");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str17 = cassandraHost11.getHost();
        boolean boolean18 = cassandraHost11.getLifo();
        boolean boolean19 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean20 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet21 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int24 = cassandraHost23.getMaxActive();
        cassandraHost23.setCassandraThriftSocketTimeout((int) (byte) 0);
        java.lang.String str27 = cassandraHost23.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost23, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0718");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean40 = cassandraHost39.getUseSocketKeepalive();
        int int41 = cassandraHost39.getPort();
        boolean boolean42 = cassandraHost39.getUseSocketKeepalive();
        int int43 = cassandraHost39.getPort();
        int int44 = cassandraHost39.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0719");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("9740");
        cassandraHost40.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "127.0.0.1:2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0720");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost8.setCassandraThriftSocketTimeout(0);
        cassandraHost8.setUseSocketKeepalive(false);
        java.lang.String str13 = cassandraHost8.getIp();
        java.lang.String str14 = cassandraHost8.getUrl();
        cassandraHost8.setMaxFrameSize(10);
        cassandraHost8.setLifo(true);
        cassandraHost8.setMaxFrameSize((int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0721");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        boolean boolean15 = subject0.isReadOnly();
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.Set<java.lang.Object> objSet24 = subject16.getPrivateCredentials();
        boolean boolean25 = subject16.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost27.setCassandraThriftSocketTimeout(0);
        cassandraHost27.setUseSocketKeepalive(false);
        int int32 = cassandraHost27.getPort();
        cassandraHost27.setLifo(false);
        int int35 = cassandraHost27.getPort();
        boolean boolean36 = cassandraHost27.getUseThriftFramedTransport();
        java.lang.String str37 = cassandraHost27.getName();
        boolean boolean38 = subject16.equals((java.lang.Object) cassandraHost27);
        int int39 = cassandraHost27.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost27, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0722");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet7 = subject6.getPrincipals();
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        javax.security.auth.Subject subject14 = new javax.security.auth.Subject(false, principalSet7, (java.util.Set<java.security.Principal>) principalSet9, (java.util.Set<java.security.Principal>) principalSet12);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet17 = subject16.getPrincipals();
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject(false, principalSet17, (java.util.Set<java.security.Principal>) principalSet19, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet27 = subject26.getPrincipals();
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, principalSet27, (java.util.Set<java.security.Principal>) principalSet29, (java.util.Set<java.security.Principal>) principalSet32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet9, (java.util.Set<java.security.Principal>) principalSet19, principalSet27);
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet52, principalSet60);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet2, principalSet36, (java.util.Set<java.security.Principal>) principalSet42);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost72 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong74 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean75 = cassandraHost72.equals((java.lang.Object) (short) 100);
        cassandraHost72.setUseSocketKeepalive(false);
        long long78 = cassandraHost72.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject69, cassandraHost72, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0723");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        cassandraHost13.setUseSocketKeepalive(true);
        cassandraHost13.setMaxActive(2147483647);
        cassandraHost13.setLifo(false);
        java.lang.String str21 = cassandraHost13.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0724");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        java.lang.String str40 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):34");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "CassandraClient<%s-%d>:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0725");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        int int18 = cassandraHost13.getMaxActive();
        java.lang.String str19 = cassandraHost13.getUrl();
        cassandraHost13.setMaxActive((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0726");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("103");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0727");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("9381:52");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0728");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        java.lang.String str39 = cassandraHost36.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean42 = cassandraHost41.getUseSocketKeepalive();
        boolean boolean43 = cassandraHost36.equals((java.lang.Object) boolean42);
        int int44 = cassandraHost36.getMaxActive();
        boolean boolean45 = cassandraHost36.getUseSocketKeepalive();
        java.lang.String str46 = cassandraHost36.getUrl();
        cassandraHost36.setCassandraThriftSocketTimeout((int) (byte) 1);
        boolean boolean49 = cassandraHost36.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0729");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):-1");
        boolean boolean15 = cassandraHost14.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0730");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        java.lang.String str6 = subject0.toString();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):9160", (int) (byte) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0731");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost35.setCassandraThriftSocketTimeout(0);
        java.lang.String str38 = cassandraHost35.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        boolean boolean42 = cassandraHost35.equals((java.lang.Object) boolean41);
        int int43 = cassandraHost35.getMaxActive();
        boolean boolean44 = cassandraHost35.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "127.0.0.1(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0732");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):9160", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0733");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject37.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) '4');
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) (short) -1);
        cassandraHost45.setCassandraThriftSocketTimeout(97);
        boolean boolean48 = cassandraHost42.equals((java.lang.Object) cassandraHost45);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost45, ":97(:97):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0734");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        int int15 = cassandraHost7.getMaxActive();
        boolean boolean16 = cassandraHost7.isPerformNameResolution();
        java.lang.String str17 = cassandraHost7.getName();
        java.lang.String str18 = cassandraHost7.getHost();
        java.lang.String str19 = cassandraHost7.getHost();
        java.lang.String str20 = cassandraHost7.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0735");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str17 = cassandraHost11.getHost();
        boolean boolean18 = cassandraHost11.getLifo();
        boolean boolean19 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean20 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet21 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost23.setCassandraThriftSocketTimeout(0);
        java.lang.String str26 = cassandraHost23.getUrl();
        long long27 = cassandraHost23.getMaxWaitTimeWhenExhausted();
        cassandraHost23.setUseThriftFramedTransport(false);
        java.lang.String str30 = cassandraHost23.getName();
        java.lang.String str31 = cassandraHost23.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost23, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0736");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        java.util.Set<java.security.Principal> principalSet76 = subject73.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean80 = cassandraHost79.getUseSocketKeepalive();
        cassandraHost79.setUseSocketKeepalive(true);
        boolean boolean83 = cassandraHost79.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost79, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0737");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        cassandraHost14.setMaxFrameSize(1);
        boolean boolean17 = cassandraHost14.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0738");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        cassandraHost38.setUseSocketKeepalive(false);
        long long44 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        cassandraHost38.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost38.setMaxFrameSize((int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0739");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):32", (int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0740");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxActive();
        boolean boolean14 = cassandraHost5.isPerformNameResolution();
        java.lang.String str15 = cassandraHost5.getName();
        java.lang.String str16 = cassandraHost5.toString();
        long long17 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        cassandraHost5.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str22 = cassandraHost21.getIp();
        cassandraHost21.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost21.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str27 = cassandraHost21.getHost();
        boolean boolean28 = cassandraHost5.equals((java.lang.Object) cassandraHost21);
        cassandraHost5.setMaxActive((int) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0741");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        boolean boolean39 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 100);
        java.lang.String str43 = cassandraHost42.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, ":9160(:9160):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0742");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean13 = cassandraHost12.isPerformNameResolution();
        java.lang.String str14 = cassandraHost12.toString();
        boolean boolean15 = subject9.equals((java.lang.Object) cassandraHost12);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        long long19 = cassandraHost18.getMaxWaitTimeWhenExhausted();
        cassandraHost18.setCassandraThriftSocketTimeout((int) (short) 32);
        cassandraHost18.setLifo(true);
        cassandraHost18.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost18, "268");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0743");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int8 = cassandraHost7.getMaxActive();
        java.lang.String str9 = cassandraHost7.toString();
        cassandraHost7.setMaxActive((int) (short) 101);
        int int12 = cassandraHost7.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "10154");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0744");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str92 = cassandraHost91.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0745");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "103(0.0.0.103):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0746");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", 10);
        cassandraHost42.setMaxFrameSize((int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0747");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.lang.String str42 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 0);
        java.lang.String str46 = cassandraHost45.getIp();
        cassandraHost45.setMaxActive((int) (short) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0748");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str13 = cassandraHost12.getIp();
        cassandraHost12.setUseThriftFramedTransport(true);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        int int17 = cassandraHost12.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "127.0.0.1:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0749");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        java.util.Set<java.lang.Object> objSet80 = subject78.getPrivateCredentials();
        java.lang.String str81 = subject78.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost83.setCassandraThriftSocketTimeout(0);
        cassandraHost83.setUseSocketKeepalive(false);
        java.lang.String str88 = cassandraHost83.getIp();
        cassandraHost83.setCassandraThriftSocketTimeout(2);
        boolean boolean91 = cassandraHost83.getLifo();
        int int92 = cassandraHost83.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost83, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0750");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long22 = cassandraHost21.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0751");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0752");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        boolean boolean6 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("103", 88);
        boolean boolean10 = cassandraHost9.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0753");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        java.util.Set<java.lang.Object> objSet80 = subject78.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet81 = subject78.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost84, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0754");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("99", 100);
        java.lang.String str41 = cassandraHost40.getIp();
        java.lang.String str42 = cassandraHost40.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0755");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("50", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost43, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0756");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        boolean boolean7 = cassandraHost6.getUseThriftFramedTransport();
        boolean boolean8 = cassandraHost6.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost6.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0757");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0758");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0759");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        cassandraHost40.setCassandraThriftSocketTimeout(2147483647);
        boolean boolean43 = cassandraHost40.isPerformNameResolution();
        cassandraHost40.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, ":9160(:9160):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0760");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str6 = cassandraHost5.getHost();
        int int7 = cassandraHost5.getMaxActive();
        java.lang.String str8 = cassandraHost5.getHost();
        cassandraHost5.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0761");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0762");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int80 = cassandraHost79.getMaxActive();
        cassandraHost79.setLifo(true);
        cassandraHost79.setLifo(true);
        int int85 = cassandraHost79.getPort();
        boolean boolean86 = subject75.equals((java.lang.Object) int85);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost89, "9693(0.0.37.221)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0763");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int14 = cassandraHost13.getPort();
        int int15 = cassandraHost13.getMaxFrameSize();
        int int16 = cassandraHost13.getPort();
        boolean boolean17 = cassandraHost13.isPerformNameResolution();
        int int18 = cassandraHost13.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0764");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99(0.0.0.99):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0765");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        java.lang.String str11 = subject9.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 52);
        atomicLong13.lazySet((long) (-1));
        atomicLong13.set((long) 9160);
        long long18 = atomicLong13.longValue();
        long long19 = atomicLong13.longValue();
        int int20 = atomicLong13.intValue();
        boolean boolean23 = atomicLong13.weakCompareAndSet(10154L, 225L);
        boolean boolean24 = subject9.equals((java.lang.Object) boolean23);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("9492", (int) (byte) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost27, "100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0766");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        java.lang.String str13 = cassandraHost10.getUrl();
        long long14 = cassandraHost10.getMaxWaitTimeWhenExhausted();
        cassandraHost10.setMaxFrameSize((int) (short) 100);
        java.lang.String str17 = cassandraHost10.getUrl();
        cassandraHost10.setUseThriftFramedTransport(true);
        boolean boolean20 = cassandraHost10.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "316");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0767");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject)");
        java.lang.String str92 = cassandraHost91.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, ":9160(:9160)(:9160(:9160)):88");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0768");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost45.setCassandraThriftSocketTimeout(0);
        cassandraHost45.setUseSocketKeepalive(false);
        java.lang.String str50 = cassandraHost45.getIp();
        java.lang.String str51 = cassandraHost45.getUrl();
        int int52 = cassandraHost45.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0769");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean11 = subject0.isReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160)", (int) (byte) 98);
        java.lang.String str16 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160(:9160):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0770");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost36.setCassandraThriftSocketTimeout(10);
        java.lang.String str39 = cassandraHost36.getName();
        boolean boolean40 = cassandraHost36.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong45 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean46 = cassandraHost43.equals((java.lang.Object) (short) 100);
        cassandraHost43.setUseSocketKeepalive(false);
        long long49 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        cassandraHost43.setMaxActive((int) '4');
        int int52 = cassandraHost43.getMaxFrameSize();
        boolean boolean53 = cassandraHost43.getUseThriftFramedTransport();
        boolean boolean54 = cassandraHost36.equals((java.lang.Object) boolean53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0771");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str18 = cassandraHost17.getIp();
        cassandraHost17.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str21 = cassandraHost17.getName();
        boolean boolean22 = cassandraHost17.getLifo();
        boolean boolean23 = cassandraHost17.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "104");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0772");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        java.util.Set<java.lang.Object> objSet91 = subject90.getPublicCredentials();
        boolean boolean93 = subject90.equals((java.lang.Object) 113L);
        java.util.Set<java.lang.Object> objSet94 = subject90.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99(0.0.0.99):100", (int) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost97, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0773");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str15 = cassandraHost14.getIp();
        cassandraHost14.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost14.setMaxWaitTimeWhenExhausted(0L);
        boolean boolean20 = cassandraHost14.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0774");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("1", 100);
        int int13 = cassandraHost12.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0775");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("50", (int) (byte) 101);
        cassandraHost42.setMaxActive((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0776");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.lang.String str39 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", (int) (short) 10);
        cassandraHost42.setMaxActive((-1));
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet54 = subject53.getPrincipals();
        java.security.Principal[] principalArray55 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet56 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet56, principalArray55);
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(false, principalSet54, (java.util.Set<java.security.Principal>) principalSet56, (java.util.Set<java.security.Principal>) principalSet59);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet64 = subject63.getPrincipals();
        java.security.Principal[] principalArray65 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet66 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet66, principalArray65);
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet64, (java.util.Set<java.security.Principal>) principalSet66, (java.util.Set<java.security.Principal>) principalSet69);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet74 = subject73.getPrincipals();
        java.security.Principal[] principalArray75 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet76 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet76, principalArray75);
        java.security.Principal[] principalArray78 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet79 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet79, principalArray78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, principalSet74, (java.util.Set<java.security.Principal>) principalSet76, (java.util.Set<java.security.Principal>) principalSet79);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet56, (java.util.Set<java.security.Principal>) principalSet66, principalSet74);
        javax.security.auth.Subject subject83 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet47, principalSet50, (java.util.Set<java.security.Principal>) principalSet66);
        boolean boolean84 = subject83.isReadOnly();
        java.lang.String str85 = subject83.toString();
        boolean boolean86 = subject83.isReadOnly();
        boolean boolean87 = cassandraHost42.equals((java.lang.Object) subject83);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0777");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        subject87.setReadOnly();
        java.lang.String str90 = subject87.toString();
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet92 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0778");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        boolean boolean91 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        java.lang.String str95 = cassandraHost94.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "CassandraClient<%s-%d>:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0779");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        boolean boolean19 = cassandraHost18.getUseSocketKeepalive();
        cassandraHost18.setMaxActive(2147483647);
        java.lang.String str22 = cassandraHost18.getName();
        boolean boolean23 = cassandraHost18.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0780");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        cassandraHost15.setUseSocketKeepalive(true);
        cassandraHost15.setMaxActive(2147483647);
        cassandraHost15.setLifo(false);
        java.lang.String str23 = cassandraHost15.toString();
        cassandraHost15.setUseThriftFramedTransport(false);
        boolean boolean26 = cassandraHost15.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0781");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0782");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        cassandraHost7.setMaxFrameSize((int) (byte) 1);
        cassandraHost7.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.Set<java.security.Principal> principalSet29 = subject21.getPrincipals();
        boolean boolean30 = cassandraHost7.equals((java.lang.Object) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        boolean boolean33 = subject32.isReadOnly();
        java.lang.String str34 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(true, principalSet36, (java.util.Set<java.security.Principal>) principalSet41, principalSet60);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject(false, principalSet5, principalSet29, principalSet60);
        subject62.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long67 = cassandraHost66.getMaxWaitTimeWhenExhausted();
        cassandraHost66.setUseSocketKeepalive(true);
        java.lang.String str70 = cassandraHost66.getHost();
        java.lang.String str71 = cassandraHost66.toString();
        cassandraHost66.setCassandraThriftSocketTimeout(0);
        int int74 = cassandraHost66.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient76 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject62, cassandraHost66, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient76.equals(null)", !hKerberosThriftClient76.equals(null));
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0783");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str8 = cassandraHost7.getName();
        cassandraHost7.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0784");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 34);
        int int46 = cassandraHost45.getPort();
        boolean boolean47 = cassandraHost45.getUseThriftFramedTransport();
        long long48 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0785");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        java.lang.String str40 = cassandraHost37.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        boolean boolean44 = cassandraHost37.equals((java.lang.Object) boolean43);
        boolean boolean46 = cassandraHost37.equals((java.lang.Object) (-1L));
        boolean boolean47 = cassandraHost37.getUseThriftFramedTransport();
        int int48 = cassandraHost37.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "hi!(hi!)(hi!(hi!)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0786");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        java.lang.String str11 = cassandraHost9.getIp();
        cassandraHost9.setMaxActive(105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0787");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        boolean boolean91 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str95 = cassandraHost94.getHost();
        cassandraHost94.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0788");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        java.lang.String str17 = cassandraHost14.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        boolean boolean21 = cassandraHost14.equals((java.lang.Object) boolean20);
        cassandraHost14.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0789");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        cassandraHost43.setMaxFrameSize((int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost43, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0790");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean19 = cassandraHost16.equals((java.lang.Object) (short) 100);
        long long20 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost16.setUseSocketKeepalive(false);
        int int26 = cassandraHost16.getCassandraThriftSocketTimeout();
        int int27 = cassandraHost16.getCassandraThriftSocketTimeout();
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        long long30 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0791");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str15 = cassandraHost14.getName();
        java.lang.String str16 = cassandraHost14.getUrl();
        cassandraHost14.setMaxFrameSize((int) '#');
        boolean boolean19 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0792");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        boolean boolean38 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        java.lang.String str43 = cassandraHost40.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        boolean boolean47 = cassandraHost40.equals((java.lang.Object) boolean46);
        int int48 = cassandraHost40.getMaxActive();
        cassandraHost40.setMaxFrameSize((int) 'a');
        boolean boolean51 = cassandraHost40.getUseSocketKeepalive();
        cassandraHost40.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "110");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0793");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str17 = cassandraHost11.getHost();
        boolean boolean18 = cassandraHost11.getLifo();
        boolean boolean19 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean20 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean26 = cassandraHost23.equals((java.lang.Object) (short) 100);
        long long27 = cassandraHost23.getMaxWaitTimeWhenExhausted();
        boolean boolean28 = cassandraHost23.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost31 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean32 = cassandraHost23.equals((java.lang.Object) cassandraHost31);
        cassandraHost31.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        cassandraHost31.setMaxWaitTimeWhenExhausted((long) (short) 35);
        int int37 = cassandraHost31.getMaxFrameSize();
        cassandraHost31.setMaxWaitTimeWhenExhausted((long) (byte) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost31, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0794");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("9179");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0795");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221):9160", 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0796");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str38 = cassandraHost37.getIp();
        int int39 = cassandraHost37.getMaxFrameSize();
        boolean boolean40 = cassandraHost37.getLifo();
        cassandraHost37.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "99(0.0.0.99)(99(0.0.0.99)):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0797");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.util.Set<java.lang.Object> objSet72 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost74 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean75 = cassandraHost74.isPerformNameResolution();
        java.lang.String str76 = cassandraHost74.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost74, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0798");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        subject0.setReadOnly();
        java.lang.String str41 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost43.setCassandraThriftSocketTimeout(0);
        java.lang.String str46 = cassandraHost43.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean49 = cassandraHost48.getUseSocketKeepalive();
        boolean boolean50 = cassandraHost43.equals((java.lang.Object) boolean49);
        boolean boolean52 = cassandraHost43.equals((java.lang.Object) (-1L));
        cassandraHost43.setMaxFrameSize((int) (byte) 1);
        long long55 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        cassandraHost43.setMaxWaitTimeWhenExhausted((long) (short) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost43, "99:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0799");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0800");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.util.Set<java.lang.Object> objSet72 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost74 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost74.setCassandraThriftSocketTimeout(0);
        cassandraHost74.setUseSocketKeepalive(false);
        int int79 = cassandraHost74.getMaxFrameSize();
        int int80 = cassandraHost74.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost74, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0801");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103)");
        boolean boolean45 = cassandraHost44.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "99(0.0.0.99)(99(0.0.0.99)):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0802");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int11 = cassandraHost10.getMaxActive();
        java.lang.String str12 = cassandraHost10.toString();
        cassandraHost10.setMaxActive((int) (short) 101);
        cassandraHost10.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0803");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0804");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPublicCredentials();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        long long8 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        cassandraHost4.setMaxFrameSize((int) (short) 100);
        java.lang.String str11 = cassandraHost4.getUrl();
        cassandraHost4.setUseThriftFramedTransport(true);
        boolean boolean14 = cassandraHost4.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":9160((:9160():109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0805");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int43 = cassandraHost42.getPort();
        java.lang.String str44 = cassandraHost42.toString();
        boolean boolean45 = cassandraHost42.getUseThriftFramedTransport();
        cassandraHost42.setMaxActive((int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0806");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("31", (int) (short) 35);
        java.lang.String str19 = cassandraHost18.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0807");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean36 = cassandraHost35.getUseSocketKeepalive();
        boolean boolean37 = cassandraHost35.getUseSocketKeepalive();
        cassandraHost35.setUseThriftFramedTransport(false);
        cassandraHost35.setCassandraThriftSocketTimeout(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0808");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxActive();
        boolean boolean14 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str15 = cassandraHost5.getUrl();
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.lang.String str24 = subject16.toString();
        boolean boolean25 = subject16.isReadOnly();
        boolean boolean26 = cassandraHost5.equals((java.lang.Object) boolean25);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost28 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost28.setCassandraThriftSocketTimeout(0);
        cassandraHost28.setUseSocketKeepalive(false);
        boolean boolean33 = cassandraHost28.getUseThriftFramedTransport();
        boolean boolean34 = cassandraHost5.equals((java.lang.Object) cassandraHost28);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient36 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost28, "99:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient36.equals(null)", !hKerberosThriftClient36.equals(null));
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0809");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.lang.String str13 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0810");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost2.setCassandraThriftSocketTimeout(0);
        java.lang.String str5 = cassandraHost2.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost2.equals((java.lang.Object) boolean8);
        boolean boolean11 = cassandraHost2.equals((java.lang.Object) (-1L));
        cassandraHost2.setMaxFrameSize((int) (byte) 1);
        cassandraHost2.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.Set<java.security.Principal> principalSet24 = subject16.getPrincipals();
        boolean boolean25 = cassandraHost2.equals((java.lang.Object) principalSet24);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        boolean boolean27 = subject26.isReadOnly();
        java.lang.String str28 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong29 = new java.util.concurrent.atomic.AtomicLong();
        double double30 = atomicLong29.doubleValue();
        long long31 = atomicLong29.incrementAndGet();
        boolean boolean32 = subject26.equals((java.lang.Object) long31);
        java.lang.String str33 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong35 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean36 = subject26.equals((java.lang.Object) atomicLong35);
        java.util.Set<java.lang.Object> objSet37 = subject26.getPrivateCredentials();
        boolean boolean38 = subject26.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject26.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet40 = subject26.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet24, principalSet40, principalSet43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost53.setCassandraThriftSocketTimeout(0);
        java.lang.String str56 = cassandraHost53.getUrl();
        long long57 = cassandraHost53.getMaxWaitTimeWhenExhausted();
        cassandraHost53.setMaxFrameSize((int) (short) 100);
        cassandraHost53.setUseSocketKeepalive(true);
        cassandraHost53.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost53, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0811");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long16 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":97(:97):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0812");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("2", (int) (short) 12);
        long long42 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0813");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (short) 0);
        int int39 = cassandraHost38.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0814");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0815");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        cassandraHost10.setUseSocketKeepalive(false);
        int int15 = cassandraHost10.getMaxActive();
        java.lang.String str16 = cassandraHost10.getUrl();
        cassandraHost10.setMaxActive((int) (short) 10);
        boolean boolean19 = cassandraHost10.isPerformNameResolution();
        java.lang.String str20 = cassandraHost10.getIp();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost22.setUseThriftFramedTransport(true);
        java.lang.String str25 = cassandraHost22.getHost();
        boolean boolean26 = cassandraHost10.equals((java.lang.Object) str25);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0816");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        long long44 = cassandraHost40.getMaxWaitTimeWhenExhausted();
        boolean boolean45 = cassandraHost40.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean49 = cassandraHost40.equals((java.lang.Object) cassandraHost48);
        cassandraHost48.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str52 = cassandraHost48.getHost();
        int int53 = cassandraHost48.getCassandraThriftSocketTimeout();
        int int54 = cassandraHost48.getMaxActive();
        cassandraHost48.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost48, "110");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0817");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str18 = cassandraHost17.getIp();
        cassandraHost17.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost17.setMaxWaitTimeWhenExhausted(0L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0818");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet41 = subject37.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet42 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("", 112);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost45, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0819");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int7 = cassandraHost6.getMaxActive();
        int int8 = cassandraHost6.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0820");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        boolean boolean6 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        cassandraHost8.setMaxActive(9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0821");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        subject87.setReadOnly();
        subject87.setReadOnly();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99)(99(0.0.0.99)):100", (int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost97, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0822");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet61, principalSet69);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet43, principalSet45, principalSet69);
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(true, principalSet40, principalSet79, (java.util.Set<java.security.Principal>) principalSet87);
        java.util.Set<java.lang.Object> objSet91 = subject90.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):9160", 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject90, cassandraHost94, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0823");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str17 = cassandraHost11.getHost();
        boolean boolean18 = cassandraHost11.getLifo();
        boolean boolean19 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean20 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet21 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", (int) (short) 1);
        boolean boolean25 = cassandraHost24.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost24, "52:32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0824");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong37 = new java.util.concurrent.atomic.AtomicLong();
        float float38 = atomicLong37.floatValue();
        long long40 = atomicLong37.getAndSet((long) (short) -1);
        int int41 = atomicLong37.intValue();
        long long43 = atomicLong37.getAndSet(102L);
        boolean boolean44 = subject31.equals((java.lang.Object) long43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int47 = cassandraHost46.getMaxActive();
        java.lang.String str48 = cassandraHost46.toString();
        cassandraHost46.setMaxActive((int) (short) 101);
        int int51 = cassandraHost46.getCassandraThriftSocketTimeout();
        int int52 = cassandraHost46.getMaxFrameSize();
        cassandraHost46.setMaxActive((int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost46, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0825");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        java.lang.String str18 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean21 = cassandraHost20.getUseSocketKeepalive();
        boolean boolean22 = cassandraHost15.equals((java.lang.Object) boolean21);
        int int23 = cassandraHost15.getMaxFrameSize();
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) (byte) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0826");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0827");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1))");
        cassandraHost12.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "127.0.0.1:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0828");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("", (-1));
        cassandraHost15.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0829");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean7 = cassandraHost6.getUseSocketKeepalive();
        java.lang.String str8 = cassandraHost6.getHost();
        long long9 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0830");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0831");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))", 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0832");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("36");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0833");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject83 = new javax.security.auth.Subject();
        boolean boolean84 = subject83.isReadOnly();
        java.lang.String str85 = subject83.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong86 = new java.util.concurrent.atomic.AtomicLong();
        double double87 = atomicLong86.doubleValue();
        long long88 = atomicLong86.incrementAndGet();
        boolean boolean89 = subject83.equals((java.lang.Object) long88);
        java.lang.String str90 = subject83.toString();
        java.lang.String str91 = subject83.toString();
        java.util.Set<java.lang.Object> objSet92 = subject83.getPublicCredentials();
        java.lang.String str93 = subject83.toString();
        boolean boolean94 = subject82.equals((java.lang.Object) str93);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("10", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost97, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0834");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        cassandraHost9.setUseSocketKeepalive(true);
        cassandraHost9.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0835");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        boolean boolean38 = subject34.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("316", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost41, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0836");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int8 = cassandraHost7.getMaxActive();
        java.lang.String str9 = cassandraHost7.toString();
        cassandraHost7.setMaxActive((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0837");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        java.lang.String str46 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int49 = cassandraHost48.getPort();
        int int50 = cassandraHost48.getMaxFrameSize();
        int int51 = cassandraHost48.getPort();
        boolean boolean52 = cassandraHost48.isPerformNameResolution();
        int int53 = cassandraHost48.getMaxActive();
        java.lang.String str54 = cassandraHost48.getName();
        java.lang.String str55 = cassandraHost48.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient57 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient57.equals(null)", !hKerberosThriftClient57.equals(null));
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0838");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong35 = new java.util.concurrent.atomic.AtomicLong(1L);
        long long36 = atomicLong35.longValue();
        java.lang.String str37 = atomicLong35.toString();
        long long38 = atomicLong35.incrementAndGet();
        boolean boolean39 = subject31.equals((java.lang.Object) atomicLong35);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 102);
        cassandraHost42.setMaxActive(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0839");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) 50);
        boolean boolean11 = cassandraHost8.equals((java.lang.Object) 50);
        cassandraHost8.setMaxActive((int) (byte) 100);
        int int14 = cassandraHost8.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, ":9160:99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0840");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost3.setCassandraThriftSocketTimeout(0);
        cassandraHost3.setUseSocketKeepalive(false);
        java.lang.String str8 = cassandraHost3.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0841");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean4 = cassandraHost3.getUseSocketKeepalive();
        int int5 = cassandraHost3.getCassandraThriftSocketTimeout();
        cassandraHost3.setMaxActive(110);
        cassandraHost3.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0842");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str42 = cassandraHost41.getName();
        cassandraHost41.setMaxActive((int) (short) 35);
        long long45 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0843");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)(:97(:97)):32", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient83 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "9");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient83.equals(null)", !hKerberosThriftClient83.equals(null));
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0844");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("9179", (int) (short) 11);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, "Subject(Subject):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0845");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 35);
        java.lang.String str42 = cassandraHost41.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0846");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean13 = cassandraHost12.isPerformNameResolution();
        java.lang.String str14 = cassandraHost12.toString();
        boolean boolean15 = subject9.equals((java.lang.Object) cassandraHost12);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str19 = cassandraHost18.getHost();
        cassandraHost18.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean25 = cassandraHost18.equals((java.lang.Object) cassandraHost24);
        cassandraHost24.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost24, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0847");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("9693", 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0848");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject1.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet16 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.lang.Object> objSet30 = subject17.getPrivateCredentials();
        subject17.setReadOnly();
        java.lang.String str32 = subject17.toString();
        subject17.setReadOnly();
        boolean boolean34 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet35 = subject17.getPrincipals();
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        boolean boolean37 = subject36.isReadOnly();
        java.lang.String str38 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong39 = new java.util.concurrent.atomic.AtomicLong();
        double double40 = atomicLong39.doubleValue();
        long long41 = atomicLong39.incrementAndGet();
        boolean boolean42 = subject36.equals((java.lang.Object) long41);
        java.lang.String str43 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong45 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean46 = subject36.equals((java.lang.Object) atomicLong45);
        java.util.Set<java.lang.Object> objSet47 = subject36.getPrivateCredentials();
        boolean boolean48 = subject36.isReadOnly();
        java.util.Set<java.security.Principal> principalSet49 = subject36.getPrincipals();
        java.util.Set<java.security.Principal> principalSet50 = subject36.getPrincipals();
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet16, principalSet35, principalSet50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost53.setCassandraThriftSocketTimeout(0);
        cassandraHost53.setUseSocketKeepalive(false);
        cassandraHost53.setUseSocketKeepalive(false);
        java.lang.String str60 = cassandraHost53.getIp();
        boolean boolean61 = cassandraHost53.isPerformNameResolution();
        cassandraHost53.setMaxWaitTimeWhenExhausted((long) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost53, "hi!(hi!)(hi!(hi!)):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0849");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.lang.String str9 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet10 = subject1.getPrincipals();
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet12 = subject11.getPrincipals();
        boolean boolean13 = subject11.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject11.getPublicCredentials();
        subject11.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject11.getPrincipals();
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        boolean boolean19 = subject18.isReadOnly();
        java.lang.String str20 = subject18.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong21 = new java.util.concurrent.atomic.AtomicLong();
        double double22 = atomicLong21.doubleValue();
        long long23 = atomicLong21.incrementAndGet();
        boolean boolean24 = subject18.equals((java.lang.Object) long23);
        java.lang.String str25 = subject18.toString();
        java.util.Set<java.security.Principal> principalSet26 = subject18.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet83 = subject82.getPrincipals();
        java.security.Principal[] principalArray84 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet85 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet85, principalArray84);
        java.security.Principal[] principalArray87 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet88 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet88, principalArray87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(false, principalSet83, (java.util.Set<java.security.Principal>) principalSet85, (java.util.Set<java.security.Principal>) principalSet88);
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet75, principalSet83);
        javax.security.auth.Subject subject92 = new javax.security.auth.Subject(true, principalSet26, principalSet59, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject93 = new javax.security.auth.Subject(true, principalSet10, principalSet16, principalSet59);
        java.util.Set<java.security.Principal> principalSet94 = subject93.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject93, cassandraHost96, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0850");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        boolean boolean42 = cassandraHost41.getUseSocketKeepalive();
        cassandraHost41.setMaxActive(2147483647);
        java.lang.String str45 = cassandraHost41.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost41, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0851");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        java.lang.String str16 = cassandraHost13.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean19 = cassandraHost18.getUseSocketKeepalive();
        boolean boolean20 = cassandraHost13.equals((java.lang.Object) boolean19);
        int int21 = cassandraHost13.getMaxActive();
        boolean boolean22 = cassandraHost13.getUseSocketKeepalive();
        java.lang.String str23 = cassandraHost13.getUrl();
        java.lang.String str24 = cassandraHost13.getHost();
        boolean boolean25 = cassandraHost13.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0852");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("103", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0853");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.security.Principal> principalSet44 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost(":9160(", (int) (short) 109);
        int int48 = cassandraHost47.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0854");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean90 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", (int) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0855");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", (int) (short) 12);
        cassandraHost6.setMaxFrameSize((int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0856");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean11 = subject0.isReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxActive();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive((int) (short) 10);
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        cassandraHost14.setMaxWaitTimeWhenExhausted(152L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0857");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int18 = cassandraHost17.getMaxActive();
        java.lang.String str19 = cassandraHost17.toString();
        cassandraHost17.setMaxActive((int) (short) 101);
        int int22 = cassandraHost17.getCassandraThriftSocketTimeout();
        cassandraHost17.setCassandraThriftSocketTimeout((int) (short) 10);
        java.lang.String str25 = cassandraHost17.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0858");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        int int11 = cassandraHost9.getCassandraThriftSocketTimeout();
        java.lang.String str12 = cassandraHost9.getName();
        int int13 = cassandraHost9.getCassandraThriftSocketTimeout();
        cassandraHost9.setMaxActive((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0859");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", 0);
        cassandraHost86.setMaxActive(3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost86, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0860");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.lang.Object> objSet90 = subject89.getPrivateCredentials();
        boolean boolean91 = subject89.isReadOnly();
        subject89.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost95 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):34", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost95, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0861");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 1);
        java.lang.String str5 = cassandraHost4.getName();
        cassandraHost4.setUseSocketKeepalive(true);
        boolean boolean8 = cassandraHost4.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0862");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost75 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str76 = cassandraHost75.getIp();
        cassandraHost75.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost75.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str81 = cassandraHost75.getIp();
        cassandraHost75.setMaxFrameSize((int) (short) 99);
        cassandraHost75.setCassandraThriftSocketTimeout(50);
        boolean boolean86 = cassandraHost75.isPerformNameResolution();
        cassandraHost75.setMaxActive((int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost75, "(127.0.0.1)((127.0.0.1))((127.0.0.1)((127.0.0.1))):2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0863");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)", (int) (byte) 51);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0864");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        cassandraHost14.setCassandraThriftSocketTimeout((int) (byte) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0865");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        boolean boolean14 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 2);
        int int19 = cassandraHost18.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "0.0.0.99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0866");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean14 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject1.getPrincipals();
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        java.util.Set<java.lang.Object> objSet30 = subject16.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet31 = subject16.getPrincipals();
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        subject64.setReadOnly();
        java.util.Set<java.lang.Object> objSet66 = subject64.getPublicCredentials();
        boolean boolean67 = subject64.isReadOnly();
        java.lang.String str68 = subject64.toString();
        subject64.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject64.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject();
        boolean boolean72 = subject71.isReadOnly();
        java.lang.String str73 = subject71.toString();
        java.util.Set<java.security.Principal> principalSet74 = subject71.getPrincipals();
        java.util.Set<java.security.Principal> principalSet75 = subject71.getPrincipals();
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject();
        boolean boolean77 = subject76.isReadOnly();
        java.lang.String str78 = subject76.toString();
        java.util.Set<java.security.Principal> principalSet79 = subject76.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong84 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean85 = cassandraHost82.equals((java.lang.Object) (short) 100);
        int int86 = cassandraHost82.getCassandraThriftSocketTimeout();
        boolean boolean87 = subject76.equals((java.lang.Object) cassandraHost82);
        java.util.Set<java.security.Principal> principalSet88 = subject76.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject76.getPrincipals();
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(false, principalSet70, principalSet75, principalSet89);
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(true, principalSet15, principalSet31, principalSet89);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("35", 0);
        cassandraHost94.setCassandraThriftSocketTimeout(105);
        boolean boolean97 = cassandraHost94.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject91, cassandraHost94, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0867");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("9179", (int) (byte) -1);
        cassandraHost38.setMaxActive((int) (byte) 32);
        int int41 = cassandraHost38.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, ":9160((:9160():109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0868");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.lang.String str8 = subject7.toString();
        java.lang.String str9 = subject7.toString();
        java.util.Set<java.lang.Object> objSet10 = subject7.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet11 = subject7.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        java.lang.String str16 = cassandraHost13.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean19 = cassandraHost18.getUseSocketKeepalive();
        boolean boolean20 = cassandraHost13.equals((java.lang.Object) boolean19);
        boolean boolean22 = cassandraHost13.equals((java.lang.Object) (-1L));
        cassandraHost13.setMaxFrameSize((int) (byte) 1);
        cassandraHost13.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject27.getPrincipals();
        boolean boolean36 = cassandraHost13.equals((java.lang.Object) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet42 = subject38.getPrincipals();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, principalSet45, (java.util.Set<java.security.Principal>) principalSet47, (java.util.Set<java.security.Principal>) principalSet50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject();
        boolean boolean54 = subject53.isReadOnly();
        java.lang.String str55 = subject53.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong();
        double double57 = atomicLong56.doubleValue();
        long long58 = atomicLong56.incrementAndGet();
        boolean boolean59 = subject53.equals((java.lang.Object) long58);
        java.lang.String str60 = subject53.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong62 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean63 = subject53.equals((java.lang.Object) atomicLong62);
        java.util.Set<java.lang.Object> objSet64 = subject53.getPrivateCredentials();
        boolean boolean65 = subject53.isReadOnly();
        java.util.Set<java.security.Principal> principalSet66 = subject53.getPrincipals();
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(true, principalSet42, (java.util.Set<java.security.Principal>) principalSet47, principalSet66);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject(false, principalSet11, principalSet35, principalSet66);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet71 = subject70.getPrincipals();
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        java.security.Principal[] principalArray75 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet76 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet76, principalArray75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet71, (java.util.Set<java.security.Principal>) principalSet73, (java.util.Set<java.security.Principal>) principalSet76);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, principalSet5, principalSet35, principalSet71);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost("102", 9160);
        cassandraHost82.setCassandraThriftSocketTimeout((int) (byte) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost82, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0869");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):101", (int) (short) 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0870");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        java.lang.String str18 = cassandraHost17.getHost();
        int int19 = cassandraHost17.getCassandraThriftSocketTimeout();
        boolean boolean20 = cassandraHost17.getUseThriftFramedTransport();
        cassandraHost17.setCassandraThriftSocketTimeout((int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0871");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long39 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0872");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (short) 35);
        int int94 = cassandraHost93.getMaxActive();
        long long95 = cassandraHost93.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0873");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str17 = cassandraHost11.getHost();
        boolean boolean18 = cassandraHost11.getLifo();
        boolean boolean19 = cassandraHost11.getUseThriftFramedTransport();
        boolean boolean20 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet21 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))", 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost24, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0874");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        java.lang.String str12 = cassandraHost11.getName();
        int int13 = cassandraHost11.getPort();
        int int14 = cassandraHost11.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0875");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        java.lang.String str38 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) 'a');
        cassandraHost41.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0876");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int20 = cassandraHost19.getPort();
        java.lang.String str21 = cassandraHost19.toString();
        int int22 = cassandraHost19.getMaxFrameSize();
        cassandraHost19.setMaxWaitTimeWhenExhausted(0L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0877");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str93 = cassandraHost92.getName();
        java.lang.String str94 = cassandraHost92.getUrl();
        java.lang.String str95 = cassandraHost92.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0878");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):52", 97);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0879");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":97", 0);
        cassandraHost92.setCassandraThriftSocketTimeout(2147483647);
        boolean boolean95 = cassandraHost92.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "Subject(Subject)(Subject(Subject)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0880");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        int int42 = cassandraHost40.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "(127.0.0.1):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0881");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean38 = cassandraHost37.getUseSocketKeepalive();
        cassandraHost37.setUseSocketKeepalive(true);
        cassandraHost37.setMaxActive(2147483647);
        cassandraHost37.setLifo(false);
        java.lang.String str45 = cassandraHost37.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0882");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):99", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "0(0.0.0.0):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0883");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        subject10.setReadOnly();
        java.lang.String str12 = subject10.toString();
        java.util.Set<java.lang.Object> objSet13 = subject10.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject10.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet38, (java.util.Set<java.security.Principal>) principalSet40, (java.util.Set<java.security.Principal>) principalSet43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet30, principalSet38);
        subject46.setReadOnly();
        java.lang.String str48 = subject46.toString();
        java.util.Set<java.lang.Object> objSet49 = subject46.getPrivateCredentials();
        java.lang.String str50 = subject46.toString();
        java.util.Set<java.security.Principal> principalSet51 = subject46.getPrincipals();
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        boolean boolean53 = subject52.isReadOnly();
        java.lang.String str54 = subject52.toString();
        subject52.setReadOnly();
        subject52.setReadOnly();
        boolean boolean57 = subject52.isReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject52.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet14, principalSet51, principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost62 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong64 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean65 = cassandraHost62.equals((java.lang.Object) (short) 100);
        cassandraHost62.setUseSocketKeepalive(false);
        long long68 = cassandraHost62.getMaxWaitTimeWhenExhausted();
        cassandraHost62.setMaxActive((int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient72 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost62, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient72.equals(null)", !hKerberosThriftClient72.equals(null));
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0884");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet7 = subject6.getPrincipals();
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        javax.security.auth.Subject subject14 = new javax.security.auth.Subject(false, principalSet7, (java.util.Set<java.security.Principal>) principalSet9, (java.util.Set<java.security.Principal>) principalSet12);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet17 = subject16.getPrincipals();
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject(false, principalSet17, (java.util.Set<java.security.Principal>) principalSet19, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet27 = subject26.getPrincipals();
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, principalSet27, (java.util.Set<java.security.Principal>) principalSet29, (java.util.Set<java.security.Principal>) principalSet32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet9, (java.util.Set<java.security.Principal>) principalSet19, principalSet27);
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet52, principalSet60);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet2, principalSet36, (java.util.Set<java.security.Principal>) principalSet42);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet71 = subject70.getPrincipals();
        boolean boolean72 = subject70.isReadOnly();
        java.lang.String str73 = subject70.toString();
        java.lang.String str74 = subject70.toString();
        java.util.Set<java.lang.Object> objSet75 = subject70.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("", 0);
        boolean boolean79 = subject70.equals((java.lang.Object) cassandraHost78);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient81 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject69, cassandraHost78, "(127.0.0.1)((127.0.0.1))((127.0.0.1)((127.0.0.1))):2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient81.equals(null)", !hKerberosThriftClient81.equals(null));
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0885");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str15 = cassandraHost14.getIp();
        int int16 = cassandraHost14.getMaxFrameSize();
        java.lang.String str17 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive(158);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0886");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet10, principalSet29);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean33 = cassandraHost32.getUseSocketKeepalive();
        java.lang.String str34 = cassandraHost32.getUrl();
        int int35 = cassandraHost32.getCassandraThriftSocketTimeout();
        int int36 = cassandraHost32.getPort();
        java.lang.String str37 = cassandraHost32.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject30, cassandraHost32, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0887");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        java.lang.String str40 = cassandraHost37.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        boolean boolean44 = cassandraHost37.equals((java.lang.Object) boolean43);
        int int45 = cassandraHost37.getMaxActive();
        boolean boolean46 = cassandraHost37.isPerformNameResolution();
        java.lang.String str47 = cassandraHost37.getName();
        java.lang.String str48 = cassandraHost37.getHost();
        int int49 = cassandraHost37.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0888");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("10154");
        boolean boolean11 = cassandraHost10.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0889");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1))((127.0.0.1)((127.0.0.1))):2147483647", (int) (short) 49);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0890");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        cassandraHost38.setUseSocketKeepalive(false);
        long long44 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        cassandraHost38.setCassandraThriftSocketTimeout((int) (short) 35);
        java.lang.String str47 = cassandraHost38.getIp();
        cassandraHost38.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0891");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("9693:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost41, "hi!(hi!)(hi!(hi!)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0892");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str86 = cassandraHost85.getIp();
        cassandraHost85.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str89 = cassandraHost85.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "9381(0.0.36.165):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0893");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160:99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0894");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("9895", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0895");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("31:35");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160((:9160()");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0896");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        subject87.setReadOnly();
        java.lang.String str92 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost94.setMaxWaitTimeWhenExhausted((long) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0897");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong47 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean48 = cassandraHost45.equals((java.lang.Object) (short) 100);
        long long49 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        boolean boolean50 = cassandraHost45.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean54 = cassandraHost45.equals((java.lang.Object) cassandraHost53);
        java.lang.String str55 = cassandraHost53.toString();
        boolean boolean56 = cassandraHost53.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost53, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0898");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", (int) (short) 102);
        cassandraHost38.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "Subject(Subject)(Subject(Subject)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0899");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int9 = cassandraHost8.getPort();
        java.lang.String str10 = cassandraHost8.toString();
        cassandraHost8.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0900");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("3", 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost84, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0901");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean23 = cassandraHost22.getUseSocketKeepalive();
        boolean boolean24 = cassandraHost17.equals((java.lang.Object) boolean23);
        int int25 = cassandraHost17.getMaxActive();
        boolean boolean26 = cassandraHost17.isPerformNameResolution();
        java.lang.String str27 = cassandraHost17.getName();
        java.lang.String str28 = cassandraHost17.toString();
        int int29 = cassandraHost17.getMaxFrameSize();
        boolean boolean30 = cassandraHost17.getLifo();
        int int31 = cassandraHost17.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0902");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):101", (int) (byte) 104);
        boolean boolean86 = subject81.equals((java.lang.Object) "hi!(hi!):101");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost89, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0903");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("3");
        long long7 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        cassandraHost6.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0904");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("316", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0905");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost35.setCassandraThriftSocketTimeout(0);
        java.lang.String str38 = cassandraHost35.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        boolean boolean42 = cassandraHost35.equals((java.lang.Object) boolean41);
        int int43 = cassandraHost35.getMaxActive();
        boolean boolean44 = cassandraHost35.getUseSocketKeepalive();
        java.lang.String str45 = cassandraHost35.getUrl();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        boolean boolean47 = subject46.isReadOnly();
        java.lang.String str48 = subject46.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong49 = new java.util.concurrent.atomic.AtomicLong();
        double double50 = atomicLong49.doubleValue();
        long long51 = atomicLong49.incrementAndGet();
        boolean boolean52 = subject46.equals((java.lang.Object) long51);
        java.lang.String str53 = subject46.toString();
        java.lang.String str54 = subject46.toString();
        boolean boolean55 = subject46.isReadOnly();
        boolean boolean56 = cassandraHost35.equals((java.lang.Object) boolean55);
        boolean boolean57 = cassandraHost35.getUseThriftFramedTransport();
        boolean boolean58 = cassandraHost35.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient60 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient60.equals(null)", !hKerberosThriftClient60.equals(null));
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0906");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        boolean boolean83 = subject82.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean86 = cassandraHost85.getUseSocketKeepalive();
        cassandraHost85.setMaxFrameSize(2);
        cassandraHost85.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0907");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        java.lang.String str5 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost7.getUseSocketKeepalive();
        cassandraHost7.setUseThriftFramedTransport(false);
        cassandraHost7.setMaxFrameSize((int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0908");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int47 = cassandraHost46.getPort();
        java.lang.String str48 = cassandraHost46.toString();
        java.lang.String str49 = cassandraHost46.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0909");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str5 = cassandraHost4.getIp();
        cassandraHost4.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost4.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str10 = cassandraHost4.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0910");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("223");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0911");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        int int17 = cassandraHost16.getPort();
        cassandraHost16.setMaxActive((int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "hi!(hi!)(hi!(hi!)):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0912");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0913");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost5.setLifo(false);
        java.lang.String str8 = cassandraHost5.getHost();
        boolean boolean9 = cassandraHost5.isPerformNameResolution();
        boolean boolean10 = subject0.equals((java.lang.Object) boolean9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0914");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        int int12 = cassandraHost7.getMaxActive();
        java.lang.String str13 = cassandraHost7.getUrl();
        cassandraHost7.setMaxActive((int) (short) 10);
        boolean boolean16 = cassandraHost7.isPerformNameResolution();
        java.lang.String str17 = cassandraHost7.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0915");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        boolean boolean17 = cassandraHost7.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0916");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("9179");
        int int43 = cassandraHost42.getMaxActive();
        boolean boolean44 = cassandraHost42.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "82");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0917");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong41 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean42 = cassandraHost39.equals((java.lang.Object) (short) 100);
        long long43 = cassandraHost39.getMaxWaitTimeWhenExhausted();
        boolean boolean44 = cassandraHost39.getUseThriftFramedTransport();
        java.lang.String str45 = cassandraHost39.getHost();
        boolean boolean46 = cassandraHost39.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "198");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0918");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        cassandraHost17.setUseSocketKeepalive(true);
        cassandraHost17.setMaxActive(2147483647);
        cassandraHost17.setLifo(false);
        java.lang.String str25 = cassandraHost17.toString();
        cassandraHost17.setUseThriftFramedTransport(false);
        boolean boolean28 = cassandraHost17.isPerformNameResolution();
        boolean boolean29 = cassandraHost17.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "9");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0919");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (short) 101);
        java.lang.String str19 = cassandraHost18.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0920");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        subject32.setReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject32.getPublicCredentials();
        boolean boolean35 = subject32.isReadOnly();
        java.lang.String str36 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet38 = subject32.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        subject70.setReadOnly();
        java.util.Set<java.lang.Object> objSet72 = subject70.getPublicCredentials();
        java.lang.String str73 = subject70.toString();
        java.util.Set<java.security.Principal> principalSet74 = subject70.getPrincipals();
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject();
        boolean boolean76 = subject75.isReadOnly();
        java.lang.String str77 = subject75.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong78 = new java.util.concurrent.atomic.AtomicLong();
        double double79 = atomicLong78.doubleValue();
        long long80 = atomicLong78.incrementAndGet();
        boolean boolean81 = subject75.equals((java.lang.Object) long80);
        java.lang.String str82 = subject75.toString();
        java.lang.String str83 = subject75.toString();
        java.util.Set<java.security.Principal> principalSet84 = subject75.getPrincipals();
        javax.security.auth.Subject subject85 = new javax.security.auth.Subject(true, principalSet38, principalSet74, principalSet84);
        java.util.Set<java.lang.Object> objSet86 = subject85.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 50);
        cassandraHost89.setUseThriftFramedTransport(false);
        boolean boolean92 = cassandraHost89.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject85, cassandraHost89, "91(0.0.0.91):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0921");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        long long10 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        boolean boolean11 = cassandraHost6.getUseThriftFramedTransport();
        cassandraHost6.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost6.setMaxWaitTimeWhenExhausted((long) 3);
        boolean boolean16 = cassandraHost6.isPerformNameResolution();
        cassandraHost6.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0922");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost25 = new me.prettyprint.cassandra.service.CassandraHost(":9160:10", (int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost25, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0923");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (byte) 98);
        cassandraHost39.setMaxFrameSize(110);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160(:9160):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0924");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str17 = cassandraHost16.getIp();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost16.setUseThriftFramedTransport(true);
        int int22 = cassandraHost16.getMaxActive();
        boolean boolean23 = subject0.equals((java.lang.Object) cassandraHost16);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost26 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (short) 52);
        java.lang.String str27 = cassandraHost26.toString();
        int int28 = cassandraHost26.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost26, "88");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0925");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject1.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet16 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.lang.Object> objSet30 = subject17.getPrivateCredentials();
        subject17.setReadOnly();
        java.lang.String str32 = subject17.toString();
        subject17.setReadOnly();
        boolean boolean34 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet35 = subject17.getPrincipals();
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        boolean boolean37 = subject36.isReadOnly();
        java.lang.String str38 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong39 = new java.util.concurrent.atomic.AtomicLong();
        double double40 = atomicLong39.doubleValue();
        long long41 = atomicLong39.incrementAndGet();
        boolean boolean42 = subject36.equals((java.lang.Object) long41);
        java.lang.String str43 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong45 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean46 = subject36.equals((java.lang.Object) atomicLong45);
        java.util.Set<java.lang.Object> objSet47 = subject36.getPrivateCredentials();
        boolean boolean48 = subject36.isReadOnly();
        java.util.Set<java.security.Principal> principalSet49 = subject36.getPrincipals();
        java.util.Set<java.security.Principal> principalSet50 = subject36.getPrincipals();
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet16, principalSet35, principalSet50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost53, "109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0926");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        cassandraHost56.setMaxFrameSize((int) (short) 101);
        boolean boolean59 = cassandraHost56.isPerformNameResolution();
        java.lang.String str60 = cassandraHost56.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost56, "10154");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0927");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        boolean boolean7 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        java.lang.String str11 = cassandraHost10.getHost();
        int int12 = cassandraHost10.getCassandraThriftSocketTimeout();
        int int13 = cassandraHost10.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "88");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0928");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet13 = subject9.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:100", 112);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost16, "0(0.0.0.0):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0929");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.lang.String str39 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        cassandraHost42.setLifo(true);
        java.lang.String str45 = cassandraHost42.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0930");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):101", (int) (byte) 123);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0931");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int46 = cassandraHost45.getMaxActive();
        cassandraHost45.setCassandraThriftSocketTimeout((int) (byte) 0);
        java.lang.String str49 = cassandraHost45.getUrl();
        java.lang.String str50 = cassandraHost45.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0932");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        boolean boolean35 = subject34.isReadOnly();
        java.lang.String str36 = subject34.toString();
        java.util.Set<java.security.Principal> principalSet37 = subject34.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        int int44 = cassandraHost40.getCassandraThriftSocketTimeout();
        boolean boolean45 = subject34.equals((java.lang.Object) cassandraHost40);
        boolean boolean46 = subject34.isReadOnly();
        java.util.Set<java.security.Principal> principalSet47 = subject34.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        boolean boolean49 = subject48.isReadOnly();
        java.lang.String str50 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong51 = new java.util.concurrent.atomic.AtomicLong();
        double double52 = atomicLong51.doubleValue();
        long long53 = atomicLong51.incrementAndGet();
        boolean boolean54 = subject48.equals((java.lang.Object) long53);
        java.lang.String str55 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong57 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean58 = subject48.equals((java.lang.Object) atomicLong57);
        java.util.Set<java.lang.Object> objSet59 = subject48.getPrivateCredentials();
        boolean boolean60 = subject48.isReadOnly();
        java.util.Set<java.security.Principal> principalSet61 = subject48.getPrincipals();
        java.util.Set<java.lang.Object> objSet62 = subject48.getPublicCredentials();
        subject48.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject48.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet33, principalSet47, principalSet64);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost67 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        long long68 = cassandraHost67.getMaxWaitTimeWhenExhausted();
        cassandraHost67.setMaxFrameSize(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient72 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject65, cassandraHost67, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient72.equals(null)", !hKerberosThriftClient72.equals(null));
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0933");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject9.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("Subject:105", 202);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost18, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0934");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0935");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160:1", 31);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0936");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        cassandraHost12.setUseSocketKeepalive(false);
        java.lang.String str19 = cassandraHost12.getIp();
        boolean boolean20 = cassandraHost12.isPerformNameResolution();
        java.util.concurrent.atomic.AtomicLong atomicLong21 = new java.util.concurrent.atomic.AtomicLong();
        double double22 = atomicLong21.doubleValue();
        long long23 = atomicLong21.incrementAndGet();
        float float24 = atomicLong21.floatValue();
        long long26 = atomicLong21.getAndSet((long) 'a');
        long long27 = atomicLong21.incrementAndGet();
        int int28 = atomicLong21.intValue();
        boolean boolean31 = atomicLong21.compareAndSet(52L, (long) '4');
        boolean boolean32 = cassandraHost12.equals((java.lang.Object) boolean31);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient34 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient34.equals(null)", !hKerberosThriftClient34.equals(null));
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0937");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        boolean boolean33 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        cassandraHost36.setUseSocketKeepalive(false);
        int int41 = cassandraHost36.getPort();
        cassandraHost36.setLifo(false);
        int int44 = cassandraHost36.getPort();
        boolean boolean45 = cassandraHost36.getUseThriftFramedTransport();
        java.lang.String str46 = cassandraHost36.getName();
        int int47 = cassandraHost36.getCassandraThriftSocketTimeout();
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet51 = subject50.getPrincipals();
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        java.security.Principal[] principalArray55 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet56 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet56, principalArray55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, principalSet51, (java.util.Set<java.security.Principal>) principalSet53, (java.util.Set<java.security.Principal>) principalSet56);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet61 = subject60.getPrincipals();
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        java.security.Principal[] principalArray65 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet66 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet66, principalArray65);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject(false, principalSet61, (java.util.Set<java.security.Principal>) principalSet63, (java.util.Set<java.security.Principal>) principalSet66);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet71 = subject70.getPrincipals();
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        java.security.Principal[] principalArray75 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet76 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet76, principalArray75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet71, (java.util.Set<java.security.Principal>) principalSet73, (java.util.Set<java.security.Principal>) principalSet76);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet53, (java.util.Set<java.security.Principal>) principalSet63, principalSet71);
        subject79.setReadOnly();
        java.util.Set<java.lang.Object> objSet81 = subject79.getPublicCredentials();
        boolean boolean82 = subject79.isReadOnly();
        java.lang.String str83 = subject79.toString();
        subject79.setReadOnly();
        java.util.Set<java.security.Principal> principalSet85 = subject79.getPrincipals();
        boolean boolean86 = subject79.isReadOnly();
        boolean boolean87 = cassandraHost36.equals((java.lang.Object) boolean86);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0938");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):0");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0939");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):34", 101);
        int int36 = cassandraHost35.getMaxFrameSize();
        boolean boolean37 = subject31.equals((java.lang.Object) cassandraHost35);
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        int int42 = cassandraHost41.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0940");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet40 = subject37.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):-1", (int) (byte) 88);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost43, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0941");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103)", (int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0942");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0943");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):32");
        int int78 = cassandraHost77.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost77, ":9160:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0944");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str58 = cassandraHost57.getHost();
        cassandraHost57.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost63 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean64 = cassandraHost57.equals((java.lang.Object) cassandraHost63);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient66 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost63, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient66.equals(null)", !hKerberosThriftClient66.equals(null));
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0945");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0946");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        boolean boolean12 = subject0.isReadOnly();
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        boolean boolean14 = subject13.isReadOnly();
        java.lang.String str15 = subject13.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong();
        double double17 = atomicLong16.doubleValue();
        long long18 = atomicLong16.incrementAndGet();
        boolean boolean19 = subject13.equals((java.lang.Object) long18);
        java.lang.String str20 = subject13.toString();
        java.util.Set<java.lang.Object> objSet21 = subject13.getPrivateCredentials();
        boolean boolean22 = subject13.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost24.setCassandraThriftSocketTimeout(0);
        cassandraHost24.setUseSocketKeepalive(false);
        int int29 = cassandraHost24.getPort();
        cassandraHost24.setLifo(false);
        int int32 = cassandraHost24.getPort();
        boolean boolean33 = cassandraHost24.getUseThriftFramedTransport();
        java.lang.String str34 = cassandraHost24.getName();
        boolean boolean35 = subject13.equals((java.lang.Object) cassandraHost24);
        int int36 = cassandraHost24.getMaxActive();
        cassandraHost24.setCassandraThriftSocketTimeout(34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost24, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0947");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet10, principalSet29);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost32.setCassandraThriftSocketTimeout(0);
        cassandraHost32.setUseSocketKeepalive(false);
        java.lang.String str37 = cassandraHost32.getIp();
        long long38 = cassandraHost32.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject30, cassandraHost32, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0948");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        java.lang.String str11 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str15 = cassandraHost14.getHost();
        int int16 = cassandraHost14.getMaxActive();
        java.lang.String str17 = cassandraHost14.getHost();
        cassandraHost14.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0949");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong35 = new java.util.concurrent.atomic.AtomicLong(1L);
        long long36 = atomicLong35.longValue();
        java.lang.String str37 = atomicLong35.toString();
        long long38 = atomicLong35.incrementAndGet();
        boolean boolean39 = subject31.equals((java.lang.Object) atomicLong35);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        boolean boolean42 = cassandraHost41.getUseSocketKeepalive();
        long long43 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0950");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet23 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost26 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):34", 63);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost26, "99(0.0.0.99)(99(0.0.0.99)):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0951");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("", (int) 'a');
        java.lang.String str40 = cassandraHost39.getIp();
        java.lang.String str41 = cassandraHost39.getIp();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean47 = cassandraHost44.equals((java.lang.Object) (short) 100);
        long long48 = cassandraHost44.getMaxWaitTimeWhenExhausted();
        boolean boolean49 = cassandraHost44.getUseThriftFramedTransport();
        cassandraHost44.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost44.setUseSocketKeepalive(false);
        boolean boolean54 = cassandraHost39.equals((java.lang.Object) cassandraHost44);
        int int55 = cassandraHost44.getPort();
        boolean boolean56 = cassandraHost44.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost44, "109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0952");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0953");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160:50");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0954");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        java.lang.String str91 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str94 = cassandraHost93.getIp();
        cassandraHost93.setMaxWaitTimeWhenExhausted((long) 0);
        boolean boolean97 = cassandraHost93.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "91(0.0.0.91):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0955");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str7 = cassandraHost6.getIp();
        cassandraHost6.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str10 = cassandraHost6.getHost();
        cassandraHost6.setMaxWaitTimeWhenExhausted((long) 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0956");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        boolean boolean34 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("9693", (int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0957");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        cassandraHost9.setUseSocketKeepalive(false);
        boolean boolean14 = cassandraHost9.getUseThriftFramedTransport();
        long long15 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0958");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("103");
        java.lang.String str17 = cassandraHost16.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost16, "hi!(hi!)(hi!(hi!)):98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0959");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.lang.String str9 = subject8.toString();
        java.lang.String str10 = subject8.toString();
        java.util.Set<java.lang.Object> objSet11 = subject8.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet12 = subject8.getPrincipals();
        boolean boolean13 = subject8.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject8.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet15 = subject8.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject8.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet17 = subject8.getPrincipals();
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        boolean boolean21 = subject20.isReadOnly();
        java.lang.String str22 = subject20.toString();
        subject20.setReadOnly();
        java.util.Set<java.security.Principal> principalSet24 = subject20.getPrincipals();
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet27 = subject26.getPrincipals();
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, principalSet27, (java.util.Set<java.security.Principal>) principalSet29, (java.util.Set<java.security.Principal>) principalSet32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        boolean boolean36 = subject35.isReadOnly();
        java.lang.String str37 = subject35.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong38 = new java.util.concurrent.atomic.AtomicLong();
        double double39 = atomicLong38.doubleValue();
        long long40 = atomicLong38.incrementAndGet();
        boolean boolean41 = subject35.equals((java.lang.Object) long40);
        java.lang.String str42 = subject35.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong44 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean45 = subject35.equals((java.lang.Object) atomicLong44);
        java.util.Set<java.lang.Object> objSet46 = subject35.getPrivateCredentials();
        boolean boolean47 = subject35.isReadOnly();
        java.util.Set<java.security.Principal> principalSet48 = subject35.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(true, principalSet24, (java.util.Set<java.security.Principal>) principalSet29, principalSet48);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject();
        java.lang.String str51 = subject50.toString();
        java.lang.String str52 = subject50.toString();
        java.util.Set<java.security.Principal> principalSet53 = subject50.getPrincipals();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        java.security.Principal[] principalArray78 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet79 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet79, principalArray78);
        java.security.Principal[] principalArray81 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet82 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet82, principalArray81);
        javax.security.auth.Subject subject84 = new javax.security.auth.Subject(false, principalSet77, (java.util.Set<java.security.Principal>) principalSet79, (java.util.Set<java.security.Principal>) principalSet82);
        javax.security.auth.Subject subject85 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet69, principalSet77);
        subject85.setReadOnly();
        java.util.Set<java.lang.Object> objSet87 = subject85.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet88 = subject85.getPrivateCredentials();
        boolean boolean89 = subject85.isReadOnly();
        java.util.Set<java.security.Principal> principalSet90 = subject85.getPrincipals();
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet29, principalSet53, principalSet90);
        javax.security.auth.Subject subject92 = new javax.security.auth.Subject(false, principalSet7, principalSet17, principalSet90);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str95 = cassandraHost94.getIp();
        int int96 = cassandraHost94.getMaxFrameSize();
        int int97 = cassandraHost94.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject92, cassandraHost94, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0960");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1)", (int) (short) 32);
        long long5 = cassandraHost4.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "(127.0.0.1):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0961");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "Subject:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0962");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1");
        int int38 = cassandraHost37.getMaxActive();
        boolean boolean39 = cassandraHost37.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, ":9160:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0963");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99)(99(0.0.0.99)):100", (int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0964");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        cassandraHost16.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0965");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong47 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean48 = cassandraHost45.equals((java.lang.Object) (short) 100);
        long long49 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        boolean boolean50 = cassandraHost45.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean54 = cassandraHost45.equals((java.lang.Object) cassandraHost53);
        cassandraHost53.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str57 = cassandraHost53.getHost();
        int int58 = cassandraHost53.getCassandraThriftSocketTimeout();
        java.lang.String str59 = cassandraHost53.getIp();
        java.lang.String str60 = cassandraHost53.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost53, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0966");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        subject87.setReadOnly();
        java.lang.String str90 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet91 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 103);
        cassandraHost94.setMaxFrameSize((int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0967");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int80 = cassandraHost79.getMaxActive();
        cassandraHost79.setLifo(true);
        cassandraHost79.setLifo(true);
        int int85 = cassandraHost79.getPort();
        boolean boolean86 = subject75.equals((java.lang.Object) int85);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost("9492");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost88, "127.0.0.1:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0968");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("", (int) 'a');
        boolean boolean94 = cassandraHost93.getLifo();
        boolean boolean95 = cassandraHost93.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0969");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        cassandraHost92.setMaxFrameSize(1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "106");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0970");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        subject87.setReadOnly();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost95 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):3");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost95, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0971");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        boolean boolean21 = cassandraHost20.isPerformNameResolution();
        cassandraHost20.setMaxActive(98);
        cassandraHost20.setUseSocketKeepalive(false);
        boolean boolean26 = cassandraHost20.getUseThriftFramedTransport();
        java.lang.String str27 = cassandraHost20.getName();
        boolean boolean28 = cassandraHost20.isPerformNameResolution();
        long long29 = cassandraHost20.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost20, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0972");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 104);
        int int6 = cassandraHost5.getCassandraThriftSocketTimeout();
        boolean boolean7 = subject0.equals((java.lang.Object) int6);
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0973");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet41 = subject37.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("102");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost43, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0974");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0975");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        java.lang.String str86 = cassandraHost85.toString();
        java.lang.String str87 = cassandraHost85.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost85, "103:2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0976");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject)", (int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0977");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost4.setLifo(false);
        java.lang.String str7 = cassandraHost4.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0978");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean14 = subject0.equals((java.lang.Object) 10L);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost19.setCassandraThriftSocketTimeout((int) (short) 10);
        boolean boolean22 = cassandraHost17.equals((java.lang.Object) cassandraHost19);
        int int23 = cassandraHost17.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "hi!(hi!)(hi!(hi!)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0979");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("", 0);
        boolean boolean9 = subject0.equals((java.lang.Object) cassandraHost8);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0980");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)(:97(:97)):10", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0981");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject1.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet16 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.lang.Object> objSet30 = subject17.getPrivateCredentials();
        subject17.setReadOnly();
        java.lang.String str32 = subject17.toString();
        subject17.setReadOnly();
        boolean boolean34 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet35 = subject17.getPrincipals();
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        boolean boolean37 = subject36.isReadOnly();
        java.lang.String str38 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong39 = new java.util.concurrent.atomic.AtomicLong();
        double double40 = atomicLong39.doubleValue();
        long long41 = atomicLong39.incrementAndGet();
        boolean boolean42 = subject36.equals((java.lang.Object) long41);
        java.lang.String str43 = subject36.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong45 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean46 = subject36.equals((java.lang.Object) atomicLong45);
        java.util.Set<java.lang.Object> objSet47 = subject36.getPrivateCredentials();
        boolean boolean48 = subject36.isReadOnly();
        java.util.Set<java.security.Principal> principalSet49 = subject36.getPrincipals();
        java.util.Set<java.security.Principal> principalSet50 = subject36.getPrincipals();
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet16, principalSet35, principalSet50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost54 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean57 = cassandraHost54.equals((java.lang.Object) (short) 100);
        long long58 = cassandraHost54.getMaxWaitTimeWhenExhausted();
        boolean boolean59 = cassandraHost54.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost62 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean63 = cassandraHost54.equals((java.lang.Object) cassandraHost62);
        cassandraHost62.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str66 = cassandraHost62.getHost();
        int int67 = cassandraHost62.getCassandraThriftSocketTimeout();
        cassandraHost62.setMaxWaitTimeWhenExhausted(103L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient71 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost62, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient71.equals(null)", !hKerberosThriftClient71.equals(null));
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0982");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        java.util.Set<java.security.Principal> principalSet76 = subject73.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("9492", 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient81 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost79, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient81.equals(null)", !hKerberosThriftClient81.equals(null));
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0983");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("103:97", (int) (short) 62);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "106");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0984");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        subject38.setReadOnly();
        boolean boolean43 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        cassandraHost46.setMaxFrameSize(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0985");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        java.util.Set<java.lang.Object> objSet84 = subject81.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet85 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (byte) 100);
        java.lang.String str89 = cassandraHost88.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost88, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0986");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.lang.String str38 = subject37.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 0);
        int int42 = cassandraHost41.getPort();
        boolean boolean43 = cassandraHost41.isPerformNameResolution();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int46 = cassandraHost45.getMaxActive();
        java.lang.String str47 = cassandraHost45.toString();
        cassandraHost45.setMaxActive((int) (short) 101);
        cassandraHost45.setUseThriftFramedTransport(true);
        boolean boolean52 = cassandraHost41.equals((java.lang.Object) cassandraHost45);
        boolean boolean53 = cassandraHost45.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost45, "105");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0987");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        java.lang.String str43 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (byte) 101);
        cassandraHost46.setMaxActive(2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0988");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        subject9.setReadOnly();
        java.util.Set<java.security.Principal> principalSet19 = subject9.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost22, "Subject(Subject)(Subject(Subject)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0989");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        cassandraHost16.setUseThriftFramedTransport(true);
        long long29 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        cassandraHost16.setMaxWaitTimeWhenExhausted(268L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost16, "Subject(Subject)(Subject(Subject)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0990");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0991");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        java.lang.String str14 = cassandraHost13.getIp();
        java.lang.String str15 = cassandraHost13.toString();
        java.lang.String str16 = cassandraHost13.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0992");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet23 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost26 = new me.prettyprint.cassandra.service.CassandraHost("9649", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost26, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0993");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        java.lang.String str15 = cassandraHost13.getHost();
        cassandraHost13.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost13.setUseSocketKeepalive(false);
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        long long24 = atomicLong20.getAndSet((long) 100);
        boolean boolean27 = atomicLong20.compareAndSet((-1L), 1L);
        boolean boolean30 = atomicLong20.weakCompareAndSet((long) (short) 0, (long) 50);
        long long31 = atomicLong20.incrementAndGet();
        double double32 = atomicLong20.doubleValue();
        long long33 = atomicLong20.getAndIncrement();
        boolean boolean34 = cassandraHost13.equals((java.lang.Object) atomicLong20);
        boolean boolean35 = cassandraHost13.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0994");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str10 = cassandraHost9.getHost();
        int int11 = cassandraHost9.getMaxActive();
        java.lang.String str12 = cassandraHost9.getHost();
        java.lang.String str13 = cassandraHost9.getUrl();
        java.lang.String str14 = cassandraHost9.getUrl();
        boolean boolean15 = cassandraHost9.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "85");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0995");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103):0");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0996");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost5.setCassandraThriftSocketTimeout(0);
        java.lang.String str8 = cassandraHost5.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean11 = cassandraHost10.getUseSocketKeepalive();
        boolean boolean12 = cassandraHost5.equals((java.lang.Object) boolean11);
        int int13 = cassandraHost5.getMaxFrameSize();
        int int14 = cassandraHost5.getPort();
        int int15 = cassandraHost5.getCassandraThriftSocketTimeout();
        boolean boolean16 = cassandraHost5.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost5.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, ":9160:99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0997");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int39 = cassandraHost38.getPort();
        java.lang.String str40 = cassandraHost38.toString();
        boolean boolean41 = cassandraHost38.getUseThriftFramedTransport();
        cassandraHost38.setMaxActive((int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "52:32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0998");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        java.lang.String str17 = cassandraHost12.getIp();
        java.lang.String str18 = cassandraHost12.getUrl();
        cassandraHost12.setUseSocketKeepalive(false);
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test0999");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", 98);
        cassandraHost10.setCassandraThriftSocketTimeout(135);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest1.test1000");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str12 = cassandraHost11.getUrl();
        java.lang.String str13 = cassandraHost11.getHost();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setMaxFrameSize((int) 'a');
        java.lang.String str18 = cassandraHost15.getIp();
        boolean boolean19 = cassandraHost11.equals((java.lang.Object) cassandraHost15);
        boolean boolean20 = cassandraHost11.getLifo();
        java.lang.String str21 = cassandraHost11.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }
}

