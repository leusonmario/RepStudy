import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1001");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost84.setCassandraThriftSocketTimeout(0);
        java.lang.String str87 = cassandraHost84.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean90 = cassandraHost89.getUseSocketKeepalive();
        boolean boolean91 = cassandraHost84.equals((java.lang.Object) boolean90);
        int int92 = cassandraHost84.getMaxFrameSize();
        int int93 = cassandraHost84.getPort();
        int int94 = cassandraHost84.getCassandraThriftSocketTimeout();
        boolean boolean95 = cassandraHost84.getUseSocketKeepalive();
        boolean boolean96 = cassandraHost84.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1002");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 101);
        java.lang.String str14 = cassandraHost13.getName();
        long long15 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1003");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean10 = cassandraHost7.equals((java.lang.Object) (short) 100);
        long long11 = cassandraHost7.getMaxWaitTimeWhenExhausted();
        boolean boolean12 = cassandraHost7.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) cassandraHost15);
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str19 = cassandraHost15.getHost();
        int int20 = cassandraHost15.getCassandraThriftSocketTimeout();
        java.lang.String str21 = cassandraHost15.getIp();
        java.lang.String str22 = cassandraHost15.getName();
        int int23 = cassandraHost15.getMaxFrameSize();
        int int24 = cassandraHost15.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1004");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", (int) (short) 10);
        cassandraHost2.setMaxActive((-1));
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet7, principalSet10, (java.util.Set<java.security.Principal>) principalSet26);
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        boolean boolean46 = subject43.isReadOnly();
        boolean boolean47 = cassandraHost2.equals((java.lang.Object) subject43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str51 = cassandraHost50.getHost();
        int int52 = cassandraHost50.getMaxActive();
        java.lang.String str53 = cassandraHost50.getHost();
        java.lang.String str54 = cassandraHost50.getUrl();
        java.lang.String str55 = cassandraHost50.getUrl();
        boolean boolean56 = cassandraHost50.getLifo();
        int int57 = cassandraHost50.getMaxFrameSize();
        boolean boolean58 = cassandraHost50.isPerformNameResolution();
        boolean boolean59 = subject43.equals((java.lang.Object) boolean58);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        java.lang.String str61 = subject60.toString();
        java.lang.String str62 = subject60.toString();
        java.util.Set<java.lang.Object> objSet63 = subject60.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        boolean boolean65 = subject60.isReadOnly();
        java.util.Set<java.lang.Object> objSet66 = subject60.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet67 = subject60.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet68 = subject60.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost71 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong73 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean74 = cassandraHost71.equals((java.lang.Object) (short) 100);
        long long75 = cassandraHost71.getMaxWaitTimeWhenExhausted();
        boolean boolean76 = cassandraHost71.getUseThriftFramedTransport();
        java.lang.String str77 = cassandraHost71.getHost();
        boolean boolean78 = cassandraHost71.getLifo();
        boolean boolean79 = cassandraHost71.getUseThriftFramedTransport();
        boolean boolean80 = subject60.equals((java.lang.Object) cassandraHost71);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject43, cassandraHost71, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1005");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        java.lang.String str19 = cassandraHost14.getIp();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxFrameSize(10);
        boolean boolean23 = cassandraHost14.getLifo();
        boolean boolean24 = cassandraHost14.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1006");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99)(99(0.0.0.99)):100", (int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "127.0.0.1(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1007");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        boolean boolean11 = cassandraHost4.equals((java.lang.Object) boolean10);
        boolean boolean13 = cassandraHost4.equals((java.lang.Object) (-1L));
        cassandraHost4.setMaxFrameSize((int) (byte) 1);
        cassandraHost4.setUseThriftFramedTransport(false);
        boolean boolean18 = subject0.equals((java.lang.Object) false);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "0.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1008");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 104);
        int int8 = cassandraHost7.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "135");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1009");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getMaxActive();
        java.lang.String str17 = cassandraHost11.getUrl();
        cassandraHost11.setMaxActive((int) (short) 10);
        cassandraHost11.setMaxWaitTimeWhenExhausted((long) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject(Subject)(Subject(Subject))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1010");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        java.lang.String str45 = cassandraHost44.getIp();
        int int46 = cassandraHost44.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, ":97(:97):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1011");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        boolean boolean43 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost45.setCassandraThriftSocketTimeout(0);
        cassandraHost45.setUseSocketKeepalive(false);
        java.lang.String str50 = cassandraHost45.getIp();
        java.lang.String str51 = cassandraHost45.getUrl();
        cassandraHost45.setMaxFrameSize(10);
        int int54 = cassandraHost45.getMaxActive();
        cassandraHost45.setMaxActive((int) (byte) 0);
        java.lang.String str57 = cassandraHost45.getUrl();
        cassandraHost45.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "9381(0.0.36.165):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1012");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str8 = cassandraHost7.getIp();
        cassandraHost7.setUseThriftFramedTransport(true);
        boolean boolean11 = subject0.equals((java.lang.Object) true);
        java.util.Set<java.lang.Object> objSet12 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "9740");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1013");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        boolean boolean83 = subject82.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int86 = cassandraHost85.getPort();
        int int87 = cassandraHost85.getCassandraThriftSocketTimeout();
        int int88 = cassandraHost85.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1014");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        cassandraHost14.setUseSocketKeepalive(false);
        boolean boolean21 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1015");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 0);
        int int14 = cassandraHost13.getPort();
        boolean boolean15 = cassandraHost13.isPerformNameResolution();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int18 = cassandraHost17.getMaxActive();
        java.lang.String str19 = cassandraHost17.toString();
        cassandraHost17.setMaxActive((int) (short) 101);
        cassandraHost17.setUseThriftFramedTransport(true);
        boolean boolean24 = cassandraHost13.equals((java.lang.Object) cassandraHost17);
        cassandraHost17.setLifo(true);
        cassandraHost17.setMaxActive((int) (byte) -54);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1016");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("97");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, ":9160(:9160)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1017");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1018");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        subject10.setReadOnly();
        java.lang.String str12 = subject10.toString();
        java.util.Set<java.lang.Object> objSet13 = subject10.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject10.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet38, (java.util.Set<java.security.Principal>) principalSet40, (java.util.Set<java.security.Principal>) principalSet43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet30, principalSet38);
        subject46.setReadOnly();
        java.lang.String str48 = subject46.toString();
        java.util.Set<java.lang.Object> objSet49 = subject46.getPrivateCredentials();
        java.lang.String str50 = subject46.toString();
        java.util.Set<java.security.Principal> principalSet51 = subject46.getPrincipals();
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        boolean boolean53 = subject52.isReadOnly();
        java.lang.String str54 = subject52.toString();
        subject52.setReadOnly();
        subject52.setReadOnly();
        boolean boolean57 = subject52.isReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject52.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet14, principalSet51, principalSet58);
        java.util.Set<java.lang.Object> objSet60 = subject59.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost63 = new me.prettyprint.cassandra.service.CassandraHost("234", 109);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost63, "0.0.0.91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1019");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        boolean boolean16 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost18.setCassandraThriftSocketTimeout(0);
        java.lang.String str21 = cassandraHost18.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost23 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean24 = cassandraHost23.getUseSocketKeepalive();
        boolean boolean25 = cassandraHost18.equals((java.lang.Object) boolean24);
        int int26 = cassandraHost18.getMaxActive();
        boolean boolean27 = cassandraHost18.isPerformNameResolution();
        java.lang.String str28 = cassandraHost18.getName();
        java.lang.String str29 = cassandraHost18.getHost();
        java.lang.String str30 = cassandraHost18.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1020");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int85 = cassandraHost84.getPort();
        java.lang.String str86 = cassandraHost84.toString();
        boolean boolean87 = cassandraHost84.getUseThriftFramedTransport();
        cassandraHost84.setMaxActive((int) (byte) 1);
        java.lang.String str90 = cassandraHost84.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost84, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1021");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99)(99(0.0.0.99)):100", (int) (byte) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1022");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) (byte) 3);
        int int10 = cassandraHost9.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "9693:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1023");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 104);
        int int6 = cassandraHost5.getCassandraThriftSocketTimeout();
        boolean boolean7 = subject0.equals((java.lang.Object) int6);
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        cassandraHost11.setUseSocketKeepalive(true);
        cassandraHost11.setMaxActive(2147483647);
        cassandraHost11.setLifo(false);
        java.lang.String str19 = cassandraHost11.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, ":9160:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1024");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        java.lang.String str12 = subject0.toString();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean19 = cassandraHost16.equals((java.lang.Object) (short) 100);
        long long20 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean25 = cassandraHost16.equals((java.lang.Object) cassandraHost24);
        cassandraHost24.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost24, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1025");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        long long45 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        boolean boolean46 = cassandraHost41.getUseThriftFramedTransport();
        cassandraHost41.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost41.setUseSocketKeepalive(false);
        int int51 = cassandraHost41.getCassandraThriftSocketTimeout();
        long long52 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1026");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        subject73.setReadOnly();
        subject73.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):12", 31);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost78, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1027");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        java.util.Set<java.lang.Object> objSet74 = subject73.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient79 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost77, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient79.equals(null)", !hKerberosThriftClient79.equals(null));
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1028");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        int int42 = cassandraHost38.getCassandraThriftSocketTimeout();
        cassandraHost38.setLifo(false);
        cassandraHost38.setUseSocketKeepalive(false);
        boolean boolean47 = subject31.equals((java.lang.Object) false);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)", (int) (byte) 51);
        cassandraHost50.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost50, "2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1029");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0", (int) (short) 65);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "64");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1030");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        boolean boolean38 = subject37.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):100", 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1031");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("31", (int) (byte) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "234");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1032");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.lang.String str38 = subject37.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103)");
        boolean boolean41 = cassandraHost40.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "hi!:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1033");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", (int) (byte) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1034");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        cassandraHost5.setUseSocketKeepalive(true);
        cassandraHost5.setUseSocketKeepalive(false);
        int int11 = cassandraHost5.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1035");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        boolean boolean42 = cassandraHost38.getUseThriftFramedTransport();
        cassandraHost38.setLifo(true);
        cassandraHost38.setMaxActive((int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "52:32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1036");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", 101);
        cassandraHost43.setMaxActive((int) (byte) 104);
        int int46 = cassandraHost43.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost43, "9");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1037");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost33 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost33.setCassandraThriftSocketTimeout(0);
        java.lang.String str36 = cassandraHost33.getUrl();
        long long37 = cassandraHost33.getMaxWaitTimeWhenExhausted();
        cassandraHost33.setMaxFrameSize((int) (short) 100);
        int int40 = cassandraHost33.getMaxActive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str44 = cassandraHost43.getHost();
        cassandraHost43.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean50 = cassandraHost43.equals((java.lang.Object) cassandraHost49);
        long long51 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        boolean boolean52 = cassandraHost33.equals((java.lang.Object) cassandraHost43);
        boolean boolean53 = cassandraHost43.getLifo();
        java.lang.String str54 = cassandraHost43.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost43, ":9160(:9160):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1038");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        boolean boolean35 = subject34.isReadOnly();
        java.lang.String str36 = subject34.toString();
        java.util.Set<java.security.Principal> principalSet37 = subject34.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        int int44 = cassandraHost40.getCassandraThriftSocketTimeout();
        boolean boolean45 = subject34.equals((java.lang.Object) cassandraHost40);
        boolean boolean46 = subject34.isReadOnly();
        java.util.Set<java.security.Principal> principalSet47 = subject34.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        boolean boolean49 = subject48.isReadOnly();
        java.lang.String str50 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong51 = new java.util.concurrent.atomic.AtomicLong();
        double double52 = atomicLong51.doubleValue();
        long long53 = atomicLong51.incrementAndGet();
        boolean boolean54 = subject48.equals((java.lang.Object) long53);
        java.lang.String str55 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong57 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean58 = subject48.equals((java.lang.Object) atomicLong57);
        java.util.Set<java.lang.Object> objSet59 = subject48.getPrivateCredentials();
        boolean boolean60 = subject48.isReadOnly();
        java.util.Set<java.security.Principal> principalSet61 = subject48.getPrincipals();
        java.util.Set<java.lang.Object> objSet62 = subject48.getPublicCredentials();
        subject48.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject48.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet33, principalSet47, principalSet64);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost67 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str68 = cassandraHost67.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient70 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject65, cassandraHost67, "0.0.1.60");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient70.equals(null)", !hKerberosThriftClient70.equals(null));
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1039");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 10);
        cassandraHost16.setMaxActive((int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1040");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        boolean boolean38 = subject31.isReadOnly();
        boolean boolean39 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet40 = subject31.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet41 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("-1", (int) (byte) 104);
        int int45 = cassandraHost44.getPort();
        int int46 = cassandraHost44.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost44, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1041");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", (int) (byte) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1042");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        cassandraHost11.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1043");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong47 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean48 = cassandraHost45.equals((java.lang.Object) (short) 100);
        long long49 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        boolean boolean50 = cassandraHost45.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean54 = cassandraHost45.equals((java.lang.Object) cassandraHost53);
        cassandraHost53.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str57 = cassandraHost53.getHost();
        int int58 = cassandraHost53.getCassandraThriftSocketTimeout();
        cassandraHost53.setMaxWaitTimeWhenExhausted(103L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient62 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost53, "8");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient62.equals(null)", !hKerberosThriftClient62.equals(null));
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1044");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "198");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1045");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        subject89.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("99:9160", 105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost93, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1046");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) -1);
        int int41 = cassandraHost40.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1047");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        cassandraHost7.setMaxFrameSize((int) (byte) 1);
        cassandraHost7.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.Set<java.security.Principal> principalSet29 = subject21.getPrincipals();
        boolean boolean30 = cassandraHost7.equals((java.lang.Object) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        boolean boolean33 = subject32.isReadOnly();
        java.lang.String str34 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(true, principalSet36, (java.util.Set<java.security.Principal>) principalSet41, principalSet60);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject(false, principalSet5, principalSet29, principalSet60);
        subject62.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str67 = cassandraHost66.getHost();
        int int68 = cassandraHost66.getMaxActive();
        cassandraHost66.setMaxWaitTimeWhenExhausted((long) (short) 32);
        long long71 = cassandraHost66.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient73 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject62, cassandraHost66, "10154");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient73.equals(null)", !hKerberosThriftClient73.equals(null));
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1048");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (-1));
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1049");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        java.lang.String str90 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str93 = cassandraHost92.getName();
        cassandraHost92.setUseThriftFramedTransport(false);
        cassandraHost92.setMaxFrameSize((int) (short) 9);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "Subject:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1050");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean41 = cassandraHost40.getUseSocketKeepalive();
        int int42 = cassandraHost40.getCassandraThriftSocketTimeout();
        cassandraHost40.setMaxWaitTimeWhenExhausted((long) (short) 99);
        int int45 = cassandraHost40.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "82");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1051");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.lang.String str83 = subject81.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.208", (int) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient88 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost86, "hi!(hi!):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient88.equals(null)", !hKerberosThriftClient88.equals(null));
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1052");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 104);
        int int6 = cassandraHost5.getCassandraThriftSocketTimeout();
        boolean boolean7 = subject0.equals((java.lang.Object) int6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("9693");
        cassandraHost9.setMaxActive((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1053");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet91 = subject87.getPublicCredentials();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost95 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 51);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost95, "0.0.1.60");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1054");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("1", 100);
        boolean boolean93 = cassandraHost92.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1055");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet91 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1056");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int40 = cassandraHost39.getMaxActive();
        java.lang.String str41 = cassandraHost39.toString();
        cassandraHost39.setMaxActive((int) (short) 101);
        cassandraHost39.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1057");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        java.lang.String str19 = cassandraHost14.getIp();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxFrameSize(10);
        cassandraHost14.setLifo(true);
        java.lang.String str25 = cassandraHost14.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1058");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        int int13 = cassandraHost12.getMaxFrameSize();
        java.lang.String str14 = cassandraHost12.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)(hi!(hi!)):98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1059");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        java.util.Set<java.lang.Object> objSet74 = subject73.getPrivateCredentials();
        subject73.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 100);
        cassandraHost78.setCassandraThriftSocketTimeout(100);
        java.lang.String str81 = cassandraHost78.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient83 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost78, "103(0.0.0.103):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient83.equals(null)", !hKerberosThriftClient83.equals(null));
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1060");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (short) 33);
        int int11 = cassandraHost10.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "Subject(Subject):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1061");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("9381", (int) (byte) 52);
        java.lang.String str39 = cassandraHost38.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1062");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        int int43 = cassandraHost42.getPort();
        cassandraHost42.setCassandraThriftSocketTimeout((int) (short) 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost42, ":9160((:9160()");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1063");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):-1", (int) (byte) 104);
        cassandraHost14.setCassandraThriftSocketTimeout(35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1064");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long21 = cassandraHost20.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1065");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (int) (byte) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, ":97(:97)(:97(:97)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1066");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.lang.String str89 = subject87.toString();
        boolean boolean90 = subject87.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        long long94 = cassandraHost93.getMaxWaitTimeWhenExhausted();
        boolean boolean95 = cassandraHost93.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1067");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        cassandraHost14.setUseThriftFramedTransport(true);
        boolean boolean17 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1068");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) '4');
        java.lang.String str13 = cassandraHost12.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, ":97:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1069");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        boolean boolean3 = subject0.equals((java.lang.Object) ":97(:97)");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):99", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1070");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean17 = subject0.equals((java.lang.Object) "hi!(hi!):101");
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong23 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean24 = cassandraHost21.equals((java.lang.Object) (short) 100);
        int int25 = cassandraHost21.getCassandraThriftSocketTimeout();
        cassandraHost21.setCassandraThriftSocketTimeout(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1071");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        cassandraHost11.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost11.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost11.setUseSocketKeepalive(false);
        long long23 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        int int24 = cassandraHost11.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1072");
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject(false, principalSet5, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet10);
        javax.security.auth.Subject subject14 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet15 = subject14.getPrincipals();
        java.security.Principal[] principalArray16 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet17 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet17, principalArray16);
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject(false, principalSet15, (java.util.Set<java.security.Principal>) principalSet17, (java.util.Set<java.security.Principal>) principalSet20);
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet17, principalSet25);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet37 = subject36.getPrincipals();
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, principalSet37, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet42);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet49, principalSet57);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet57, (java.util.Set<java.security.Principal>) principalSet70);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject();
        boolean boolean78 = subject77.isReadOnly();
        java.lang.String str79 = subject77.toString();
        subject77.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject77.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject();
        boolean boolean83 = subject82.isReadOnly();
        java.lang.String str84 = subject82.toString();
        subject82.setReadOnly();
        java.util.Set<java.security.Principal> principalSet86 = subject82.getPrincipals();
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet81, principalSet86);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("101:9160");
        int int90 = cassandraHost89.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost89, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1073");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "110");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1074");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        subject38.setReadOnly();
        boolean boolean43 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost45.setCassandraThriftSocketTimeout(0);
        cassandraHost45.setUseSocketKeepalive(false);
        boolean boolean50 = cassandraHost45.getUseThriftFramedTransport();
        boolean boolean51 = cassandraHost45.getLifo();
        cassandraHost45.setMaxFrameSize((int) (byte) 98);
        cassandraHost45.setMaxWaitTimeWhenExhausted(151L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient57 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "9381");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient57.equals(null)", !hKerberosThriftClient57.equals(null));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1075");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        boolean boolean9 = subject8.isReadOnly();
        java.lang.String str10 = subject8.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong11 = new java.util.concurrent.atomic.AtomicLong();
        double double12 = atomicLong11.doubleValue();
        long long13 = atomicLong11.incrementAndGet();
        boolean boolean14 = subject8.equals((java.lang.Object) long13);
        subject8.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject8.getPrincipals();
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet21 = subject20.getPrincipals();
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.security.Principal[] principalArray36 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet37 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet37, principalArray36);
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, principalSet35, (java.util.Set<java.security.Principal>) principalSet37, (java.util.Set<java.security.Principal>) principalSet40);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, principalSet45, (java.util.Set<java.security.Principal>) principalSet47, (java.util.Set<java.security.Principal>) principalSet50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet37, principalSet45);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet19, principalSet21, principalSet45);
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(true, principalSet7, principalSet16, principalSet55);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost59 = new me.prettyprint.cassandra.service.CassandraHost("", (-1));
        java.lang.String str60 = cassandraHost59.getHost();
        java.lang.String str61 = cassandraHost59.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject56, cassandraHost59, "34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1076");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("99");
        java.lang.String str41 = cassandraHost40.getHost();
        int int42 = cassandraHost40.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1077");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        java.lang.String str6 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 101);
        boolean boolean10 = cassandraHost9.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1078");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.lang.String str9 = subject0.toString();
        boolean boolean10 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        int int15 = cassandraHost14.getPort();
        int int16 = cassandraHost14.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "103(0.0.0.103):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1079");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("3", (int) (short) 9160);
        boolean boolean15 = subject9.equals((java.lang.Object) "3");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean23 = cassandraHost22.getUseSocketKeepalive();
        boolean boolean24 = cassandraHost17.equals((java.lang.Object) boolean23);
        int int25 = cassandraHost17.getMaxActive();
        boolean boolean26 = cassandraHost17.isPerformNameResolution();
        cassandraHost17.setMaxWaitTimeWhenExhausted((long) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "Subject:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1080");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean14 = subject0.equals((java.lang.Object) 10L);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):101", (int) (byte) -106);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1081");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        java.lang.String str15 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long19 = cassandraHost18.getMaxWaitTimeWhenExhausted();
        java.lang.String str20 = cassandraHost18.getHost();
        boolean boolean21 = cassandraHost18.isPerformNameResolution();
        java.lang.String str22 = cassandraHost18.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "8");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1082");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        cassandraHost16.setUseSocketKeepalive(false);
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        boolean boolean22 = cassandraHost16.getLifo();
        cassandraHost16.setMaxFrameSize((int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost16, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1083");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "9381");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1084");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1085");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("12", (int) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, ":9160:99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1086");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.lang.String str39 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        java.lang.String str44 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean47 = cassandraHost46.getUseSocketKeepalive();
        boolean boolean48 = cassandraHost41.equals((java.lang.Object) boolean47);
        int int49 = cassandraHost41.getMaxActive();
        boolean boolean50 = cassandraHost41.isPerformNameResolution();
        java.lang.String str51 = cassandraHost41.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost41, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1087");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.security.Principal> principalSet44 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):101", (int) (byte) -106);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1088");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        boolean boolean38 = subject34.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost41, "0:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1089");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (byte) 32);
        int int13 = cassandraHost12.getMaxActive();
        boolean boolean14 = cassandraHost12.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1090");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.lang.Object> objSet82 = subject81.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str85 = cassandraHost84.getIp();
        cassandraHost84.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str88 = cassandraHost84.toString();
        java.lang.String str89 = cassandraHost84.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost84, ":97(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1091");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str6 = cassandraHost5.getUrl();
        java.lang.String str7 = cassandraHost5.getHost();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setMaxFrameSize((int) 'a');
        java.lang.String str12 = cassandraHost9.getIp();
        boolean boolean13 = cassandraHost5.equals((java.lang.Object) cassandraHost9);
        boolean boolean14 = cassandraHost5.getLifo();
        java.lang.String str15 = cassandraHost5.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "Subject:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1092");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost6.setCassandraThriftSocketTimeout(0);
        cassandraHost6.setUseSocketKeepalive(false);
        int int11 = cassandraHost6.getMaxActive();
        boolean boolean12 = cassandraHost6.getUseThriftFramedTransport();
        long long13 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        cassandraHost6.setMaxWaitTimeWhenExhausted(136L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1093");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (short) 1);
        java.lang.String str12 = cassandraHost11.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1094");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99)(99(0.0.0.99)):100", (int) (short) 14);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "103(0.0.0.103)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1095");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.lang.String str39 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        cassandraHost42.setUseSocketKeepalive(true);
        cassandraHost42.setMaxActive(2147483647);
        cassandraHost42.setLifo(false);
        java.lang.String str50 = cassandraHost42.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, ":97:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1096");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        java.lang.String str40 = cassandraHost37.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        boolean boolean44 = cassandraHost37.equals((java.lang.Object) boolean43);
        int int45 = cassandraHost37.getMaxActive();
        boolean boolean46 = cassandraHost37.getUseSocketKeepalive();
        java.lang.String str47 = cassandraHost37.getUrl();
        cassandraHost37.setCassandraThriftSocketTimeout((int) (byte) 1);
        cassandraHost37.setUseSocketKeepalive(true);
        java.lang.String str52 = cassandraHost37.getUrl();
        boolean boolean53 = cassandraHost37.isPerformNameResolution();
        cassandraHost37.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient57 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient57.equals(null)", !hKerberosThriftClient57.equals(null));
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1097");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("208", (int) (byte) 32);
        cassandraHost8.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1098");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        boolean boolean35 = subject34.isReadOnly();
        java.lang.String str36 = subject34.toString();
        java.util.Set<java.security.Principal> principalSet37 = subject34.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong42 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean43 = cassandraHost40.equals((java.lang.Object) (short) 100);
        int int44 = cassandraHost40.getCassandraThriftSocketTimeout();
        boolean boolean45 = subject34.equals((java.lang.Object) cassandraHost40);
        boolean boolean46 = subject34.isReadOnly();
        java.util.Set<java.security.Principal> principalSet47 = subject34.getPrincipals();
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        boolean boolean49 = subject48.isReadOnly();
        java.lang.String str50 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong51 = new java.util.concurrent.atomic.AtomicLong();
        double double52 = atomicLong51.doubleValue();
        long long53 = atomicLong51.incrementAndGet();
        boolean boolean54 = subject48.equals((java.lang.Object) long53);
        java.lang.String str55 = subject48.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong57 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean58 = subject48.equals((java.lang.Object) atomicLong57);
        java.util.Set<java.lang.Object> objSet59 = subject48.getPrivateCredentials();
        boolean boolean60 = subject48.isReadOnly();
        java.util.Set<java.security.Principal> principalSet61 = subject48.getPrincipals();
        java.util.Set<java.lang.Object> objSet62 = subject48.getPublicCredentials();
        subject48.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject48.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet33, principalSet47, principalSet64);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost67 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):99");
        boolean boolean68 = cassandraHost67.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient70 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject65, cassandraHost67, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient70.equals(null)", !hKerberosThriftClient70.equals(null));
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1099");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        boolean boolean38 = subject34.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        boolean boolean45 = cassandraHost41.getUseThriftFramedTransport();
        cassandraHost41.setCassandraThriftSocketTimeout((int) (byte) 0);
        cassandraHost41.setMaxActive(105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost41, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1100");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160");
        int int4 = cassandraHost3.getCassandraThriftSocketTimeout();
        boolean boolean5 = cassandraHost3.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, ":97:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1101");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean85 = cassandraHost84.getUseSocketKeepalive();
        java.lang.String str86 = cassandraHost84.getUrl();
        cassandraHost84.setMaxFrameSize(100);
        java.lang.String str89 = cassandraHost84.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost84, "Subject(Subject)(Subject(Subject))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1102");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.lang.String str4 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "0.0.0.99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1103");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        boolean boolean9 = subject8.isReadOnly();
        java.lang.String str10 = subject8.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong11 = new java.util.concurrent.atomic.AtomicLong();
        double double12 = atomicLong11.doubleValue();
        long long13 = atomicLong11.incrementAndGet();
        boolean boolean14 = subject8.equals((java.lang.Object) long13);
        subject8.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject8.getPrincipals();
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet21 = subject20.getPrincipals();
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.security.Principal[] principalArray36 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet37 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet37, principalArray36);
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, principalSet35, (java.util.Set<java.security.Principal>) principalSet37, (java.util.Set<java.security.Principal>) principalSet40);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, principalSet45, (java.util.Set<java.security.Principal>) principalSet47, (java.util.Set<java.security.Principal>) principalSet50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet37, principalSet45);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet19, principalSet21, principalSet45);
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(true, principalSet7, principalSet16, principalSet55);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost59 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong61 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean62 = cassandraHost59.equals((java.lang.Object) (short) 100);
        long long63 = cassandraHost59.getMaxWaitTimeWhenExhausted();
        boolean boolean64 = cassandraHost59.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost67 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean68 = cassandraHost59.equals((java.lang.Object) cassandraHost67);
        cassandraHost67.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str71 = cassandraHost67.getHost();
        int int72 = cassandraHost67.getCassandraThriftSocketTimeout();
        java.lang.String str73 = cassandraHost67.getIp();
        java.lang.String str74 = cassandraHost67.getName();
        int int75 = cassandraHost67.getMaxFrameSize();
        long long76 = cassandraHost67.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject56, cassandraHost67, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1104");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean13 = cassandraHost12.isPerformNameResolution();
        java.lang.String str14 = cassandraHost12.toString();
        boolean boolean15 = subject9.equals((java.lang.Object) cassandraHost12);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        int int18 = cassandraHost17.getMaxActive();
        cassandraHost17.setCassandraThriftSocketTimeout((int) (byte) 0);
        int int21 = cassandraHost17.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1105");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        java.util.Set<java.lang.Object> objSet40 = subject37.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        java.lang.String str44 = cassandraHost43.toString();
        java.lang.String str45 = cassandraHost43.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost43, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1106");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        java.lang.String str79 = subject78.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("0");
        cassandraHost81.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost81, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1107");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "112");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1108");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):34", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1109");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        boolean boolean42 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        java.lang.String str47 = cassandraHost45.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "234");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1110");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))", (int) (byte) 0);
        cassandraHost38.setUseSocketKeepalive(false);
        int int41 = cassandraHost38.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1111");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) 'a');
        boolean boolean41 = cassandraHost40.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1112");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        java.lang.String str9 = cassandraHost7.getIp();
        cassandraHost7.setMaxActive(105);
        cassandraHost7.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1113");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        cassandraHost7.setUseSocketKeepalive(false);
        int int14 = cassandraHost7.getMaxActive();
        java.lang.String str15 = cassandraHost7.getIp();
        java.lang.String str16 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1114");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str41 = cassandraHost40.getIp();
        cassandraHost40.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost40.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str46 = cassandraHost40.getIp();
        cassandraHost40.setMaxFrameSize((int) (short) 99);
        cassandraHost40.setCassandraThriftSocketTimeout(50);
        java.lang.String str51 = cassandraHost40.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost40, "hi!(hi!)(hi!(hi!)):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1115");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("0");
        int int12 = cassandraHost11.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "135");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1116");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.lang.Object> objSet83 = subject81.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1117");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1118");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        java.lang.String str12 = cassandraHost7.getIp();
        java.lang.String str13 = cassandraHost7.getUrl();
        cassandraHost7.setUseSocketKeepalive(false);
        java.lang.String str16 = cassandraHost7.toString();
        java.lang.String str17 = cassandraHost7.toString();
        cassandraHost7.setMaxActive(50);
        int int20 = cassandraHost7.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1119");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):34");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1120");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet6, principalSet56, (java.util.Set<java.security.Principal>) principalSet69);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient80 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient80.equals(null)", !hKerberosThriftClient80.equals(null));
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1121");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):101", (int) (byte) 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost21, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1122");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.util.Set<java.lang.Object> objSet72 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost74 = new me.prettyprint.cassandra.service.CassandraHost("52");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient76 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost74, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient76.equals(null)", !hKerberosThriftClient76.equals(null));
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1123");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost2.setCassandraThriftSocketTimeout(0);
        java.lang.String str5 = cassandraHost2.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean8 = cassandraHost7.getUseSocketKeepalive();
        boolean boolean9 = cassandraHost2.equals((java.lang.Object) boolean8);
        boolean boolean11 = cassandraHost2.equals((java.lang.Object) (-1L));
        cassandraHost2.setMaxFrameSize((int) (byte) 1);
        cassandraHost2.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.Set<java.security.Principal> principalSet24 = subject16.getPrincipals();
        boolean boolean25 = cassandraHost2.equals((java.lang.Object) principalSet24);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject();
        boolean boolean27 = subject26.isReadOnly();
        java.lang.String str28 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong29 = new java.util.concurrent.atomic.AtomicLong();
        double double30 = atomicLong29.doubleValue();
        long long31 = atomicLong29.incrementAndGet();
        boolean boolean32 = subject26.equals((java.lang.Object) long31);
        java.lang.String str33 = subject26.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong35 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean36 = subject26.equals((java.lang.Object) atomicLong35);
        java.util.Set<java.lang.Object> objSet37 = subject26.getPrivateCredentials();
        boolean boolean38 = subject26.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject26.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet40 = subject26.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(true, principalSet24, principalSet40, principalSet43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost53.setCassandraThriftSocketTimeout(0);
        java.lang.String str56 = cassandraHost53.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost58 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean59 = cassandraHost58.getUseSocketKeepalive();
        boolean boolean60 = cassandraHost53.equals((java.lang.Object) boolean59);
        boolean boolean62 = cassandraHost53.equals((java.lang.Object) (-1L));
        cassandraHost53.setMaxFrameSize((int) (byte) 1);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str67 = cassandraHost66.getIp();
        cassandraHost66.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost66.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str72 = cassandraHost66.getHost();
        boolean boolean73 = cassandraHost53.equals((java.lang.Object) cassandraHost66);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient75 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject51, cassandraHost53, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient75.equals(null)", !hKerberosThriftClient75.equals(null));
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1124");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "103:97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1125");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99(0.0.0.99):100", (int) (byte) 59);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "316");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1126");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        java.util.Set<java.lang.Object> objSet80 = subject78.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet81 = subject78.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str84 = cassandraHost83.getIp();
        cassandraHost83.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost83.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str89 = cassandraHost83.getHost();
        boolean boolean90 = cassandraHost83.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost83, "99:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1127");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        java.lang.String str83 = subject79.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        cassandraHost86.setMaxFrameSize((int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost86, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1128");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        java.lang.String str13 = cassandraHost10.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost10.equals((java.lang.Object) boolean16);
        int int18 = cassandraHost10.getMaxActive();
        boolean boolean19 = cassandraHost10.isPerformNameResolution();
        java.lang.String str20 = cassandraHost10.getName();
        boolean boolean21 = cassandraHost10.getUseThriftFramedTransport();
        boolean boolean22 = cassandraHost10.getUseSocketKeepalive();
        cassandraHost10.setUseSocketKeepalive(false);
        cassandraHost10.setMaxFrameSize((int) (byte) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "Subject(Subject):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1129");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean13 = cassandraHost12.isPerformNameResolution();
        java.lang.String str14 = cassandraHost12.toString();
        boolean boolean15 = subject9.equals((java.lang.Object) cassandraHost12);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean23 = cassandraHost22.getUseSocketKeepalive();
        boolean boolean24 = cassandraHost17.equals((java.lang.Object) boolean23);
        int int25 = cassandraHost17.getMaxActive();
        boolean boolean26 = cassandraHost17.getUseSocketKeepalive();
        java.lang.String str27 = cassandraHost17.getUrl();
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        boolean boolean29 = subject28.isReadOnly();
        java.lang.String str30 = subject28.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong31 = new java.util.concurrent.atomic.AtomicLong();
        double double32 = atomicLong31.doubleValue();
        long long33 = atomicLong31.incrementAndGet();
        boolean boolean34 = subject28.equals((java.lang.Object) long33);
        java.lang.String str35 = subject28.toString();
        java.lang.String str36 = subject28.toString();
        boolean boolean37 = subject28.isReadOnly();
        boolean boolean38 = cassandraHost17.equals((java.lang.Object) boolean37);
        long long39 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "CassandraClient<%s-%d>:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1130");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("91");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1131");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost39.setCassandraThriftSocketTimeout(0);
        cassandraHost39.setUseSocketKeepalive(false);
        java.lang.String str44 = cassandraHost39.getIp();
        java.lang.String str45 = cassandraHost39.getUrl();
        cassandraHost39.setMaxFrameSize(10);
        cassandraHost39.setLifo(true);
        cassandraHost39.setCassandraThriftSocketTimeout((int) (short) 9160);
        cassandraHost39.setMaxActive((int) (short) 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost39, "9692");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1132");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1)", (int) (byte) 50);
        java.lang.String str3 = cassandraHost2.toString();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, principalSet9, (java.util.Set<java.security.Principal>) principalSet25);
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.util.Set<java.lang.Object> objSet44 = subject42.getPublicCredentials();
        subject42.setReadOnly();
        subject42.setReadOnly();
        java.util.Set<java.lang.Object> objSet47 = subject42.getPublicCredentials();
        boolean boolean48 = cassandraHost2.equals((java.lang.Object) subject42);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost51 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) 52);
        cassandraHost51.setCassandraThriftSocketTimeout((int) (short) 102);
        long long54 = cassandraHost51.getMaxWaitTimeWhenExhausted();
        cassandraHost51.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject42, cassandraHost51, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1133");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        long long86 = cassandraHost85.getMaxWaitTimeWhenExhausted();
        cassandraHost85.setCassandraThriftSocketTimeout((int) (short) 32);
        int int89 = cassandraHost85.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1134");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1135");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.lang.String str33 = subject31.toString();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong41 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean42 = cassandraHost39.equals((java.lang.Object) (short) 100);
        cassandraHost39.setUseSocketKeepalive(false);
        long long45 = cassandraHost39.getMaxWaitTimeWhenExhausted();
        cassandraHost39.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost39.setMaxFrameSize((int) ' ');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "91(0.0.0.91):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1136");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong();
        float float37 = atomicLong36.floatValue();
        boolean boolean40 = atomicLong36.compareAndSet(65L, (long) (short) 0);
        atomicLong36.set(0L);
        atomicLong36.lazySet((long) (short) 101);
        boolean boolean45 = subject31.equals((java.lang.Object) atomicLong36);
        java.util.Set<java.security.Principal> principalSet46 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (byte) 100);
        boolean boolean50 = cassandraHost49.isPerformNameResolution();
        long long51 = cassandraHost49.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost49, "9159");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1137");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("12", (int) (byte) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "0(0.0.0.0):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1138");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost84 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str85 = cassandraHost84.getName();
        cassandraHost84.setCassandraThriftSocketTimeout(10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient89 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost84, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient89.equals(null)", !hKerberosThriftClient89.equals(null));
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1139");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        boolean boolean3 = subject0.equals((java.lang.Object) ":97(:97)");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean7 = cassandraHost6.getUseSocketKeepalive();
        boolean boolean8 = cassandraHost6.isPerformNameResolution();
        cassandraHost6.setUseSocketKeepalive(false);
        boolean boolean11 = cassandraHost6.getUseThriftFramedTransport();
        cassandraHost6.setLifo(true);
        java.lang.String str14 = cassandraHost6.getHost();
        java.lang.String str15 = cassandraHost6.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1140");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long37 = cassandraHost36.getMaxWaitTimeWhenExhausted();
        java.lang.String str38 = cassandraHost36.getHost();
        boolean boolean39 = cassandraHost36.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1141");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):52", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "105");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1142");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) 'a');
        java.lang.String str10 = cassandraHost9.getHost();
        java.lang.String str11 = cassandraHost9.getIp();
        boolean boolean12 = subject0.equals((java.lang.Object) cassandraHost9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        cassandraHost15.setCassandraThriftSocketTimeout(9900);
        boolean boolean18 = subject0.equals((java.lang.Object) cassandraHost15);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong23 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean24 = cassandraHost21.equals((java.lang.Object) (short) 100);
        cassandraHost21.setUseSocketKeepalive(false);
        long long27 = cassandraHost21.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1143");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        java.lang.String str79 = subject78.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        long long83 = cassandraHost82.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient85 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost82, "91(0.0.0.91):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient85.equals(null)", !hKerberosThriftClient85.equals(null));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1144");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long93 = cassandraHost92.getMaxWaitTimeWhenExhausted();
        cassandraHost92.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1145");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("9649", (int) ' ');
        cassandraHost6.setMaxFrameSize(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "166");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1146");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        cassandraHost6.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1147");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1148");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong();
        float float37 = atomicLong36.floatValue();
        boolean boolean40 = atomicLong36.compareAndSet(65L, (long) (short) 0);
        atomicLong36.set(0L);
        atomicLong36.lazySet((long) (short) 101);
        boolean boolean45 = subject31.equals((java.lang.Object) atomicLong36);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("10", (int) (byte) 53);
        java.lang.String str49 = cassandraHost48.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost48, ":9160:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1149");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str7 = cassandraHost5.getHost();
        cassandraHost5.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost5.setUseSocketKeepalive(false);
        java.util.concurrent.atomic.AtomicLong atomicLong12 = new java.util.concurrent.atomic.AtomicLong();
        double double13 = atomicLong12.doubleValue();
        long long14 = atomicLong12.incrementAndGet();
        long long16 = atomicLong12.getAndSet((long) 100);
        boolean boolean19 = atomicLong12.compareAndSet((-1L), 1L);
        boolean boolean22 = atomicLong12.weakCompareAndSet((long) (short) 0, (long) 50);
        long long23 = atomicLong12.incrementAndGet();
        double double24 = atomicLong12.doubleValue();
        long long25 = atomicLong12.getAndIncrement();
        boolean boolean26 = cassandraHost5.equals((java.lang.Object) atomicLong12);
        int int27 = cassandraHost5.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "hi!(hi!):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1150");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost35.setCassandraThriftSocketTimeout((int) (short) 10);
        cassandraHost35.setCassandraThriftSocketTimeout((int) (byte) 52);
        cassandraHost35.setUseSocketKeepalive(true);
        cassandraHost35.setMaxFrameSize(2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1151");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str20 = cassandraHost19.getHost();
        cassandraHost19.setMaxFrameSize((int) (byte) 101);
        int int23 = cassandraHost19.getCassandraThriftSocketTimeout();
        cassandraHost19.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1152");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        boolean boolean14 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":97(:97)(:97(:97)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1153");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        boolean boolean15 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean23 = cassandraHost22.getUseSocketKeepalive();
        boolean boolean24 = cassandraHost17.equals((java.lang.Object) boolean23);
        int int25 = cassandraHost17.getMaxActive();
        boolean boolean26 = cassandraHost17.getUseSocketKeepalive();
        java.lang.String str27 = cassandraHost17.getUrl();
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        boolean boolean29 = subject28.isReadOnly();
        java.lang.String str30 = subject28.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong31 = new java.util.concurrent.atomic.AtomicLong();
        double double32 = atomicLong31.doubleValue();
        long long33 = atomicLong31.incrementAndGet();
        boolean boolean34 = subject28.equals((java.lang.Object) long33);
        java.lang.String str35 = subject28.toString();
        java.lang.String str36 = subject28.toString();
        boolean boolean37 = subject28.isReadOnly();
        boolean boolean38 = cassandraHost17.equals((java.lang.Object) boolean37);
        long long39 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        java.lang.String str40 = cassandraHost17.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "(127.0.0.1)((127.0.0.1)):3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1154");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        java.lang.String str90 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet91 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0");
        cassandraHost93.setUseSocketKeepalive(false);
        cassandraHost93.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1155");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):1", (int) (short) 35);
        cassandraHost20.setMaxActive((int) (byte) 34);
        boolean boolean23 = cassandraHost20.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "103:2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1156");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.lang.String str13 = subject0.toString();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99(0.0.0.99)");
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1157");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("97");
        cassandraHost34.setCassandraThriftSocketTimeout(50);
        boolean boolean37 = subject31.equals((java.lang.Object) 50);
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        boolean boolean39 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("88", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "9692");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1158");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean6 = cassandraHost5.getUseSocketKeepalive();
        java.lang.String str7 = cassandraHost5.getUrl();
        long long8 = cassandraHost5.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1159");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost5.setMaxActive((int) 'a');
        int int8 = cassandraHost5.getMaxFrameSize();
        java.lang.String str9 = cassandraHost5.getHost();
        cassandraHost5.setCassandraThriftSocketTimeout(151);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1160");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "(127.0.0.1)((127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1161");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        subject10.setReadOnly();
        java.lang.String str12 = subject10.toString();
        java.util.Set<java.lang.Object> objSet13 = subject10.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet14 = subject10.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet38, (java.util.Set<java.security.Principal>) principalSet40, (java.util.Set<java.security.Principal>) principalSet43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet30, principalSet38);
        subject46.setReadOnly();
        java.lang.String str48 = subject46.toString();
        java.util.Set<java.lang.Object> objSet49 = subject46.getPrivateCredentials();
        java.lang.String str50 = subject46.toString();
        java.util.Set<java.security.Principal> principalSet51 = subject46.getPrincipals();
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        boolean boolean53 = subject52.isReadOnly();
        java.lang.String str54 = subject52.toString();
        subject52.setReadOnly();
        subject52.setReadOnly();
        boolean boolean57 = subject52.isReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject52.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet14, principalSet51, principalSet58);
        java.util.Set<java.lang.Object> objSet60 = subject59.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost63 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):101", (int) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost63, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1162");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1163");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 100);
        long long20 = cassandraHost19.getMaxWaitTimeWhenExhausted();
        cassandraHost19.setUseSocketKeepalive(true);
        long long23 = cassandraHost19.getMaxWaitTimeWhenExhausted();
        java.lang.String str24 = cassandraHost19.getName();
        int int25 = cassandraHost19.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1164");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):32", 412);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1(127.0.0.1):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1165");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean20 = cassandraHost17.equals((java.lang.Object) (short) 100);
        long long21 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        boolean boolean22 = cassandraHost17.getUseThriftFramedTransport();
        java.lang.String str23 = cassandraHost17.getHost();
        boolean boolean24 = cassandraHost17.getLifo();
        java.lang.String str25 = cassandraHost17.getName();
        cassandraHost17.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "9179");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1166");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        cassandraHost13.setUseSocketKeepalive(false);
        cassandraHost13.setCassandraThriftSocketTimeout((int) (short) 32);
        int int18 = cassandraHost13.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1167");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103):0", 3);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "127.0.0.1:2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1168");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        java.lang.String str40 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        java.lang.String str44 = cassandraHost43.getUrl();
        boolean boolean45 = cassandraHost43.getUseSocketKeepalive();
        java.lang.String str46 = cassandraHost43.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost43, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1169");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxActive();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive((int) (short) 10);
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        int int24 = cassandraHost14.getMaxActive();
        boolean boolean25 = cassandraHost14.getLifo();
        int int26 = cassandraHost14.getCassandraThriftSocketTimeout();
        int int27 = cassandraHost14.getMaxActive();
        int int28 = cassandraHost14.getPort();
        boolean boolean29 = cassandraHost14.getLifo();
        boolean boolean30 = subject0.equals((java.lang.Object) cassandraHost14);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost33 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103):0", 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient35 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost33, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient35.equals(null)", !hKerberosThriftClient35.equals(null));
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1170");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str6 = cassandraHost5.getIp();
        cassandraHost5.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost5.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str11 = cassandraHost5.getIp();
        cassandraHost5.setMaxFrameSize((int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "99(0.0.0.99)(99(0.0.0.99)):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1171");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        java.util.Set<java.security.Principal> principalSet55 = subject53.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost("163");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost57, "101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1172");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str84 = cassandraHost83.getName();
        cassandraHost83.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient88 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost83, "Subject:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient88.equals(null)", !hKerberosThriftClient88.equals(null));
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1173");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost(":97", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost85, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1174");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        java.lang.String str18 = cassandraHost17.getName();
        int int19 = cassandraHost17.getPort();
        int int20 = cassandraHost17.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "9693(0.0.37.221)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1175");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (short) 52);
        cassandraHost78.setUseSocketKeepalive(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, "9492");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1176");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", 103);
        java.lang.String str18 = cassandraHost17.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "0.0.0.106");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1177");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        boolean boolean43 = cassandraHost42.isPerformNameResolution();
        long long44 = cassandraHost42.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1178");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        int int47 = cassandraHost45.getCassandraThriftSocketTimeout();
        cassandraHost45.setUseSocketKeepalive(false);
        int int50 = cassandraHost45.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1179");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        boolean boolean38 = subject37.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject37.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("", (int) 'a');
        java.lang.String str43 = cassandraHost42.getIp();
        java.lang.String str44 = cassandraHost42.getUrl();
        int int45 = cassandraHost42.getMaxActive();
        java.lang.String str46 = cassandraHost42.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1180");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 32);
        cassandraHost10.setUseThriftFramedTransport(true);
        java.lang.String str13 = cassandraHost10.toString();
        boolean boolean14 = cassandraHost10.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "522");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1181");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1182");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean14 = subject0.equals((java.lang.Object) 10L);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221):102", (int) (byte) 32);
        boolean boolean18 = cassandraHost17.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":97(:97):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1183");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", 2);
        cassandraHost46.setCassandraThriftSocketTimeout((int) (byte) 35);
        cassandraHost46.setMaxFrameSize((int) (short) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, ":97:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1184");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.Set<java.security.Principal> principalSet25 = subject17.getPrincipals();
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet41, principalSet49);
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet72 = subject71.getPrincipals();
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        java.security.Principal[] principalArray76 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet77 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet77, principalArray76);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, principalSet72, (java.util.Set<java.security.Principal>) principalSet74, (java.util.Set<java.security.Principal>) principalSet77);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        java.security.Principal[] principalArray86 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet87 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet87, principalArray86);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(false, principalSet82, (java.util.Set<java.security.Principal>) principalSet84, (java.util.Set<java.security.Principal>) principalSet87);
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet74, principalSet82);
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(true, principalSet25, principalSet58, (java.util.Set<java.security.Principal>) principalSet74);
        boolean boolean92 = cassandraHost14.equals((java.lang.Object) principalSet74);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "112");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1185");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        long long92 = cassandraHost91.getMaxWaitTimeWhenExhausted();
        java.lang.String str93 = cassandraHost91.getHost();
        boolean boolean94 = cassandraHost91.getUseThriftFramedTransport();
        int int95 = cassandraHost91.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1186");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.lang.String str3 = subject0.toString();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (int) (short) 1);
        boolean boolean9 = cassandraHost8.getUseThriftFramedTransport();
        int int10 = cassandraHost8.getCassandraThriftSocketTimeout();
        cassandraHost8.setMaxActive((int) (short) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "127.0.0.1:50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1187");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("251");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1188");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        boolean boolean43 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.208", (int) (short) 62);
        boolean boolean47 = cassandraHost46.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "198");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1189");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("52", (int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "Subject(Subject):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1190");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        java.lang.String str11 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) 52);
        cassandraHost14.setCassandraThriftSocketTimeout((int) (short) 102);
        long long17 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "46");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1191");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str14 = cassandraHost13.getIp();
        int int15 = cassandraHost13.getMaxFrameSize();
        boolean boolean16 = cassandraHost13.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1192");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        java.util.Set<java.lang.Object> objSet23 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean25 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost28 = new me.prettyprint.cassandra.service.CassandraHost("8", 109);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost28, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1193");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.lang.String str10 = subject0.toString();
        boolean boolean12 = subject0.equals((java.lang.Object) "35");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int15 = cassandraHost14.getPort();
        int int16 = cassandraHost14.getCassandraThriftSocketTimeout();
        int int17 = cassandraHost14.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1194");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):-1", (int) (byte) 88);
        int int42 = cassandraHost41.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1195");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):34", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "99(0.0.0.99):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1196");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost("91(0.0.0.91):35");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1197");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost56 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):-1");
        cassandraHost56.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient60 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost56, "107");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient60.equals(null)", !hKerberosThriftClient60.equals(null));
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1198");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        int int12 = cassandraHost7.getMaxActive();
        java.lang.String str13 = cassandraHost7.getUrl();
        cassandraHost7.setMaxActive((int) (short) 10);
        boolean boolean16 = cassandraHost7.isPerformNameResolution();
        cassandraHost7.setMaxWaitTimeWhenExhausted(152L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!(hi!)(hi!(hi!)):98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1199");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        boolean boolean18 = cassandraHost17.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1200");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        boolean boolean54 = subject53.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (short) 99);
        java.lang.String str58 = cassandraHost57.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient60 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost57, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient60.equals(null)", !hKerberosThriftClient60.equals(null));
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1201");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) 'a');
        java.lang.String str10 = cassandraHost9.getHost();
        java.lang.String str11 = cassandraHost9.getIp();
        boolean boolean12 = subject0.equals((java.lang.Object) cassandraHost9);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("103");
        int int15 = cassandraHost14.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "127.0.0.1(127.0.0.1):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1202");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        int int15 = cassandraHost7.getMaxActive();
        boolean boolean16 = cassandraHost7.isPerformNameResolution();
        java.lang.String str17 = cassandraHost7.getName();
        java.lang.String str18 = cassandraHost7.toString();
        int int19 = cassandraHost7.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1203");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long6 = atomicLong4.getAndSet(34L);
        atomicLong4.lazySet(107L);
        boolean boolean9 = subject0.equals((java.lang.Object) atomicLong4);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", 2);
        cassandraHost12.setCassandraThriftSocketTimeout((int) (byte) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1204");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160(", (int) (short) 109);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1205");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("", (-1));
        cassandraHost13.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "9692");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1206");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient81 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost79, "0.0.0.99(0.0.0.99):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient81.equals(null)", !hKerberosThriftClient81.equals(null));
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1207");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject)(Subject(Subject)):9160", 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "Subject(Subject)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1208");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 35);
        java.lang.String str7 = cassandraHost6.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1209");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        cassandraHost85.setUseThriftFramedTransport(true);
        boolean boolean88 = cassandraHost85.getUseThriftFramedTransport();
        boolean boolean89 = cassandraHost85.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient91 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "31(0.0.0.31):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient91.equals(null)", !hKerberosThriftClient91.equals(null));
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1210");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean24 = subject9.equals((java.lang.Object) principalSet16);
        boolean boolean25 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost27.setCassandraThriftSocketTimeout(0);
        cassandraHost27.setUseSocketKeepalive(false);
        cassandraHost27.setUseSocketKeepalive(false);
        int int34 = cassandraHost27.getMaxActive();
        java.lang.String str35 = cassandraHost27.getIp();
        java.lang.String str36 = cassandraHost27.getUrl();
        java.lang.String str37 = cassandraHost27.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost27, "103(0.0.0.103)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1211");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160)", (int) (short) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "103(0.0.0.103)(103(0.0.0.103)):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1212");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int47 = cassandraHost46.getPort();
        java.lang.String str48 = cassandraHost46.toString();
        java.lang.String str49 = cassandraHost46.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, ":9160(:9160):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1213");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        java.lang.String str12 = subject0.toString();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1214");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        java.util.Set<java.lang.Object> objSet55 = subject53.getPublicCredentials();
        java.lang.String str56 = subject53.toString();
        java.util.Set<java.lang.Object> objSet57 = subject53.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost60 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) 35);
        java.lang.String str61 = cassandraHost60.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost60, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1215");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        subject0.setReadOnly();
        boolean boolean16 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", (int) (short) 1);
        boolean boolean20 = cassandraHost19.getUseThriftFramedTransport();
        boolean boolean21 = cassandraHost19.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "8");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1216");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        subject0.setReadOnly();
        java.lang.String str41 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        long long45 = cassandraHost44.getMaxWaitTimeWhenExhausted();
        cassandraHost44.setUseSocketKeepalive(true);
        java.lang.String str48 = cassandraHost44.getHost();
        java.lang.String str49 = cassandraHost44.toString();
        cassandraHost44.setCassandraThriftSocketTimeout(0);
        int int52 = cassandraHost44.getPort();
        java.lang.String str53 = cassandraHost44.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient55 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost44, "hi!(hi!):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient55.equals(null)", !hKerberosThriftClient55.equals(null));
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1217");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        long long10 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        cassandraHost9.setMaxActive(2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "203");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1218");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost40.setCassandraThriftSocketTimeout(0);
        cassandraHost40.setUseSocketKeepalive(false);
        java.lang.String str45 = cassandraHost40.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1219");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        java.lang.String str12 = cassandraHost11.getUrl();
        boolean boolean13 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", 0);
        int int17 = cassandraHost16.getPort();
        boolean boolean18 = cassandraHost16.isPerformNameResolution();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int21 = cassandraHost20.getMaxActive();
        java.lang.String str22 = cassandraHost20.toString();
        cassandraHost20.setMaxActive((int) (short) 101);
        cassandraHost20.setUseThriftFramedTransport(true);
        boolean boolean27 = cassandraHost16.equals((java.lang.Object) cassandraHost20);
        cassandraHost20.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1220");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("1", 2147483647);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong();
        double double8 = atomicLong7.doubleValue();
        int int9 = atomicLong7.intValue();
        float float10 = atomicLong7.floatValue();
        boolean boolean13 = atomicLong7.compareAndSet((long) 2147483647, (-1L));
        long long14 = atomicLong7.get();
        boolean boolean15 = cassandraHost6.equals((java.lang.Object) long14);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "(127.0.0.1)((127.0.0.1)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1221");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.lang.String str83 = subject81.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("hi!", 100);
        long long87 = cassandraHost86.getMaxWaitTimeWhenExhausted();
        cassandraHost86.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost(":9160(", (int) (short) 109);
        int int93 = cassandraHost92.getMaxFrameSize();
        java.lang.String str94 = cassandraHost92.getName();
        boolean boolean95 = cassandraHost86.equals((java.lang.Object) str94);
        int int96 = cassandraHost86.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost86, "103(0.0.0.103):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1222");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        int int41 = cassandraHost40.getPort();
        java.lang.String str42 = cassandraHost40.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1223");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost(":97");
        java.lang.String str92 = cassandraHost91.toString();
        boolean boolean93 = cassandraHost91.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost91, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1224");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost91 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.lang.String str92 = cassandraHost91.getIp();
        int int93 = cassandraHost91.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost91, "Subject(Subject):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1225");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):101", (int) (byte) 104);
        boolean boolean86 = subject81.equals((java.lang.Object) "hi!(hi!):101");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        long long89 = cassandraHost88.getMaxWaitTimeWhenExhausted();
        java.lang.String str90 = cassandraHost88.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost88, "14");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1226");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("107", (int) (short) 2);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "31");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1227");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        boolean boolean38 = subject34.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160:10");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost40, "1(0.0.0.1):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1228");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        boolean boolean14 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", 105);
        java.lang.String str20 = cassandraHost19.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>))(CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>))):49");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1229");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        boolean boolean83 = subject82.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str86 = cassandraHost85.getIp();
        cassandraHost85.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost85.setUseThriftFramedTransport(true);
        boolean boolean91 = subject82.equals((java.lang.Object) true);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean95 = cassandraHost94.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost94, "9693(0.0.37.221):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1230");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("9197", 98);
        cassandraHost17.setCassandraThriftSocketTimeout((int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "91:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1231");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost13.setCassandraThriftSocketTimeout(0);
        cassandraHost13.setUseSocketKeepalive(false);
        int int18 = cassandraHost13.getMaxActive();
        boolean boolean19 = cassandraHost13.getUseThriftFramedTransport();
        long long20 = cassandraHost13.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1232");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("106");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1233");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        java.util.Set<java.security.Principal> principalSet5 = subject2.getPrincipals();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.Set<java.security.Principal> principalSet10 = subject7.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong15 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean16 = cassandraHost13.equals((java.lang.Object) (short) 100);
        int int17 = cassandraHost13.getCassandraThriftSocketTimeout();
        boolean boolean18 = subject7.equals((java.lang.Object) cassandraHost13);
        java.util.Set<java.security.Principal> principalSet19 = subject7.getPrincipals();
        java.util.Set<java.security.Principal> principalSet20 = subject7.getPrincipals();
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean31 = subject21.equals((java.lang.Object) atomicLong30);
        java.util.Set<java.lang.Object> objSet32 = subject21.getPrivateCredentials();
        java.lang.String str33 = subject21.toString();
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        boolean boolean35 = subject34.isReadOnly();
        java.lang.String str36 = subject34.toString();
        java.util.Set<java.security.Principal> principalSet37 = subject34.getPrincipals();
        boolean boolean38 = subject21.equals((java.lang.Object) principalSet37);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(true, principalSet6, principalSet20, principalSet37);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        subject49.setReadOnly();
        boolean boolean51 = subject49.isReadOnly();
        java.util.Set<java.security.Principal> principalSet52 = subject49.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet54 = subject53.getPrincipals();
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(true, principalSet6, principalSet52, principalSet54);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost58 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        cassandraHost58.setMaxActive((-1));
        int int61 = cassandraHost58.getCassandraThriftSocketTimeout();
        cassandraHost58.setCassandraThriftSocketTimeout((int) (short) 10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient65 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject55, cassandraHost58, "135");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient65.equals(null)", !hKerberosThriftClient65.equals(null));
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1234");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        java.lang.String str46 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str49 = cassandraHost48.getIp();
        cassandraHost48.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost48.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str54 = cassandraHost48.getIp();
        cassandraHost48.setMaxFrameSize((int) (short) 99);
        cassandraHost48.setCassandraThriftSocketTimeout(50);
        boolean boolean59 = cassandraHost48.isPerformNameResolution();
        cassandraHost48.setMaxActive((int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient63 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient63.equals(null)", !hKerberosThriftClient63.equals(null));
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1235");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221):9160", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1236");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.security.Principal> principalSet44 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99", (int) (short) 100);
        int int49 = cassandraHost48.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1237");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.security.Principal> principalSet45 = subject38.getPrincipals();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost48.setCassandraThriftSocketTimeout(0);
        cassandraHost48.setUseSocketKeepalive(false);
        boolean boolean53 = cassandraHost48.getUseThriftFramedTransport();
        long long54 = cassandraHost48.getMaxWaitTimeWhenExhausted();
        java.lang.String str55 = cassandraHost48.toString();
        long long56 = cassandraHost48.getMaxWaitTimeWhenExhausted();
        java.lang.String str57 = cassandraHost48.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "hi!(hi!)(hi!(hi!))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1238");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("97", (int) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1239");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("103", 9160);
        int int15 = cassandraHost14.getPort();
        boolean boolean16 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "9957");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1240");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        subject0.setReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost10.setCassandraThriftSocketTimeout(0);
        cassandraHost10.setUseSocketKeepalive(false);
        boolean boolean15 = cassandraHost10.getUseThriftFramedTransport();
        boolean boolean16 = cassandraHost10.getLifo();
        cassandraHost10.setLifo(true);
        boolean boolean19 = cassandraHost10.getLifo();
        boolean boolean20 = cassandraHost10.getLifo();
        boolean boolean21 = cassandraHost10.getUseThriftFramedTransport();
        int int22 = cassandraHost10.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1241");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet33 = subject31.getPrincipals();
        java.lang.String str34 = subject31.toString();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):-1", (int) (short) 49);
        java.lang.String str39 = cassandraHost38.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1242");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean24 = subject9.equals((java.lang.Object) principalSet16);
        boolean boolean25 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost27.setCassandraThriftSocketTimeout(0);
        cassandraHost27.setUseSocketKeepalive(false);
        java.lang.String str32 = cassandraHost27.getIp();
        java.lang.String str33 = cassandraHost27.getUrl();
        cassandraHost27.setMaxFrameSize(10);
        int int36 = cassandraHost27.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient38 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost27, "(127.0.0.1)((127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient38.equals(null)", !hKerberosThriftClient38.equals(null));
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1243");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        int int87 = cassandraHost86.getPort();
        java.lang.String str88 = cassandraHost86.toString();
        cassandraHost86.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int93 = cassandraHost92.getPort();
        java.lang.String str94 = cassandraHost92.toString();
        int int95 = cassandraHost92.getMaxFrameSize();
        boolean boolean96 = cassandraHost86.equals((java.lang.Object) cassandraHost92);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost92, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1244");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean11 = cassandraHost8.equals((java.lang.Object) (short) 100);
        long long12 = cassandraHost8.getMaxWaitTimeWhenExhausted();
        boolean boolean13 = cassandraHost8.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean17 = cassandraHost8.equals((java.lang.Object) cassandraHost16);
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) (short) 35);
        cassandraHost16.setCassandraThriftSocketTimeout(10);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1245");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.lang.Object> objSet7 = subject1.getPrivateCredentials();
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject();
        boolean boolean11 = subject10.isReadOnly();
        java.lang.String str12 = subject10.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong();
        double double14 = atomicLong13.doubleValue();
        long long15 = atomicLong13.incrementAndGet();
        boolean boolean16 = subject10.equals((java.lang.Object) long15);
        java.lang.String str17 = subject10.toString();
        java.util.Set<java.security.Principal> principalSet18 = subject10.getPrincipals();
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        boolean boolean20 = subject19.isReadOnly();
        java.lang.String str21 = subject19.toString();
        java.util.Set<java.security.Principal> principalSet22 = subject19.getPrincipals();
        java.util.Set<java.lang.Object> objSet23 = subject19.getPublicCredentials();
        boolean boolean24 = subject10.equals((java.lang.Object) objSet23);
        java.lang.String str25 = subject10.toString();
        java.util.Set<java.security.Principal> principalSet26 = subject10.getPrincipals();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.lang.String str28 = subject27.toString();
        java.lang.String str29 = subject27.toString();
        java.util.Set<java.lang.Object> objSet30 = subject27.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet31 = subject27.getPrincipals();
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet9, principalSet26, principalSet31);
        java.util.Set<java.lang.Object> objSet33 = subject32.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        cassandraHost36.setUseThriftFramedTransport(true);
        boolean boolean39 = cassandraHost36.getUseThriftFramedTransport();
        long long40 = cassandraHost36.getMaxWaitTimeWhenExhausted();
        cassandraHost36.setMaxActive((int) (byte) 123);
        java.util.concurrent.atomic.AtomicLong atomicLong44 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long46 = atomicLong44.getAndSet(34L);
        long long48 = atomicLong44.addAndGet(101L);
        long long49 = atomicLong44.longValue();
        boolean boolean52 = atomicLong44.compareAndSet(101L, 105L);
        long long53 = atomicLong44.get();
        int int54 = atomicLong44.intValue();
        boolean boolean55 = cassandraHost36.equals((java.lang.Object) int54);
        java.lang.String str56 = cassandraHost36.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject32, cassandraHost36, "147");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1246");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        boolean boolean7 = subject0.isReadOnly();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        cassandraHost11.setMaxFrameSize(1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "91:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1247");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("9492", (int) (byte) 102);
        cassandraHost15.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1248");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 101);
        int int6 = cassandraHost5.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "hi!(hi!)(hi!(hi!)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1249");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        int int42 = cassandraHost38.getCassandraThriftSocketTimeout();
        cassandraHost38.setLifo(false);
        cassandraHost38.setUseSocketKeepalive(false);
        boolean boolean47 = subject31.equals((java.lang.Object) false);
        java.util.Set<java.lang.Object> objSet48 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost51 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong53 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean54 = cassandraHost51.equals((java.lang.Object) (short) 100);
        cassandraHost51.setUseSocketKeepalive(false);
        long long57 = cassandraHost51.getMaxWaitTimeWhenExhausted();
        cassandraHost51.setCassandraThriftSocketTimeout((int) (short) 35);
        java.lang.String str60 = cassandraHost51.getIp();
        cassandraHost51.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient64 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost51, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient64.equals(null)", !hKerberosThriftClient64.equals(null));
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1250");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        java.lang.String str13 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str17 = cassandraHost16.getHost();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) cassandraHost22);
        long long24 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "2147483647");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1251");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet45 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):-1", 2147483647);
        java.lang.String str49 = cassandraHost48.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1252");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean93 = cassandraHost92.getUseSocketKeepalive();
        java.lang.String str94 = cassandraHost92.getUrl();
        cassandraHost92.setMaxFrameSize(100);
        int int97 = cassandraHost92.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost92, "127.0.0.1(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1253");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("31", (int) (short) 35);
        java.lang.String str45 = cassandraHost44.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "(127.0.0.1)((127.0.0.1))((127.0.0.1)((127.0.0.1))):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1254");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        boolean boolean10 = subject0.equals((java.lang.Object) 298.0f);
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        java.lang.String str15 = cassandraHost14.getHost();
        int int16 = cassandraHost14.getMaxActive();
        java.lang.String str17 = cassandraHost14.getHost();
        java.lang.String str18 = cassandraHost14.getUrl();
        java.lang.String str19 = cassandraHost14.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":97(:97)(:97(:97)):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1255");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (byte) 0);
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        java.lang.String str21 = cassandraHost19.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "Subject(Subject):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1256");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) 104);
        int int6 = cassandraHost5.getCassandraThriftSocketTimeout();
        boolean boolean7 = subject0.equals((java.lang.Object) int6);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1257");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):10", (int) (short) 52);
        cassandraHost8.setMaxFrameSize(1);
        boolean boolean11 = cassandraHost8.getLifo();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        cassandraHost16.setCassandraThriftSocketTimeout((int) (short) 10);
        boolean boolean19 = cassandraHost14.equals((java.lang.Object) cassandraHost16);
        boolean boolean20 = cassandraHost8.equals((java.lang.Object) cassandraHost16);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "166");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1258");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.lang.String str42 = subject38.toString();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        java.lang.String str44 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) (byte) 3);
        int int48 = cassandraHost47.getPort();
        int int49 = cassandraHost47.getMaxActive();
        long long50 = cassandraHost47.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, ":97(:97)(:97(:97)):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1259");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str15 = cassandraHost14.getIp();
        cassandraHost14.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost14.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str20 = cassandraHost14.getIp();
        cassandraHost14.setMaxFrameSize((int) (short) 99);
        cassandraHost14.setCassandraThriftSocketTimeout(50);
        boolean boolean25 = cassandraHost14.isPerformNameResolution();
        cassandraHost14.setMaxActive((int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient29 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient29.equals(null)", !hKerberosThriftClient29.equals(null));
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1260");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        java.lang.String str13 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean19 = cassandraHost16.equals((java.lang.Object) (short) 100);
        int int20 = cassandraHost16.getCassandraThriftSocketTimeout();
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "127.0.0.1(127.0.0.1):3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1261");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        java.lang.String str10 = cassandraHost7.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean13 = cassandraHost12.getUseSocketKeepalive();
        boolean boolean14 = cassandraHost7.equals((java.lang.Object) boolean13);
        boolean boolean16 = cassandraHost7.equals((java.lang.Object) (-1L));
        cassandraHost7.setMaxFrameSize((int) (byte) 1);
        cassandraHost7.setUseThriftFramedTransport(false);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject();
        boolean boolean22 = subject21.isReadOnly();
        java.lang.String str23 = subject21.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong24 = new java.util.concurrent.atomic.AtomicLong();
        double double25 = atomicLong24.doubleValue();
        long long26 = atomicLong24.incrementAndGet();
        boolean boolean27 = subject21.equals((java.lang.Object) long26);
        java.lang.String str28 = subject21.toString();
        java.util.Set<java.security.Principal> principalSet29 = subject21.getPrincipals();
        boolean boolean30 = cassandraHost7.equals((java.lang.Object) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        boolean boolean33 = subject32.isReadOnly();
        java.lang.String str34 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject(true, principalSet36, (java.util.Set<java.security.Principal>) principalSet41, principalSet60);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject(false, principalSet5, principalSet29, principalSet60);
        subject62.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost65 = new me.prettyprint.cassandra.service.CassandraHost("103");
        int int66 = cassandraHost65.getPort();
        cassandraHost65.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost65.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient72 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject62, cassandraHost65, "234");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient72.equals(null)", !hKerberosThriftClient72.equals(null));
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1262");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.lang.String str13 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("31", (int) (short) 35);
        java.lang.String str18 = cassandraHost17.getName();
        java.lang.String str19 = cassandraHost17.getHost();
        cassandraHost17.setMaxWaitTimeWhenExhausted((long) 9381);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "hi!:3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1263");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (byte) -1);
        cassandraHost93.setCassandraThriftSocketTimeout((int) (short) 11);
        cassandraHost93.setCassandraThriftSocketTimeout(34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "99(0.0.0.99)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1264");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet17 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        int int21 = cassandraHost19.getCassandraThriftSocketTimeout();
        java.lang.String str22 = cassandraHost19.getName();
        int int23 = cassandraHost19.getCassandraThriftSocketTimeout();
        cassandraHost19.setUseSocketKeepalive(true);
        boolean boolean26 = cassandraHost19.getUseThriftFramedTransport();
        boolean boolean27 = cassandraHost19.getUseThriftFramedTransport();
        int int28 = cassandraHost19.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, ":9160:1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1265");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("9492", 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient7 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient7.equals(null)", !hKerberosThriftClient7.equals(null));
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1266");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "CassandraClient<%s-%d>:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1267");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        java.lang.String str16 = cassandraHost15.getName();
        int int17 = cassandraHost15.getPort();
        boolean boolean18 = cassandraHost15.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost15, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1268");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int40 = cassandraHost39.getPort();
        int int41 = cassandraHost39.getCassandraThriftSocketTimeout();
        int int42 = cassandraHost39.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost39, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1269");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("9693", (int) (short) 9160);
        boolean boolean9 = cassandraHost8.getUseSocketKeepalive();
        java.lang.String str10 = cassandraHost8.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1270");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        java.util.Set<java.lang.Object> objSet12 = subject1.getPrivateCredentials();
        boolean boolean13 = subject1.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject1.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject1.getPrincipals();
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet44 = subject43.getPrincipals();
        java.security.Principal[] principalArray45 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet46 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet46, principalArray45);
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, principalSet44, (java.util.Set<java.security.Principal>) principalSet46, (java.util.Set<java.security.Principal>) principalSet49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet36, principalSet44);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet18, principalSet20, principalSet44);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        boolean boolean55 = subject54.isReadOnly();
        java.lang.String str56 = subject54.toString();
        subject54.setReadOnly();
        java.util.Set<java.security.Principal> principalSet58 = subject54.getPrincipals();
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(true, principalSet15, principalSet44, principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost62 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) (byte) 3);
        int int63 = cassandraHost62.getPort();
        int int64 = cassandraHost62.getMaxActive();
        long long65 = cassandraHost62.getMaxWaitTimeWhenExhausted();
        boolean boolean66 = subject59.equals((java.lang.Object) cassandraHost62);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost69 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 32);
        boolean boolean70 = cassandraHost69.isPerformNameResolution();
        java.lang.String str71 = cassandraHost69.getUrl();
        cassandraHost69.setCassandraThriftSocketTimeout((int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient75 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject59, cassandraHost69, "hi!(hi!)(hi!(hi!)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient75.equals(null)", !hKerberosThriftClient75.equals(null));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1271");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("101:9160", 10);
        boolean boolean21 = cassandraHost20.getUseThriftFramedTransport();
        long long22 = cassandraHost20.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost20, ":9160(:9160)(:9160(:9160)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1272");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", 0);
        boolean boolean47 = cassandraHost46.isPerformNameResolution();
        boolean boolean49 = cassandraHost46.equals((java.lang.Object) "0.0.0.99");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1273");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str41 = cassandraHost40.getIp();
        cassandraHost40.setMaxWaitTimeWhenExhausted((long) 0);
        java.lang.String str44 = cassandraHost40.toString();
        java.lang.String str45 = cassandraHost40.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "97:53");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1274");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1275");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.1");
        int int17 = cassandraHost16.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1276");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.util.Set<java.lang.Object> objSet72 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost75 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong77 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean78 = cassandraHost75.equals((java.lang.Object) (short) 100);
        long long79 = cassandraHost75.getMaxWaitTimeWhenExhausted();
        boolean boolean80 = cassandraHost75.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean84 = cassandraHost75.equals((java.lang.Object) cassandraHost83);
        cassandraHost83.setLifo(true);
        boolean boolean87 = cassandraHost83.getUseThriftFramedTransport();
        boolean boolean88 = cassandraHost83.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient90 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost83, "31:35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient90.equals(null)", !hKerberosThriftClient90.equals(null));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1277");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet15 = subject9.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):0", 98);
        cassandraHost18.setLifo(true);
        int int21 = cassandraHost18.getPort();
        cassandraHost18.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost18, ":9160((:9160():109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1278");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, ":9160(:9160):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1279");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int14 = cassandraHost13.getMaxActive();
        int int15 = cassandraHost13.getMaxActive();
        java.lang.String str16 = cassandraHost13.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1280");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        java.util.Set<java.security.Principal> principalSet91 = subject89.getPrincipals();
        java.util.Set<java.lang.Object> objSet92 = subject89.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet93 = subject89.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (-1));
        boolean boolean97 = cassandraHost96.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost96, "hi!:3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1281");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221)", 63);
        boolean boolean49 = cassandraHost48.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "9649");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1282");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1283");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean43 = cassandraHost42.getUseSocketKeepalive();
        java.lang.String str44 = cassandraHost42.getIp();
        cassandraHost42.setMaxActive(105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "127.0.0.1(127.0.0.1):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1284");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.lang.String str42 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost(":9160", (int) (byte) 100);
        long long46 = cassandraHost45.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "0.0.0.99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1285");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100", 1);
        java.lang.String str16 = cassandraHost15.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "316");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1286");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        java.lang.String str13 = cassandraHost12.toString();
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!)(hi!(hi!))(hi!(hi!)(hi!(hi!))):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1287");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:2147483647");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "64");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1288");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost35.setCassandraThriftSocketTimeout(0);
        cassandraHost35.setUseSocketKeepalive(false);
        java.lang.String str40 = cassandraHost35.getIp();
        cassandraHost35.setUseThriftFramedTransport(false);
        long long43 = cassandraHost35.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost35, ":9160(:9160):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1289");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPublicCredentials();
        boolean boolean38 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost40.setUseThriftFramedTransport(true);
        cassandraHost40.setUseThriftFramedTransport(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, ":97(:97)(:97(:97)):51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1290");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str8 = cassandraHost7.getIp();
        cassandraHost7.setUseThriftFramedTransport(true);
        boolean boolean11 = subject0.equals((java.lang.Object) true);
        java.util.Set<java.lang.Object> objSet12 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("100", 9160);
        int int17 = cassandraHost16.getMaxFrameSize();
        int int18 = cassandraHost16.getMaxActive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1))", (int) (short) 32);
        boolean boolean22 = cassandraHost16.equals((java.lang.Object) cassandraHost21);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1291");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        boolean boolean16 = cassandraHost15.isPerformNameResolution();
        cassandraHost15.setMaxActive(98);
        cassandraHost15.setUseSocketKeepalive(false);
        boolean boolean21 = cassandraHost15.getUseThriftFramedTransport();
        cassandraHost15.setMaxWaitTimeWhenExhausted(10046L);
        java.lang.String str24 = cassandraHost15.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, ":9160(:98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1292");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        boolean boolean40 = subject39.isReadOnly();
        java.lang.String str41 = subject39.toString();
        java.util.Set<java.security.Principal> principalSet42 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet43 = subject39.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        subject75.setReadOnly();
        java.util.Set<java.lang.Object> objSet77 = subject75.getPublicCredentials();
        boolean boolean78 = subject75.isReadOnly();
        java.lang.String str79 = subject75.toString();
        subject75.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject75.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet3, principalSet43, principalSet81);
        subject82.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("");
        boolean boolean86 = cassandraHost85.getUseSocketKeepalive();
        java.lang.String str87 = cassandraHost85.getHost();
        cassandraHost85.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost85.setLifo(true);
        cassandraHost85.setMaxWaitTimeWhenExhausted((long) 101);
        cassandraHost85.setMaxFrameSize(103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost85, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1293");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        cassandraHost15.setUseSocketKeepalive(false);
        java.lang.String str20 = cassandraHost15.getIp();
        java.lang.String str21 = cassandraHost15.getUrl();
        cassandraHost15.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost15.setMaxActive((int) (byte) 100);
        int int26 = cassandraHost15.getMaxFrameSize();
        boolean boolean27 = subject0.equals((java.lang.Object) int26);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost30 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (byte) 11);
        boolean boolean31 = cassandraHost30.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost30, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1294");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPublicCredentials();
        boolean boolean2 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong7 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean8 = cassandraHost5.equals((java.lang.Object) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "hi!:3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1295");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        boolean boolean39 = subject37.isReadOnly();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost42.setCassandraThriftSocketTimeout(0);
        cassandraHost42.setUseSocketKeepalive(false);
        java.lang.String str47 = cassandraHost42.getIp();
        java.lang.String str48 = cassandraHost42.getUrl();
        cassandraHost42.setMaxFrameSize(10);
        int int51 = cassandraHost42.getMaxActive();
        cassandraHost42.setMaxActive((int) (byte) 0);
        java.lang.String str54 = cassandraHost42.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient56 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost42, "158");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient56.equals(null)", !hKerberosThriftClient56.equals(null));
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1296");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("65", 2147483647);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1297");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        java.lang.String str11 = cassandraHost10.getName();
        int int12 = cassandraHost10.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "Subject:0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1298");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("12", (int) (byte) 10);
        boolean boolean7 = cassandraHost6.getUseThriftFramedTransport();
        cassandraHost6.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1299");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean24 = subject9.equals((java.lang.Object) principalSet16);
        java.util.Set<java.lang.Object> objSet25 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("102");
        cassandraHost27.setMaxFrameSize(50);
        cassandraHost27.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost27, "Subject(Subject)(Subject(Subject)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1300");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean38 = cassandraHost37.getUseSocketKeepalive();
        java.lang.String str39 = cassandraHost37.getUrl();
        int int40 = cassandraHost37.getCassandraThriftSocketTimeout();
        int int41 = cassandraHost37.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "9644");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1301");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        cassandraHost14.setUseSocketKeepalive(false);
        int int19 = cassandraHost14.getMaxActive();
        java.lang.String str20 = cassandraHost14.getUrl();
        cassandraHost14.setMaxActive((int) (short) 10);
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        int int24 = cassandraHost14.getMaxActive();
        boolean boolean25 = cassandraHost14.getLifo();
        int int26 = cassandraHost14.getCassandraThriftSocketTimeout();
        int int27 = cassandraHost14.getMaxActive();
        int int28 = cassandraHost14.getPort();
        boolean boolean29 = cassandraHost14.getLifo();
        boolean boolean30 = subject0.equals((java.lang.Object) cassandraHost14);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("9693");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient34 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "(127.0.0.1):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient34.equals(null)", !hKerberosThriftClient34.equals(null));
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1302");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        boolean boolean12 = subject11.isReadOnly();
        java.lang.String str13 = subject11.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong();
        double double15 = atomicLong14.doubleValue();
        long long16 = atomicLong14.incrementAndGet();
        boolean boolean17 = subject11.equals((java.lang.Object) long16);
        java.lang.String str18 = subject11.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean21 = subject11.equals((java.lang.Object) atomicLong20);
        java.util.Set<java.lang.Object> objSet22 = subject11.getPrivateCredentials();
        java.lang.String str23 = subject11.toString();
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        boolean boolean25 = subject24.isReadOnly();
        java.lang.String str26 = subject24.toString();
        java.util.Set<java.security.Principal> principalSet27 = subject24.getPrincipals();
        boolean boolean28 = subject11.equals((java.lang.Object) principalSet27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet31 = subject30.getPrincipals();
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet37 = subject36.getPrincipals();
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, principalSet37, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet42);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet49, principalSet57);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet31, principalSet33, principalSet57);
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet5, principalSet27, principalSet67);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost70 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost70.setCassandraThriftSocketTimeout(0);
        cassandraHost70.setUseSocketKeepalive(false);
        java.lang.String str75 = cassandraHost70.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient77 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject68, cassandraHost70, ":9160(:9160):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient77.equals(null)", !hKerberosThriftClient77.equals(null));
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1303");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10", 2147483647);
        java.lang.String str12 = cassandraHost11.getIp();
        int int13 = cassandraHost11.getMaxFrameSize();
        int int14 = cassandraHost11.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1304");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", (int) (byte) 101);
        java.lang.String str93 = cassandraHost92.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost92, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1305");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost15.setCassandraThriftSocketTimeout(0);
        cassandraHost15.setUseSocketKeepalive(false);
        java.lang.String str20 = cassandraHost15.getIp();
        java.lang.String str21 = cassandraHost15.getUrl();
        cassandraHost15.setCassandraThriftSocketTimeout((int) (short) 35);
        cassandraHost15.setMaxActive((int) (byte) 100);
        int int26 = cassandraHost15.getMaxFrameSize();
        boolean boolean27 = subject0.equals((java.lang.Object) int26);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost30 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1))((127.0.0.1)((127.0.0.1))):2147483647", (int) (short) 203);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost30, ":9160(:9160):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1306");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 100);
        java.lang.String str11 = cassandraHost10.getUrl();
        java.lang.String str12 = cassandraHost10.getIp();
        boolean boolean13 = cassandraHost10.getLifo();
        cassandraHost10.setMaxFrameSize((int) (byte) 32);
        boolean boolean16 = cassandraHost10.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1307");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (byte) 32);
        boolean boolean20 = subject0.equals((java.lang.Object) ":97(:97):9160");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost22 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int23 = cassandraHost22.getPort();
        java.lang.String str24 = cassandraHost22.toString();
        boolean boolean25 = cassandraHost22.getUseThriftFramedTransport();
        cassandraHost22.setMaxActive((int) (byte) 1);
        int int28 = cassandraHost22.getPort();
        int int29 = cassandraHost22.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost22, "198");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1308");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet91 = subject87.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):34", (int) (short) 1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1309");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong37 = new java.util.concurrent.atomic.AtomicLong();
        float float38 = atomicLong37.floatValue();
        long long40 = atomicLong37.getAndSet((long) (short) -1);
        int int41 = atomicLong37.intValue();
        long long43 = atomicLong37.getAndSet(102L);
        boolean boolean44 = subject31.equals((java.lang.Object) long43);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("31:35");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost46, "10148");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1310");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPrivateCredentials();
        boolean boolean91 = subject87.equals((java.lang.Object) "127.0.0.1:10");
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost95 = new me.prettyprint.cassandra.service.CassandraHost(":9160((:9160():98", (int) (byte) -44);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost95, "163");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1311");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.lang.Object> objSet88 = subject87.getPrivateCredentials();
        java.lang.String str89 = subject87.toString();
        java.util.Set<java.lang.Object> objSet90 = subject87.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet91 = subject87.getPrivateCredentials();
        boolean boolean92 = subject87.isReadOnly();
        java.util.Set<java.lang.Object> objSet93 = subject87.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        java.lang.String str97 = cassandraHost96.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost96, "Subject(Subject):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1312");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("0", (int) 'a');
        cassandraHost37.setUseThriftFramedTransport(true);
        cassandraHost37.setMaxActive(12);
        java.lang.String str42 = cassandraHost37.getUrl();
        long long43 = cassandraHost37.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1313");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("234", (int) (byte) -121);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "64");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1314");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost45 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) '4');
        boolean boolean46 = cassandraHost45.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost45, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1315");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        subject53.setReadOnly();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        boolean boolean57 = subject56.isReadOnly();
        java.lang.String str58 = subject56.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong59 = new java.util.concurrent.atomic.AtomicLong();
        double double60 = atomicLong59.doubleValue();
        long long61 = atomicLong59.incrementAndGet();
        boolean boolean62 = subject56.equals((java.lang.Object) long61);
        java.lang.String str63 = subject56.toString();
        java.util.Set<java.lang.Object> objSet64 = subject56.getPrivateCredentials();
        boolean boolean65 = subject56.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost67 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost67.setCassandraThriftSocketTimeout(0);
        cassandraHost67.setUseSocketKeepalive(false);
        int int72 = cassandraHost67.getPort();
        cassandraHost67.setLifo(false);
        int int75 = cassandraHost67.getPort();
        boolean boolean76 = cassandraHost67.getUseThriftFramedTransport();
        java.lang.String str77 = cassandraHost67.getName();
        boolean boolean78 = subject56.equals((java.lang.Object) cassandraHost67);
        int int79 = cassandraHost67.getMaxActive();
        cassandraHost67.setCassandraThriftSocketTimeout(34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient83 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost67, "9");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient83.equals(null)", !hKerberosThriftClient83.equals(null));
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1316");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        java.lang.String str12 = cassandraHost9.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost9.equals((java.lang.Object) boolean15);
        int int17 = cassandraHost9.getMaxActive();
        boolean boolean18 = cassandraHost9.isPerformNameResolution();
        java.lang.String str19 = cassandraHost9.getName();
        java.lang.String str20 = cassandraHost9.getHost();
        java.lang.String str21 = cassandraHost9.getHost();
        long long22 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1317");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        java.util.Set<java.lang.Object> objSet80 = subject78.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet81 = subject78.getPrincipals();
        subject78.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99(0.0.0.99):100", (int) 'a');
        java.lang.String str86 = cassandraHost85.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient88 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost85, "hi!:3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient88.equals(null)", !hKerberosThriftClient88.equals(null));
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1318");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) 'a');
        java.lang.String str18 = cassandraHost17.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1319");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        boolean boolean14 = subject0.isReadOnly();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        boolean boolean16 = subject15.isReadOnly();
        java.lang.String str17 = subject15.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong();
        double double19 = atomicLong18.doubleValue();
        long long20 = atomicLong18.incrementAndGet();
        boolean boolean21 = subject15.equals((java.lang.Object) long20);
        java.lang.String str22 = subject15.toString();
        java.util.Set<java.lang.Object> objSet23 = subject15.getPrivateCredentials();
        boolean boolean24 = subject15.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost26 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost26.setCassandraThriftSocketTimeout(0);
        cassandraHost26.setUseSocketKeepalive(false);
        int int31 = cassandraHost26.getPort();
        cassandraHost26.setLifo(false);
        int int34 = cassandraHost26.getPort();
        boolean boolean35 = cassandraHost26.getUseThriftFramedTransport();
        java.lang.String str36 = cassandraHost26.getName();
        boolean boolean37 = subject15.equals((java.lang.Object) cassandraHost26);
        boolean boolean38 = cassandraHost26.getUseSocketKeepalive();
        cassandraHost26.setMaxActive((int) (byte) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost26, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1320");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.util.Set<java.lang.Object> objSet72 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost74 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean75 = cassandraHost74.getUseSocketKeepalive();
        int int76 = cassandraHost74.getPort();
        boolean boolean77 = cassandraHost74.getUseSocketKeepalive();
        int int78 = cassandraHost74.getPort();
        int int79 = cassandraHost74.getMaxFrameSize();
        int int80 = cassandraHost74.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost74, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1321");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean14 = subject0.equals((java.lang.Object) 10L);
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103)", (int) ' ');
        java.lang.String str19 = cassandraHost18.getUrl();
        cassandraHost18.setMaxActive(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "Subject(Subject):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1322");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.util.Set<java.lang.Object> objSet41 = subject39.getPublicCredentials();
        subject39.setReadOnly();
        subject39.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet45 = subject39.getPrincipals();
        java.util.Set<java.security.Principal> principalSet46 = subject39.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.lang.String str55 = subject47.toString();
        java.util.Set<java.lang.Object> objSet56 = subject47.getPublicCredentials();
        java.lang.String str57 = subject47.toString();
        boolean boolean58 = subject47.isReadOnly();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.security.Principal> principalSet60 = subject47.getPrincipals();
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        boolean boolean62 = subject61.isReadOnly();
        java.lang.String str63 = subject61.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong64 = new java.util.concurrent.atomic.AtomicLong();
        double double65 = atomicLong64.doubleValue();
        long long66 = atomicLong64.incrementAndGet();
        boolean boolean67 = subject61.equals((java.lang.Object) long66);
        java.lang.String str68 = subject61.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong70 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean71 = subject61.equals((java.lang.Object) atomicLong70);
        java.util.Set<java.lang.Object> objSet72 = subject61.getPrivateCredentials();
        boolean boolean73 = subject61.isReadOnly();
        java.util.Set<java.security.Principal> principalSet74 = subject61.getPrincipals();
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet46, principalSet60, principalSet74);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost77.setCassandraThriftSocketTimeout(10);
        java.lang.String str80 = cassandraHost77.getName();
        boolean boolean81 = cassandraHost77.getUseThriftFramedTransport();
        boolean boolean82 = cassandraHost77.getLifo();
        cassandraHost77.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost77, ":9160:99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1323");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet32 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost35 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong37 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean38 = cassandraHost35.equals((java.lang.Object) (short) 100);
        long long39 = cassandraHost35.getMaxWaitTimeWhenExhausted();
        boolean boolean40 = cassandraHost35.getUseThriftFramedTransport();
        cassandraHost35.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost35.setUseSocketKeepalive(false);
        int int45 = cassandraHost35.getCassandraThriftSocketTimeout();
        int int46 = cassandraHost35.getCassandraThriftSocketTimeout();
        java.lang.String str47 = cassandraHost35.toString();
        int int48 = cassandraHost35.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost35, ":9160(:9160)(:9160(:9160)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1324");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (short) -1);
        int int86 = cassandraHost85.getCassandraThriftSocketTimeout();
        boolean boolean87 = subject82.equals((java.lang.Object) int86);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int90 = cassandraHost89.getPort();
        java.lang.String str91 = cassandraHost89.toString();
        boolean boolean92 = cassandraHost89.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost89, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1325");
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject(false, principalSet5, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet10);
        javax.security.auth.Subject subject14 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet15 = subject14.getPrincipals();
        java.security.Principal[] principalArray16 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet17 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet17, principalArray16);
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject(false, principalSet15, (java.util.Set<java.security.Principal>) principalSet17, (java.util.Set<java.security.Principal>) principalSet20);
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet17, principalSet25);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet37 = subject36.getPrincipals();
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, principalSet37, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet42);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet49, principalSet57);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet57, (java.util.Set<java.security.Principal>) principalSet70);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject();
        boolean boolean78 = subject77.isReadOnly();
        java.lang.String str79 = subject77.toString();
        subject77.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject77.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject();
        boolean boolean83 = subject82.isReadOnly();
        java.lang.String str84 = subject82.toString();
        subject82.setReadOnly();
        java.util.Set<java.security.Principal> principalSet86 = subject82.getPrincipals();
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet81, principalSet86);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.1", (int) (byte) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "(127.0.0.1)((127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1326");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getMaxActive();
        boolean boolean17 = cassandraHost11.getUseThriftFramedTransport();
        long long18 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        cassandraHost11.setMaxWaitTimeWhenExhausted(136L);
        java.lang.String str21 = cassandraHost11.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "444");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1327");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean11 = cassandraHost8.equals((java.lang.Object) (short) 100);
        cassandraHost8.setUseSocketKeepalive(false);
        long long14 = cassandraHost8.getMaxWaitTimeWhenExhausted();
        cassandraHost8.setMaxActive((int) '4');
        int int17 = cassandraHost8.getMaxFrameSize();
        java.lang.String str18 = cassandraHost8.getIp();
        boolean boolean19 = cassandraHost8.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1328");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)");
        cassandraHost18.setMaxActive((int) (short) 162);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "(127.0.0.1)((127.0.0.1)):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1329");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        boolean boolean14 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost19.setCassandraThriftSocketTimeout(0);
        java.lang.String str22 = cassandraHost19.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean25 = cassandraHost24.getUseSocketKeepalive();
        boolean boolean26 = cassandraHost19.equals((java.lang.Object) boolean25);
        int int27 = cassandraHost19.getMaxFrameSize();
        int int28 = cassandraHost19.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "4");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1330");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("hi!");
        int int5 = cassandraHost4.getMaxActive();
        cassandraHost4.setMaxActive((int) (byte) 86);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "9957");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1331");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):-1", 34);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", 1);
        int int44 = cassandraHost43.getCassandraThriftSocketTimeout();
        boolean boolean45 = cassandraHost40.equals((java.lang.Object) int44);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "127.0.0.1(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1332");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong(112L);
        boolean boolean4 = subject0.equals((java.lang.Object) 112L);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost6.setCassandraThriftSocketTimeout(0);
        java.lang.String str9 = cassandraHost6.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean12 = cassandraHost11.getUseSocketKeepalive();
        boolean boolean13 = cassandraHost6.equals((java.lang.Object) boolean12);
        int int14 = cassandraHost6.getMaxActive();
        cassandraHost6.setMaxFrameSize((int) 'a');
        boolean boolean17 = cassandraHost6.getUseSocketKeepalive();
        cassandraHost6.setUseSocketKeepalive(false);
        java.lang.String str20 = cassandraHost6.getUrl();
        cassandraHost6.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "0.0.0.99(0.0.0.99)(0.0.0.99(0.0.0.99)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1333");
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        java.security.Principal[] principalArray5 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet6 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet6, principalArray5);
        java.security.Principal[] principalArray8 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet9 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet9, principalArray8);
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject(false, principalSet4, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet9);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet6, (java.util.Set<java.security.Principal>) principalSet16, principalSet24);
        subject32.setReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject32.getPublicCredentials();
        boolean boolean35 = subject32.isReadOnly();
        java.lang.String str36 = subject32.toString();
        subject32.setReadOnly();
        java.util.Set<java.security.Principal> principalSet38 = subject32.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        subject70.setReadOnly();
        java.util.Set<java.lang.Object> objSet72 = subject70.getPublicCredentials();
        java.lang.String str73 = subject70.toString();
        java.util.Set<java.security.Principal> principalSet74 = subject70.getPrincipals();
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject();
        boolean boolean76 = subject75.isReadOnly();
        java.lang.String str77 = subject75.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong78 = new java.util.concurrent.atomic.AtomicLong();
        double double79 = atomicLong78.doubleValue();
        long long80 = atomicLong78.incrementAndGet();
        boolean boolean81 = subject75.equals((java.lang.Object) long80);
        java.lang.String str82 = subject75.toString();
        java.lang.String str83 = subject75.toString();
        java.util.Set<java.security.Principal> principalSet84 = subject75.getPrincipals();
        javax.security.auth.Subject subject85 = new javax.security.auth.Subject(true, principalSet38, principalSet74, principalSet84);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 100);
        boolean boolean89 = cassandraHost88.getUseThriftFramedTransport();
        cassandraHost88.setMaxWaitTimeWhenExhausted((long) (short) -1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject85, cassandraHost88, "101(0.0.0.101):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1334");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        java.util.Set<java.security.Principal> principalSet78 = subject76.getPrincipals();
        boolean boolean79 = cassandraHost44.equals((java.lang.Object) subject76);
        java.lang.String str80 = cassandraHost44.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1335");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost3 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str4 = cassandraHost3.getName();
        cassandraHost3.setCassandraThriftSocketTimeout(10);
        java.lang.String str7 = cassandraHost3.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost3, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1336");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost78 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 0);
        boolean boolean79 = cassandraHost78.isPerformNameResolution();
        boolean boolean80 = cassandraHost78.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient82 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost78, ":97(:97):2");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient82.equals(null)", !hKerberosThriftClient82.equals(null));
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1337");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet11 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        java.lang.String str17 = cassandraHost14.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        boolean boolean21 = cassandraHost14.equals((java.lang.Object) boolean20);
        int int22 = cassandraHost14.getMaxActive();
        boolean boolean23 = cassandraHost14.isPerformNameResolution();
        cassandraHost14.setMaxWaitTimeWhenExhausted((long) (short) 35);
        cassandraHost14.setCassandraThriftSocketTimeout((int) '4');
        java.lang.String str28 = cassandraHost14.getName();
        int int29 = cassandraHost14.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, ":97(:97):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1338");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "104");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1339");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str13 = cassandraHost12.getIp();
        cassandraHost12.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost12.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str18 = cassandraHost12.getIp();
        cassandraHost12.setMaxFrameSize((int) (short) 99);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1340");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        boolean boolean8 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!)):102");
        int int11 = cassandraHost10.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "(127.0.0.1):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1341");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost37.setCassandraThriftSocketTimeout(0);
        cassandraHost37.setUseSocketKeepalive(false);
        boolean boolean42 = cassandraHost37.getUseThriftFramedTransport();
        boolean boolean43 = cassandraHost37.getLifo();
        cassandraHost37.setMaxFrameSize((int) (byte) 98);
        cassandraHost37.setMaxWaitTimeWhenExhausted(151L);
        cassandraHost37.setCassandraThriftSocketTimeout(9381);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1342");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost32.setMaxActive((int) 'a');
        int int35 = cassandraHost32.getMaxFrameSize();
        cassandraHost32.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "9693");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1343");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        long long10 = cassandraHost6.getMaxWaitTimeWhenExhausted();
        boolean boolean11 = cassandraHost6.getUseThriftFramedTransport();
        java.lang.String str12 = cassandraHost6.getHost();
        boolean boolean13 = cassandraHost6.getLifo();
        java.lang.String str14 = cassandraHost6.getName();
        cassandraHost6.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1344");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject1.getPrincipals();
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet25, principalSet33);
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet66 = subject65.getPrincipals();
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, principalSet66, (java.util.Set<java.security.Principal>) principalSet68, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet58, principalSet66);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(true, principalSet9, principalSet42, (java.util.Set<java.security.Principal>) principalSet58);
        subject75.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost79 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int80 = cassandraHost79.getMaxActive();
        cassandraHost79.setLifo(true);
        cassandraHost79.setLifo(true);
        int int85 = cassandraHost79.getPort();
        boolean boolean86 = subject75.equals((java.lang.Object) int85);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", 3);
        boolean boolean90 = subject75.equals((java.lang.Object) "Subject:9160");
        java.lang.String str91 = subject75.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", 0);
        boolean boolean95 = cassandraHost94.isPerformNameResolution();
        java.lang.String str96 = cassandraHost94.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject75, cassandraHost94, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1345");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.lang.String str72 = subject71.toString();
        java.util.Set<java.lang.Object> objSet73 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):35", (int) '#');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost76, "316");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1346");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.lang.String str10 = subject0.toString();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str16 = cassandraHost15.getHost();
        int int17 = cassandraHost15.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1347");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        java.lang.String str38 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (short) 0);
        int int42 = cassandraHost41.getMaxActive();
        java.lang.String str43 = cassandraHost41.getUrl();
        cassandraHost41.setLifo(false);
        java.lang.String str46 = cassandraHost41.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "127.0.0.1:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1348");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str9 = cassandraHost8.getIp();
        int int10 = cassandraHost8.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, ":1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1349");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        java.lang.String str72 = subject71.toString();
        java.util.Set<java.lang.Object> objSet73 = subject71.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost("151", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost76, "hi!(hi!)(hi!(hi!)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1350");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        boolean boolean42 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        java.lang.String str44 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("Subject:9160", 37);
        long long48 = cassandraHost47.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "1(0.0.0.1):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1351");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        java.lang.String str40 = subject0.toString();
        java.util.Set<java.lang.Object> objSet41 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("");
        java.lang.String str44 = cassandraHost43.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost43, "316");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1352");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.lang.String str42 = subject38.toString();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        java.lang.String str44 = subject38.toString();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("31", 9160);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost49, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1353");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        boolean boolean44 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("0(0.0.0.0):9160", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "Subject:\n");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1354");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean24 = subject9.equals((java.lang.Object) principalSet16);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        boolean boolean26 = subject25.isReadOnly();
        java.lang.String str27 = subject25.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong28 = new java.util.concurrent.atomic.AtomicLong();
        double double29 = atomicLong28.doubleValue();
        long long30 = atomicLong28.incrementAndGet();
        boolean boolean31 = subject25.equals((java.lang.Object) long30);
        java.lang.String str32 = subject25.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong34 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean35 = subject25.equals((java.lang.Object) atomicLong34);
        java.util.Set<java.lang.Object> objSet36 = subject25.getPrivateCredentials();
        boolean boolean37 = subject25.isReadOnly();
        java.util.Set<java.security.Principal> principalSet38 = subject25.getPrincipals();
        subject25.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        java.lang.String str44 = cassandraHost41.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean47 = cassandraHost46.getUseSocketKeepalive();
        boolean boolean48 = cassandraHost41.equals((java.lang.Object) boolean47);
        int int49 = cassandraHost41.getMaxActive();
        boolean boolean50 = cassandraHost41.getUseSocketKeepalive();
        java.lang.String str51 = cassandraHost41.getUrl();
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        boolean boolean53 = subject52.isReadOnly();
        java.lang.String str54 = subject52.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong55 = new java.util.concurrent.atomic.AtomicLong();
        double double56 = atomicLong55.doubleValue();
        long long57 = atomicLong55.incrementAndGet();
        boolean boolean58 = subject52.equals((java.lang.Object) long57);
        java.lang.String str59 = subject52.toString();
        java.lang.String str60 = subject52.toString();
        boolean boolean61 = subject52.isReadOnly();
        boolean boolean62 = cassandraHost41.equals((java.lang.Object) boolean61);
        boolean boolean63 = subject25.equals((java.lang.Object) boolean62);
        java.util.Set<java.security.Principal> principalSet64 = subject25.getPrincipals();
        java.util.Set<java.lang.Object> objSet65 = subject25.getPublicCredentials();
        boolean boolean66 = subject9.equals((java.lang.Object) subject25);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost68 = new me.prettyprint.cassandra.service.CassandraHost("-1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient70 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject25, cassandraHost68, "hi!(hi!)(hi!(hi!)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient70.equals(null)", !hKerberosThriftClient70.equals(null));
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1355");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost86 = new me.prettyprint.cassandra.service.CassandraHost("99", 100);
        java.lang.String str87 = cassandraHost86.getIp();
        cassandraHost86.setMaxWaitTimeWhenExhausted(204L);
        boolean boolean90 = cassandraHost86.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient92 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost86, "14");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient92.equals(null)", !hKerberosThriftClient92.equals(null));
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1356");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("", 101);
        long long47 = cassandraHost46.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "445");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1357");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        java.lang.String str14 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean17 = cassandraHost16.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost11.equals((java.lang.Object) boolean17);
        int int19 = cassandraHost11.getMaxActive();
        boolean boolean20 = cassandraHost11.getUseSocketKeepalive();
        java.lang.String str21 = cassandraHost11.getUrl();
        cassandraHost11.setCassandraThriftSocketTimeout((int) (byte) 1);
        cassandraHost11.setUseSocketKeepalive(true);
        java.lang.String str26 = cassandraHost11.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost28 = new me.prettyprint.cassandra.service.CassandraHost("99");
        boolean boolean29 = cassandraHost28.getUseThriftFramedTransport();
        boolean boolean30 = cassandraHost28.getUseThriftFramedTransport();
        boolean boolean31 = cassandraHost11.equals((java.lang.Object) boolean30);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "127.0.0.1(127.0.0.1):3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1358");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        subject53.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost57 = new me.prettyprint.cassandra.service.CassandraHost("3");
        cassandraHost57.setMaxActive((int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost57, ":9160:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1359");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        long long16 = cassandraHost12.getMaxWaitTimeWhenExhausted();
        boolean boolean17 = cassandraHost12.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean21 = cassandraHost12.equals((java.lang.Object) cassandraHost20);
        cassandraHost20.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        cassandraHost20.setMaxWaitTimeWhenExhausted((long) (short) 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "14");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1360");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)(:97(:97)):10", (int) (short) 34);
        cassandraHost6.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "(127.0.0.1)((127.0.0.1)):3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1361");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):100", (int) (short) 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "101:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1362");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong40 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean41 = cassandraHost38.equals((java.lang.Object) (short) 100);
        int int42 = cassandraHost38.getCassandraThriftSocketTimeout();
        cassandraHost38.setLifo(false);
        cassandraHost38.setUseSocketKeepalive(false);
        boolean boolean47 = subject31.equals((java.lang.Object) false);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int51 = cassandraHost50.getMaxActive();
        cassandraHost50.setMaxFrameSize(2);
        long long54 = cassandraHost50.getMaxWaitTimeWhenExhausted();
        boolean boolean55 = cassandraHost50.getLifo();
        long long56 = cassandraHost50.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost50, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1363");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        java.lang.String str46 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("12", (int) (byte) 50);
        cassandraHost49.setCassandraThriftSocketTimeout(135);
        boolean boolean52 = cassandraHost49.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost49, "hi!(hi!):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1364");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet2 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        boolean boolean11 = cassandraHost4.equals((java.lang.Object) boolean10);
        boolean boolean13 = cassandraHost4.equals((java.lang.Object) (-1L));
        cassandraHost4.setMaxFrameSize((int) (byte) 1);
        cassandraHost4.setUseThriftFramedTransport(false);
        boolean boolean18 = subject0.equals((java.lang.Object) false);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 50);
        cassandraHost21.setUseThriftFramedTransport(false);
        boolean boolean24 = cassandraHost21.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "91(0.0.0.91)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1365");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("Subject");
        boolean boolean16 = subject9.equals((java.lang.Object) "Subject");
        subject9.setReadOnly();
        subject9.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        int int22 = cassandraHost21.getPort();
        java.lang.String str23 = cassandraHost21.getIp();
        cassandraHost21.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost21, "151");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1366");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        boolean boolean11 = subject9.isReadOnly();
        boolean boolean12 = subject9.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject9.getPrincipals();
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost17.setCassandraThriftSocketTimeout(0);
        java.lang.String str20 = cassandraHost17.getUrl();
        long long21 = cassandraHost17.getMaxWaitTimeWhenExhausted();
        cassandraHost17.setMaxFrameSize((int) (short) 100);
        java.lang.String str24 = cassandraHost17.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1367");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 32);
        boolean boolean42 = cassandraHost41.getLifo();
        java.lang.String str43 = cassandraHost41.getName();
        int int44 = cassandraHost41.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "hi!(hi!)(hi!(hi!)):98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1368");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str12 = cassandraHost11.getIp();
        int int13 = cassandraHost11.getMaxFrameSize();
        boolean boolean14 = cassandraHost11.getLifo();
        cassandraHost11.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "533");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1369");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("9179", (int) (byte) -1);
        cassandraHost8.setMaxActive((int) (byte) 32);
        int int11 = cassandraHost8.getMaxFrameSize();
        boolean boolean12 = cassandraHost8.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "65");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1370");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) 'a');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "101:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1371");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("9649", 0);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost15.isPerformNameResolution();
        long long18 = cassandraHost15.getMaxWaitTimeWhenExhausted();
        boolean boolean19 = cassandraHost12.equals((java.lang.Object) cassandraHost15);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "hi!(hi!)(hi!(hi!)):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1372");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        java.util.Set<java.security.Principal> principalSet83 = subject81.getPrincipals();
        java.util.Set<java.lang.Object> objSet84 = subject81.getPublicCredentials();
        boolean boolean85 = subject81.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int89 = cassandraHost88.getMaxActive();
        cassandraHost88.setMaxFrameSize(2);
        long long92 = cassandraHost88.getMaxWaitTimeWhenExhausted();
        boolean boolean93 = cassandraHost88.getLifo();
        int int94 = cassandraHost88.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost88, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1373");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean42 = subject38.equals((java.lang.Object) 103.0f);
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        boolean boolean46 = subject44.isReadOnly();
        java.util.Set<java.lang.Object> objSet47 = subject44.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet48 = subject44.getPublicCredentials();
        boolean boolean49 = subject38.equals((java.lang.Object) subject44);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost51 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        cassandraHost51.setMaxActive((int) 'a');
        int int54 = cassandraHost51.getMaxFrameSize();
        java.lang.String str55 = cassandraHost51.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient57 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject44, cassandraHost51, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient57.equals(null)", !hKerberosThriftClient57.equals(null));
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1374");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        boolean boolean11 = cassandraHost9.isPerformNameResolution();
        long long12 = cassandraHost9.getMaxWaitTimeWhenExhausted();
        cassandraHost9.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient16 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient16.equals(null)", !hKerberosThriftClient16.equals(null));
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1375");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean13 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("9179");
        boolean boolean17 = subject0.equals((java.lang.Object) "9179");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost19.setCassandraThriftSocketTimeout(0);
        java.lang.String str22 = cassandraHost19.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost24 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean25 = cassandraHost24.getUseSocketKeepalive();
        boolean boolean26 = cassandraHost19.equals((java.lang.Object) boolean25);
        int int27 = cassandraHost19.getMaxActive();
        cassandraHost19.setMaxFrameSize((int) 'a');
        boolean boolean30 = cassandraHost19.getUseSocketKeepalive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost32.setCassandraThriftSocketTimeout(0);
        cassandraHost32.setUseSocketKeepalive(false);
        int int37 = cassandraHost32.getPort();
        java.lang.String str38 = cassandraHost32.toString();
        int int39 = cassandraHost32.getMaxActive();
        java.lang.String str40 = cassandraHost32.toString();
        boolean boolean41 = cassandraHost19.equals((java.lang.Object) str40);
        java.lang.String str42 = cassandraHost19.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1376");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        boolean boolean9 = subject8.isReadOnly();
        java.lang.String str10 = subject8.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong11 = new java.util.concurrent.atomic.AtomicLong();
        double double12 = atomicLong11.doubleValue();
        long long13 = atomicLong11.incrementAndGet();
        boolean boolean14 = subject8.equals((java.lang.Object) long13);
        subject8.setReadOnly();
        java.util.Set<java.security.Principal> principalSet16 = subject8.getPrincipals();
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet21 = subject20.getPrincipals();
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.security.Principal[] principalArray36 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet37 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet37, principalArray36);
        java.security.Principal[] principalArray39 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet40 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet40, principalArray39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, principalSet35, (java.util.Set<java.security.Principal>) principalSet37, (java.util.Set<java.security.Principal>) principalSet40);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet45 = subject44.getPrincipals();
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject(false, principalSet45, (java.util.Set<java.security.Principal>) principalSet47, (java.util.Set<java.security.Principal>) principalSet50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet37, principalSet45);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet19, principalSet21, principalSet45);
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(true, principalSet7, principalSet16, principalSet55);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost59 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):-1", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient61 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject56, cassandraHost59, "444");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient61.equals(null)", !hKerberosThriftClient61.equals(null));
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1377");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", 9160);
        boolean boolean38 = cassandraHost37.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "9693(0.0.37.221):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1378");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        boolean boolean72 = subject71.isReadOnly();
        java.lang.String str73 = subject71.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160", (int) (short) 99);
        int int77 = cassandraHost76.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient79 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost76, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient79.equals(null)", !hKerberosThriftClient79.equals(null));
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1379");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        boolean boolean39 = subject31.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97)", (int) (short) 65);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient44 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "184");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient44.equals(null)", !hKerberosThriftClient44.equals(null));
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1380");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost42.setCassandraThriftSocketTimeout(0);
        cassandraHost42.setUseSocketKeepalive(false);
        int int47 = cassandraHost42.getMaxActive();
        boolean boolean48 = cassandraHost42.getUseThriftFramedTransport();
        long long49 = cassandraHost42.getMaxWaitTimeWhenExhausted();
        cassandraHost42.setMaxWaitTimeWhenExhausted(136L);
        java.lang.String str52 = cassandraHost42.getName();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient54 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost42, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient54.equals(null)", !hKerberosThriftClient54.equals(null));
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1381");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost39 = new me.prettyprint.cassandra.service.CassandraHost("46");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost39, "3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1382");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean14 = cassandraHost13.getUseSocketKeepalive();
        java.lang.String str15 = cassandraHost13.getIp();
        cassandraHost13.setMaxActive(105);
        cassandraHost13.setLifo(false);
        boolean boolean20 = cassandraHost13.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, "112");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1383");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean13 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean17 = cassandraHost15.getUseSocketKeepalive();
        boolean boolean18 = cassandraHost15.getUseThriftFramedTransport();
        cassandraHost15.setCassandraThriftSocketTimeout((int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1384");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet14 = subject13.getPrincipals();
        java.security.Principal[] principalArray15 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet16 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet16, principalArray15);
        java.security.Principal[] principalArray18 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet19 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet19, principalArray18);
        javax.security.auth.Subject subject21 = new javax.security.auth.Subject(false, principalSet14, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet19);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        java.security.Principal[] principalArray25 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet26 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet26, principalArray25);
        java.security.Principal[] principalArray28 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet29 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet29, principalArray28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, principalSet24, (java.util.Set<java.security.Principal>) principalSet26, (java.util.Set<java.security.Principal>) principalSet29);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet34 = subject33.getPrincipals();
        java.security.Principal[] principalArray35 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet36 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet36, principalArray35);
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject(false, principalSet34, (java.util.Set<java.security.Principal>) principalSet36, (java.util.Set<java.security.Principal>) principalSet39);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet16, (java.util.Set<java.security.Principal>) principalSet26, principalSet34);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject();
        boolean boolean44 = subject43.isReadOnly();
        java.lang.String str45 = subject43.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong46 = new java.util.concurrent.atomic.AtomicLong();
        double double47 = atomicLong46.doubleValue();
        long long48 = atomicLong46.incrementAndGet();
        boolean boolean49 = subject43.equals((java.lang.Object) long48);
        java.lang.String str50 = subject43.toString();
        java.lang.String str51 = subject43.toString();
        java.util.Set<java.security.Principal> principalSet52 = subject43.getPrincipals();
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet26, principalSet52);
        subject53.setReadOnly();
        java.util.Set<java.lang.Object> objSet55 = subject53.getPublicCredentials();
        java.lang.String str56 = subject53.toString();
        java.util.Set<java.lang.Object> objSet57 = subject53.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost60 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int61 = cassandraHost60.getMaxActive();
        cassandraHost60.setLifo(true);
        long long64 = cassandraHost60.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient66 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject53, cassandraHost60, "522");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient66.equals(null)", !hKerberosThriftClient66.equals(null));
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1385");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))(hi!(hi!)(hi!(hi!))):0", (int) (short) 11);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "hi!:3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1386");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("100", 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1387");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.security.Principal> principalSet44 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost47 = new me.prettyprint.cassandra.service.CassandraHost("1", (int) 'a');
        boolean boolean48 = cassandraHost47.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost47, "164");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1388");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("251", (int) (byte) 103);
        boolean boolean86 = subject82.equals((java.lang.Object) cassandraHost85);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost88 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean89 = cassandraHost88.isPerformNameResolution();
        long long90 = cassandraHost88.getMaxWaitTimeWhenExhausted();
        cassandraHost88.setCassandraThriftSocketTimeout((int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost88, ":9160(:9160):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1389");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("9381:52", (int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1390");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        java.lang.String str7 = cassandraHost4.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean10 = cassandraHost9.getUseSocketKeepalive();
        boolean boolean11 = cassandraHost4.equals((java.lang.Object) boolean10);
        int int12 = cassandraHost4.getMaxActive();
        java.lang.String str13 = cassandraHost4.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, ":9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1391");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost4 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost4.setCassandraThriftSocketTimeout(0);
        cassandraHost4.setUseSocketKeepalive(false);
        java.lang.String str9 = cassandraHost4.getIp();
        java.lang.String str10 = cassandraHost4.getUrl();
        cassandraHost4.setMaxFrameSize(10);
        cassandraHost4.setLifo(true);
        cassandraHost4.setLifo(true);
        java.lang.String str17 = cassandraHost4.getHost();
        java.lang.String str18 = cassandraHost4.getIp();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost4, "hi!(hi!):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1392");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        boolean boolean2 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (byte) 102);
        cassandraHost6.setMaxActive((int) (byte) -105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "158");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1393");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        subject9.setReadOnly();
        java.lang.String str13 = subject9.toString();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean24 = subject9.equals((java.lang.Object) principalSet16);
        java.util.Set<java.lang.Object> objSet25 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100");
        long long28 = cassandraHost27.getMaxWaitTimeWhenExhausted();
        boolean boolean29 = cassandraHost27.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient31 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost27, ":97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient31.equals(null)", !hKerberosThriftClient31.equals(null));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1394");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost(":97", (int) (byte) 100);
        cassandraHost9.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "(127.0.0.1):1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1395");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        java.lang.String str15 = cassandraHost12.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        boolean boolean19 = cassandraHost12.equals((java.lang.Object) boolean18);
        boolean boolean21 = cassandraHost12.equals((java.lang.Object) (-1L));
        cassandraHost12.setMaxFrameSize((int) (byte) 1);
        cassandraHost12.setUseThriftFramedTransport(false);
        int int26 = cassandraHost12.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "(127.0.0.1)((127.0.0.1)):3");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1396");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        boolean boolean35 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet36 = subject31.getPrincipals();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost("99:9160", (int) (short) 101);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient42 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost40, "(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient42.equals(null)", !hKerberosThriftClient42.equals(null));
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1397");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        java.lang.String str90 = subject87.toString();
        java.util.Set<java.security.Principal> principalSet91 = subject87.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1398");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        boolean boolean41 = subject38.isReadOnly();
        java.lang.String str42 = subject38.toString();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        java.lang.String str44 = subject38.toString();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        java.lang.String str47 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost50 = new me.prettyprint.cassandra.service.CassandraHost("101:10", (int) (short) 65);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost50, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1399");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.util.concurrent.atomic.AtomicLong atomicLong36 = new java.util.concurrent.atomic.AtomicLong();
        float float37 = atomicLong36.floatValue();
        boolean boolean40 = atomicLong36.compareAndSet(65L, (long) (short) 0);
        atomicLong36.set(0L);
        atomicLong36.lazySet((long) (short) 101);
        boolean boolean45 = subject31.equals((java.lang.Object) atomicLong36);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):101", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost48, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1400");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet55 = subject54.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject68 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet69 = subject68.getPrincipals();
        java.security.Principal[] principalArray70 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet71 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet71, principalArray70);
        java.security.Principal[] principalArray73 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet74 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet74, principalArray73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet69, (java.util.Set<java.security.Principal>) principalSet71, (java.util.Set<java.security.Principal>) principalSet74);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet71, principalSet79);
        javax.security.auth.Subject subject88 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, principalSet55, (java.util.Set<java.security.Principal>) principalSet71);
        javax.security.auth.Subject subject89 = new javax.security.auth.Subject(true, principalSet39, principalSet42, (java.util.Set<java.security.Principal>) principalSet71);
        java.util.Set<java.security.Principal> principalSet90 = subject89.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost92 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        cassandraHost92.setUseSocketKeepalive(false);
        boolean boolean95 = subject89.equals((java.lang.Object) cassandraHost92);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost97 = new me.prettyprint.cassandra.service.CassandraHost("223");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient99 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject89, cassandraHost97, "35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient99.equals(null)", !hKerberosThriftClient99.equals(null));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1401");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("9179");
        cassandraHost14.setUseThriftFramedTransport(false);
        cassandraHost14.setCassandraThriftSocketTimeout((int) (short) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1402");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong17 = new java.util.concurrent.atomic.AtomicLong((long) 10);
        long long19 = atomicLong17.getAndSet(34L);
        long long21 = atomicLong17.addAndGet(101L);
        long long22 = atomicLong17.longValue();
        boolean boolean25 = atomicLong17.compareAndSet(101L, 105L);
        long long27 = atomicLong17.addAndGet((long) 1);
        long long29 = atomicLong17.getAndSet((long) 98);
        boolean boolean30 = subject0.equals((java.lang.Object) atomicLong17);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost32 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost32.setCassandraThriftSocketTimeout(0);
        java.lang.String str35 = cassandraHost32.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean38 = cassandraHost37.getUseSocketKeepalive();
        boolean boolean39 = cassandraHost32.equals((java.lang.Object) boolean38);
        int int40 = cassandraHost32.getMaxActive();
        boolean boolean41 = cassandraHost32.isPerformNameResolution();
        java.lang.String str42 = cassandraHost32.getName();
        boolean boolean43 = cassandraHost32.getUseThriftFramedTransport();
        boolean boolean44 = cassandraHost32.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost32, "hi!");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1403");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):12");
        int int17 = cassandraHost16.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1404");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        cassandraHost16.setUseSocketKeepalive(false);
        int int21 = cassandraHost16.getMaxActive();
        boolean boolean22 = cassandraHost16.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "52:32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1405");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject6 = new javax.security.auth.Subject();
        boolean boolean7 = subject6.isReadOnly();
        java.lang.String str8 = subject6.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject6.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong14 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean15 = cassandraHost12.equals((java.lang.Object) (short) 100);
        int int16 = cassandraHost12.getCassandraThriftSocketTimeout();
        boolean boolean17 = subject6.equals((java.lang.Object) cassandraHost12);
        java.util.Set<java.security.Principal> principalSet18 = subject6.getPrincipals();
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet33 = subject32.getPrincipals();
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject(false, principalSet33, (java.util.Set<java.security.Principal>) principalSet35, (java.util.Set<java.security.Principal>) principalSet38);
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        javax.security.auth.Subject subject50 = new javax.security.auth.Subject(false, principalSet43, (java.util.Set<java.security.Principal>) principalSet45, (java.util.Set<java.security.Principal>) principalSet48);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet35, principalSet43);
        subject51.setReadOnly();
        java.util.Set<java.lang.Object> objSet53 = subject51.getPublicCredentials();
        boolean boolean54 = subject51.isReadOnly();
        java.lang.String str55 = subject51.toString();
        subject51.setReadOnly();
        java.util.Set<java.security.Principal> principalSet57 = subject51.getPrincipals();
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        boolean boolean59 = subject58.isReadOnly();
        java.lang.String str60 = subject58.toString();
        java.util.Set<java.security.Principal> principalSet61 = subject58.getPrincipals();
        java.util.Set<java.security.Principal> principalSet62 = subject58.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject();
        boolean boolean64 = subject63.isReadOnly();
        java.lang.String str65 = subject63.toString();
        java.util.Set<java.security.Principal> principalSet66 = subject63.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost69 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong71 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean72 = cassandraHost69.equals((java.lang.Object) (short) 100);
        int int73 = cassandraHost69.getCassandraThriftSocketTimeout();
        boolean boolean74 = subject63.equals((java.lang.Object) cassandraHost69);
        java.util.Set<java.security.Principal> principalSet75 = subject63.getPrincipals();
        java.util.Set<java.security.Principal> principalSet76 = subject63.getPrincipals();
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet57, principalSet62, principalSet76);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(true, principalSet5, principalSet18, principalSet76);
        subject78.setReadOnly();
        java.util.Set<java.lang.Object> objSet80 = subject78.getPublicCredentials();
        subject78.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost83 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int84 = cassandraHost83.getPort();
        java.lang.String str85 = cassandraHost83.toString();
        boolean boolean86 = cassandraHost83.getUseThriftFramedTransport();
        cassandraHost83.setMaxActive((int) (byte) 1);
        int int89 = cassandraHost83.getPort();
        int int90 = cassandraHost83.getCassandraThriftSocketTimeout();
        cassandraHost83.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient94 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost83, "208");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient94.equals(null)", !hKerberosThriftClient94.equals(null));
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1406");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str15 = subject0.toString();
        subject0.setReadOnly();
        boolean boolean17 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):9160", (int) (short) 32);
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost21);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost25 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong27 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean28 = cassandraHost25.equals((java.lang.Object) (short) 100);
        cassandraHost25.setUseSocketKeepalive(false);
        long long31 = cassandraHost25.getMaxWaitTimeWhenExhausted();
        cassandraHost25.setMaxActive((int) '4');
        int int34 = cassandraHost25.getMaxFrameSize();
        boolean boolean35 = cassandraHost25.getUseThriftFramedTransport();
        cassandraHost25.setMaxActive(112);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost25, ":52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1407");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, ":97(:97):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1408");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        java.lang.String str10 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost13, ":9160((:9160():109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1409");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", 36);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient8 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "127.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient8.equals(null)", !hKerberosThriftClient8.equals(null));
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1410");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.lang.String str2 = subject1.toString();
        java.lang.String str3 = subject1.toString();
        java.util.Set<java.lang.Object> objSet4 = subject1.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        boolean boolean8 = subject7.isReadOnly();
        java.lang.String str9 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong();
        double double11 = atomicLong10.doubleValue();
        long long12 = atomicLong10.incrementAndGet();
        boolean boolean13 = subject7.equals((java.lang.Object) long12);
        java.lang.String str14 = subject7.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong16 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean17 = subject7.equals((java.lang.Object) atomicLong16);
        java.util.Set<java.lang.Object> objSet18 = subject7.getPrivateCredentials();
        boolean boolean19 = subject7.isReadOnly();
        java.util.Set<java.lang.Object> objSet20 = subject7.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet21 = subject7.getPrincipals();
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet24 = subject23.getPrincipals();
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet40 = subject39.getPrincipals();
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        java.security.Principal[] principalArray44 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet45 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet45, principalArray44);
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject(false, principalSet40, (java.util.Set<java.security.Principal>) principalSet42, (java.util.Set<java.security.Principal>) principalSet45);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet42, principalSet50);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet24, principalSet26, principalSet50);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject();
        boolean boolean61 = subject60.isReadOnly();
        java.lang.String str62 = subject60.toString();
        subject60.setReadOnly();
        java.util.Set<java.security.Principal> principalSet64 = subject60.getPrincipals();
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(true, principalSet21, principalSet50, principalSet64);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        boolean boolean67 = subject66.isReadOnly();
        java.lang.String str68 = subject66.toString();
        subject66.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject66.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject(false, principalSet5, principalSet64, principalSet70);
        boolean boolean72 = subject71.isReadOnly();
        java.lang.String str73 = subject71.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost76 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):-1", 112);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient78 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject71, cassandraHost76, ":9160(:9160):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient78.equals(null)", !hKerberosThriftClient78.equals(null));
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1411");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet2 = subject0.getPrincipals();
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        boolean boolean6 = subject5.isReadOnly();
        java.lang.String str7 = subject5.toString();
        subject5.setReadOnly();
        java.util.Set<java.security.Principal> principalSet9 = subject5.getPrincipals();
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet12 = subject11.getPrincipals();
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        java.security.Principal[] principalArray16 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet17 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet17, principalArray16);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject(false, principalSet12, (java.util.Set<java.security.Principal>) principalSet14, (java.util.Set<java.security.Principal>) principalSet17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject();
        boolean boolean21 = subject20.isReadOnly();
        java.lang.String str22 = subject20.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong23 = new java.util.concurrent.atomic.AtomicLong();
        double double24 = atomicLong23.doubleValue();
        long long25 = atomicLong23.incrementAndGet();
        boolean boolean26 = subject20.equals((java.lang.Object) long25);
        java.lang.String str27 = subject20.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong29 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean30 = subject20.equals((java.lang.Object) atomicLong29);
        java.util.Set<java.lang.Object> objSet31 = subject20.getPrivateCredentials();
        boolean boolean32 = subject20.isReadOnly();
        java.util.Set<java.security.Principal> principalSet33 = subject20.getPrincipals();
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(true, principalSet9, (java.util.Set<java.security.Principal>) principalSet14, principalSet33);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.lang.String str36 = subject35.toString();
        java.lang.String str37 = subject35.toString();
        java.util.Set<java.security.Principal> principalSet38 = subject35.getPrincipals();
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        subject70.setReadOnly();
        java.util.Set<java.lang.Object> objSet72 = subject70.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet73 = subject70.getPrivateCredentials();
        boolean boolean74 = subject70.isReadOnly();
        java.util.Set<java.security.Principal> principalSet75 = subject70.getPrincipals();
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet14, principalSet38, principalSet75);
        subject76.setReadOnly();
        subject76.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost81 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean82 = subject76.equals((java.lang.Object) cassandraHost81);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost81, "hi!(hi!):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1412");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.lang.Object> objSet44 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("9693(0.0.37.221):9160");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "101(0.0.0.101):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1413");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean6 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet7 = subject1.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        javax.security.auth.Subject subject11 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet12 = subject11.getPrincipals();
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet28, principalSet36);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject(false, principalSet10, principalSet12, principalSet36);
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        boolean boolean48 = subject47.isReadOnly();
        java.lang.String str49 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong50 = new java.util.concurrent.atomic.AtomicLong();
        double double51 = atomicLong50.doubleValue();
        long long52 = atomicLong50.incrementAndGet();
        boolean boolean53 = subject47.equals((java.lang.Object) long52);
        java.lang.String str54 = subject47.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong56 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean57 = subject47.equals((java.lang.Object) atomicLong56);
        java.util.Set<java.lang.Object> objSet58 = subject47.getPrivateCredentials();
        boolean boolean59 = subject47.isReadOnly();
        java.util.Set<java.lang.Object> objSet60 = subject47.getPrivateCredentials();
        subject47.setReadOnly();
        java.util.Set<java.security.Principal> principalSet62 = subject47.getPrincipals();
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(true, principalSet7, principalSet46, principalSet62);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost66 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", 9160);
        long long67 = cassandraHost66.getMaxWaitTimeWhenExhausted();
        cassandraHost66.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient71 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject63, cassandraHost66, "(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient71.equals(null)", !hKerberosThriftClient71.equals(null));
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1414");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost2 = new me.prettyprint.cassandra.service.CassandraHost("101", (int) (short) 32);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        javax.security.auth.Subject subject13 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet11);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet16 = subject15.getPrincipals();
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject(false, principalSet16, (java.util.Set<java.security.Principal>) principalSet18, (java.util.Set<java.security.Principal>) principalSet21);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet26 = subject25.getPrincipals();
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, principalSet26, (java.util.Set<java.security.Principal>) principalSet28, (java.util.Set<java.security.Principal>) principalSet31);
        javax.security.auth.Subject subject34 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet8, (java.util.Set<java.security.Principal>) principalSet18, principalSet26);
        java.util.Set<java.security.Principal> principalSet35 = subject34.getPrincipals();
        java.util.Set<java.security.Principal> principalSet36 = subject34.getPrincipals();
        boolean boolean37 = cassandraHost2.equals((java.lang.Object) subject34);
        boolean boolean38 = subject34.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("91", (int) (short) -1);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong(1L);
        boolean boolean46 = atomicLong43.weakCompareAndSet(0L, (long) (short) 100);
        boolean boolean49 = atomicLong43.weakCompareAndSet((long) 50, 2L);
        boolean boolean52 = atomicLong43.compareAndSet((long) 0, (long) (byte) 10);
        boolean boolean55 = atomicLong43.weakCompareAndSet((long) (short) 100, 0L);
        boolean boolean58 = atomicLong43.compareAndSet((long) (short) 35, 0L);
        java.lang.String str59 = atomicLong43.toString();
        long long60 = atomicLong43.get();
        long long61 = atomicLong43.longValue();
        long long63 = atomicLong43.addAndGet(13L);
        boolean boolean64 = cassandraHost41.equals((java.lang.Object) atomicLong43);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient66 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject34, cassandraHost41, "127.0.0.1(127.0.0.1):104");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient66.equals(null)", !hKerberosThriftClient66.equals(null));
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1415");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        java.lang.String str15 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("9492");
        boolean boolean18 = cassandraHost17.isPerformNameResolution();
        boolean boolean19 = cassandraHost17.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1416");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost12.setCassandraThriftSocketTimeout(0);
        cassandraHost12.setUseSocketKeepalive(false);
        int int17 = cassandraHost12.getMaxActive();
        java.lang.String str18 = cassandraHost12.getUrl();
        cassandraHost12.setMaxActive((int) (short) 10);
        boolean boolean21 = cassandraHost12.isPerformNameResolution();
        int int22 = cassandraHost12.getMaxActive();
        boolean boolean23 = cassandraHost12.getLifo();
        int int24 = cassandraHost12.getCassandraThriftSocketTimeout();
        int int25 = cassandraHost12.getMaxActive();
        int int26 = cassandraHost12.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1417");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject51 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet52 = subject51.getPrincipals();
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        java.security.Principal[] principalArray56 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet57 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet57, principalArray56);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject(false, principalSet52, (java.util.Set<java.security.Principal>) principalSet54, (java.util.Set<java.security.Principal>) principalSet57);
        javax.security.auth.Subject subject61 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet62 = subject61.getPrincipals();
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        java.security.Principal[] principalArray66 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet67 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet67, principalArray66);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject(false, principalSet62, (java.util.Set<java.security.Principal>) principalSet64, (java.util.Set<java.security.Principal>) principalSet67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet54, principalSet62);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet54, principalSet73);
        java.util.Set<java.security.Principal> principalSet82 = subject81.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):101", (int) (byte) 104);
        boolean boolean86 = subject81.equals((java.lang.Object) "hi!(hi!):101");
        me.prettyprint.cassandra.service.CassandraHost cassandraHost89 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", 104);
        cassandraHost89.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient93 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject81, cassandraHost89, "91(0.0.0.91):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient93.equals(null)", !hKerberosThriftClient93.equals(null));
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1418");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost34 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost34.setCassandraThriftSocketTimeout(0);
        cassandraHost34.setUseSocketKeepalive(false);
        boolean boolean39 = cassandraHost34.getUseThriftFramedTransport();
        boolean boolean40 = cassandraHost34.getLifo();
        boolean boolean41 = cassandraHost34.getUseSocketKeepalive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost34, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1419");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("10", 37);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient45 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "127.0.0.1(127.0.0.1):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient45.equals(null)", !hKerberosThriftClient45.equals(null));
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1420");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        boolean boolean79 = subject78.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)", 98);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient84 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost82, ":97(:97):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient84.equals(null)", !hKerberosThriftClient84.equals(null));
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1421");
        java.security.Principal[] principalArray2 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet3 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet3, principalArray2);
        javax.security.auth.Subject subject5 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet6 = subject5.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet10 = subject9.getPrincipals();
        java.security.Principal[] principalArray11 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet12 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet12, principalArray11);
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject(false, principalSet10, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet15);
        javax.security.auth.Subject subject19 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet20 = subject19.getPrincipals();
        java.security.Principal[] principalArray21 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet22 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet22, principalArray21);
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject(false, principalSet20, (java.util.Set<java.security.Principal>) principalSet22, (java.util.Set<java.security.Principal>) principalSet25);
        javax.security.auth.Subject subject29 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet30 = subject29.getPrincipals();
        java.security.Principal[] principalArray31 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet32 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet32, principalArray31);
        java.security.Principal[] principalArray34 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet35 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet35, principalArray34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet30, (java.util.Set<java.security.Principal>) principalSet32, (java.util.Set<java.security.Principal>) principalSet35);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet12, (java.util.Set<java.security.Principal>) principalSet22, principalSet30);
        javax.security.auth.Subject subject39 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet3, principalSet6, (java.util.Set<java.security.Principal>) principalSet22);
        javax.security.auth.Subject subject41 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet42 = subject41.getPrincipals();
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        java.security.Principal[] principalArray46 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet47 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet47, principalArray46);
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject(false, principalSet42, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet47);
        javax.security.auth.Subject subject52 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet53 = subject52.getPrincipals();
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        javax.security.auth.Subject subject60 = new javax.security.auth.Subject(false, principalSet53, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet58);
        javax.security.auth.Subject subject62 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet63 = subject62.getPrincipals();
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        java.security.Principal[] principalArray67 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet68 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet68, principalArray67);
        javax.security.auth.Subject subject70 = new javax.security.auth.Subject(false, principalSet63, (java.util.Set<java.security.Principal>) principalSet65, (java.util.Set<java.security.Principal>) principalSet68);
        javax.security.auth.Subject subject72 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet73 = subject72.getPrincipals();
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        java.security.Principal[] principalArray77 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet78 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet78, principalArray77);
        javax.security.auth.Subject subject80 = new javax.security.auth.Subject(false, principalSet73, (java.util.Set<java.security.Principal>) principalSet75, (java.util.Set<java.security.Principal>) principalSet78);
        javax.security.auth.Subject subject81 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet55, (java.util.Set<java.security.Principal>) principalSet65, principalSet73);
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject(false, principalSet6, (java.util.Set<java.security.Principal>) principalSet44, (java.util.Set<java.security.Principal>) principalSet65);
        boolean boolean83 = subject82.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str86 = cassandraHost85.getIp();
        cassandraHost85.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost85.setUseThriftFramedTransport(true);
        boolean boolean91 = subject82.equals((java.lang.Object) true);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (byte) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject82, cassandraHost94, "(127.0.0.1):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1422");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        boolean boolean44 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        java.lang.String str49 = cassandraHost48.toString();
        cassandraHost48.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "101(0.0.0.101):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1423");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean21 = cassandraHost18.equals((java.lang.Object) (short) 100);
        long long22 = cassandraHost18.getMaxWaitTimeWhenExhausted();
        boolean boolean23 = cassandraHost18.getUseThriftFramedTransport();
        cassandraHost18.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost18.setUseSocketKeepalive(false);
        int int28 = cassandraHost18.getCassandraThriftSocketTimeout();
        int int29 = cassandraHost18.getCassandraThriftSocketTimeout();
        java.lang.String str30 = cassandraHost18.toString();
        boolean boolean31 = cassandraHost18.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient33 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "9381(0.0.36.165):52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient33.equals(null)", !hKerberosThriftClient33.equals(null));
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1424");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):101", (int) (short) 34);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, ":97:10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1425");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        java.util.Set<java.lang.Object> objSet38 = subject31.getPublicCredentials();
        subject31.setReadOnly();
        java.lang.String str40 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost42.setCassandraThriftSocketTimeout(0);
        cassandraHost42.setUseSocketKeepalive(false);
        int int47 = cassandraHost42.getMaxActive();
        java.lang.String str48 = cassandraHost42.getUrl();
        cassandraHost42.setMaxActive((int) (short) 10);
        cassandraHost42.setMaxWaitTimeWhenExhausted((long) 50);
        boolean boolean53 = cassandraHost42.getUseSocketKeepalive();
        cassandraHost42.setMaxFrameSize((int) (byte) 1);
        java.lang.String str56 = cassandraHost42.getIp();
        boolean boolean57 = cassandraHost42.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "158");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1426");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:10");
        int int12 = cassandraHost11.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient14 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost11, "88");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient14.equals(null)", !hKerberosThriftClient14.equals(null));
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1427");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject0.getPrincipals();
        boolean boolean7 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.lang.String str9 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost12 = new me.prettyprint.cassandra.service.CassandraHost("1", 52);
        java.lang.String str13 = cassandraHost12.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient15 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost12, "88");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient15.equals(null)", !hKerberosThriftClient15.equals(null));
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1428");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.util.Set<java.security.Principal> principalSet40 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 0);
        cassandraHost43.setUseThriftFramedTransport(true);
        cassandraHost43.setMaxFrameSize(0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "103(0.0.0.103):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1429");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost14.setCassandraThriftSocketTimeout(0);
        java.lang.String str17 = cassandraHost14.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        boolean boolean21 = cassandraHost14.equals((java.lang.Object) boolean20);
        int int22 = cassandraHost14.getMaxActive();
        boolean boolean23 = cassandraHost14.getUseSocketKeepalive();
        long long24 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        boolean boolean25 = cassandraHost14.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1430");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "(127.0.0.1):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1431");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet39 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        cassandraHost41.setUseSocketKeepalive(false);
        java.lang.String str46 = cassandraHost41.getIp();
        cassandraHost41.setMaxActive(103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "0.0.1.12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1432");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong13 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean14 = cassandraHost11.equals((java.lang.Object) (short) 100);
        long long15 = cassandraHost11.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost11.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean20 = cassandraHost11.equals((java.lang.Object) cassandraHost19);
        cassandraHost19.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        java.lang.String str23 = cassandraHost19.getHost();
        java.lang.String str24 = cassandraHost19.getHost();
        cassandraHost19.setMaxActive(2147483647);
        boolean boolean27 = cassandraHost19.isPerformNameResolution();
        boolean boolean28 = subject0.equals((java.lang.Object) cassandraHost19);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost30 = new me.prettyprint.cassandra.service.CassandraHost("85");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost30, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1433");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        boolean boolean44 = subject38.isReadOnly();
        java.lang.String str45 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (-1));
        boolean boolean49 = cassandraHost48.isPerformNameResolution();
        cassandraHost48.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient53 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "164");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient53.equals(null)", !hKerberosThriftClient53.equals(null));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1434");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean3 = subject0.isReadOnly();
        java.lang.String str4 = subject0.toString();
        boolean boolean5 = subject0.isReadOnly();
        java.lang.String str6 = subject0.toString();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost9 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost9.setCassandraThriftSocketTimeout(0);
        java.lang.String str12 = cassandraHost9.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean15 = cassandraHost14.getUseSocketKeepalive();
        boolean boolean16 = cassandraHost9.equals((java.lang.Object) boolean15);
        int int17 = cassandraHost9.getMaxActive();
        boolean boolean18 = cassandraHost9.isPerformNameResolution();
        cassandraHost9.setMaxWaitTimeWhenExhausted((long) (short) 35);
        cassandraHost9.setCassandraThriftSocketTimeout((int) '4');
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient24 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost9, "52:32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient24.equals(null)", !hKerberosThriftClient24.equals(null));
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1435");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.208", (int) (short) 62);
        boolean boolean11 = cassandraHost10.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, ":52");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1436");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet4 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet5 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))", (int) (short) 9160);
        cassandraHost8.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "hi!(hi!)(hi!(hi!)):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1437");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.lang.String str43 = subject38.toString();
        java.util.Set<java.lang.Object> objSet44 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        int int47 = cassandraHost46.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1438");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        java.lang.String str13 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "103(0.0.0.103):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1439");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        boolean boolean42 = subject38.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost(":9160:10");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, "(127.0.0.1)((127.0.0.1)):101");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1440");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):9160", (int) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "0.0.0.1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1441");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        javax.security.auth.Subject subject3 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet4 = subject3.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet18 = subject17.getPrincipals();
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        java.security.Principal[] principalArray22 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet23 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet23, principalArray22);
        javax.security.auth.Subject subject25 = new javax.security.auth.Subject(false, principalSet18, (java.util.Set<java.security.Principal>) principalSet20, (java.util.Set<java.security.Principal>) principalSet23);
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet28 = subject27.getPrincipals();
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        java.security.Principal[] principalArray32 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet33 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet33, principalArray32);
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject(false, principalSet28, (java.util.Set<java.security.Principal>) principalSet30, (java.util.Set<java.security.Principal>) principalSet33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet20, principalSet28);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, principalSet2, principalSet4, principalSet28);
        java.util.Set<java.security.Principal> principalSet38 = subject37.getPrincipals();
        subject37.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost41.setCassandraThriftSocketTimeout(0);
        cassandraHost41.setUseSocketKeepalive(false);
        boolean boolean46 = cassandraHost41.getUseThriftFramedTransport();
        boolean boolean47 = cassandraHost41.getLifo();
        java.lang.String str48 = cassandraHost41.toString();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject37, cassandraHost41, "135");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1442");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):100", (int) ' ');
        int int22 = cassandraHost21.getMaxActive();
        int int23 = cassandraHost21.getCassandraThriftSocketTimeout();
        java.lang.String str24 = cassandraHost21.toString();
        cassandraHost21.setCassandraThriftSocketTimeout(1);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "CassandraClient<%s-%d>");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1443");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        boolean boolean3 = subject2.isReadOnly();
        java.lang.String str4 = subject2.toString();
        subject2.setReadOnly();
        java.util.Set<java.security.Principal> principalSet6 = subject2.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject17 = new javax.security.auth.Subject();
        boolean boolean18 = subject17.isReadOnly();
        java.lang.String str19 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong20 = new java.util.concurrent.atomic.AtomicLong();
        double double21 = atomicLong20.doubleValue();
        long long22 = atomicLong20.incrementAndGet();
        boolean boolean23 = subject17.equals((java.lang.Object) long22);
        java.lang.String str24 = subject17.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong26 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean27 = subject17.equals((java.lang.Object) atomicLong26);
        java.util.Set<java.lang.Object> objSet28 = subject17.getPrivateCredentials();
        boolean boolean29 = subject17.isReadOnly();
        java.util.Set<java.security.Principal> principalSet30 = subject17.getPrincipals();
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(true, principalSet6, (java.util.Set<java.security.Principal>) principalSet11, principalSet30);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject();
        java.lang.String str33 = subject32.toString();
        java.lang.String str34 = subject32.toString();
        java.util.Set<java.security.Principal> principalSet35 = subject32.getPrincipals();
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        java.security.Principal[] principalArray43 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet44 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet44, principalArray43);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject(false, principalSet39, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet44);
        javax.security.auth.Subject subject48 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet49 = subject48.getPrincipals();
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        java.security.Principal[] principalArray53 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet54 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet54, principalArray53);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject(false, principalSet49, (java.util.Set<java.security.Principal>) principalSet51, (java.util.Set<java.security.Principal>) principalSet54);
        javax.security.auth.Subject subject58 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet59 = subject58.getPrincipals();
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        java.security.Principal[] principalArray63 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet64 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet64, principalArray63);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject(false, principalSet59, (java.util.Set<java.security.Principal>) principalSet61, (java.util.Set<java.security.Principal>) principalSet64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet41, (java.util.Set<java.security.Principal>) principalSet51, principalSet59);
        subject67.setReadOnly();
        java.util.Set<java.lang.Object> objSet69 = subject67.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet70 = subject67.getPrivateCredentials();
        boolean boolean71 = subject67.isReadOnly();
        java.util.Set<java.security.Principal> principalSet72 = subject67.getPrincipals();
        javax.security.auth.Subject subject73 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, principalSet35, principalSet72);
        java.util.Set<java.lang.Object> objSet74 = subject73.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost77 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1)", (int) (byte) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient79 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject73, cassandraHost77, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient79.equals(null)", !hKerberosThriftClient79.equals(null));
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1444");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPrivateCredentials();
        boolean boolean38 = subject31.isReadOnly();
        boolean boolean39 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet40 = subject31.getPrivateCredentials();
        java.lang.String str41 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("91(0.0.0.91):52", (int) (byte) 0);
        cassandraHost44.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost44, "127.0.0.1(127.0.0.1)(127.0.0.1(127.0.0.1)):50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1445");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        boolean boolean41 = subject38.isReadOnly();
        java.util.Set<java.lang.Object> objSet42 = subject38.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        long long47 = cassandraHost46.getMaxWaitTimeWhenExhausted();
        boolean boolean48 = cassandraHost46.isPerformNameResolution();
        int int49 = cassandraHost46.getMaxActive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost52 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):-1", 2147483647);
        java.lang.String str53 = cassandraHost52.toString();
        boolean boolean54 = cassandraHost46.equals((java.lang.Object) str53);
        cassandraHost46.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient58 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "Subject(Subject)(Subject(Subject))");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient58.equals(null)", !hKerberosThriftClient58.equals(null));
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1446");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):101", (int) (byte) -106);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "475");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1447");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        java.util.Set<java.lang.Object> objSet89 = subject87.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet90 = subject87.getPrincipals();
        java.lang.String str91 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost93 = new me.prettyprint.cassandra.service.CassandraHost("103");
        java.lang.String str94 = cassandraHost93.getIp();
        int int95 = cassandraHost93.getMaxActive();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient97 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost93, "9895");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient97.equals(null)", !hKerberosThriftClient97.equals(null));
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1448");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.lang.Object> objSet12 = subject9.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet13 = subject9.getPrincipals();
        java.lang.String str14 = subject9.toString();
        java.lang.String str15 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:0", 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost18, "86");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1449");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        subject1.setReadOnly();
        java.util.Set<java.security.Principal> principalSet5 = subject1.getPrincipals();
        javax.security.auth.Subject subject7 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet8 = subject7.getPrincipals();
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        java.security.Principal[] principalArray12 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet13 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet13, principalArray12);
        javax.security.auth.Subject subject15 = new javax.security.auth.Subject(false, principalSet8, (java.util.Set<java.security.Principal>) principalSet10, (java.util.Set<java.security.Principal>) principalSet13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(true, principalSet5, (java.util.Set<java.security.Principal>) principalSet10, principalSet29);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost33 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", (int) (byte) 123);
        cassandraHost33.setMaxFrameSize((int) (short) 521);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient37 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject30, cassandraHost33, "9381(0.0.36.165)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient37.equals(null)", !hKerberosThriftClient37.equals(null));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1450");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        boolean boolean2 = subject1.isReadOnly();
        java.lang.String str3 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong4 = new java.util.concurrent.atomic.AtomicLong();
        double double5 = atomicLong4.doubleValue();
        long long6 = atomicLong4.incrementAndGet();
        boolean boolean7 = subject1.equals((java.lang.Object) long6);
        java.lang.String str8 = subject1.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong10 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean11 = subject1.equals((java.lang.Object) atomicLong10);
        subject1.setReadOnly();
        subject1.setReadOnly();
        boolean boolean14 = subject1.isReadOnly();
        java.util.Set<java.security.Principal> principalSet15 = subject1.getPrincipals();
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean26 = subject16.equals((java.lang.Object) atomicLong25);
        java.util.Set<java.lang.Object> objSet27 = subject16.getPrivateCredentials();
        boolean boolean28 = subject16.isReadOnly();
        java.util.Set<java.security.Principal> principalSet29 = subject16.getPrincipals();
        java.util.Set<java.lang.Object> objSet30 = subject16.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet31 = subject16.getPrincipals();
        javax.security.auth.Subject subject35 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet36 = subject35.getPrincipals();
        java.security.Principal[] principalArray37 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet38 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet38, principalArray37);
        java.security.Principal[] principalArray40 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet41 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet41, principalArray40);
        javax.security.auth.Subject subject43 = new javax.security.auth.Subject(false, principalSet36, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet41);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        java.security.Principal[] principalArray47 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet48 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet48, principalArray47);
        java.security.Principal[] principalArray50 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet51 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet51, principalArray50);
        javax.security.auth.Subject subject53 = new javax.security.auth.Subject(false, principalSet46, (java.util.Set<java.security.Principal>) principalSet48, (java.util.Set<java.security.Principal>) principalSet51);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet56 = subject55.getPrincipals();
        java.security.Principal[] principalArray57 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet58 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet58, principalArray57);
        java.security.Principal[] principalArray60 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet61 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet61, principalArray60);
        javax.security.auth.Subject subject63 = new javax.security.auth.Subject(false, principalSet56, (java.util.Set<java.security.Principal>) principalSet58, (java.util.Set<java.security.Principal>) principalSet61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet38, (java.util.Set<java.security.Principal>) principalSet48, principalSet56);
        subject64.setReadOnly();
        java.util.Set<java.lang.Object> objSet66 = subject64.getPublicCredentials();
        boolean boolean67 = subject64.isReadOnly();
        java.lang.String str68 = subject64.toString();
        subject64.setReadOnly();
        java.util.Set<java.security.Principal> principalSet70 = subject64.getPrincipals();
        javax.security.auth.Subject subject71 = new javax.security.auth.Subject();
        boolean boolean72 = subject71.isReadOnly();
        java.lang.String str73 = subject71.toString();
        java.util.Set<java.security.Principal> principalSet74 = subject71.getPrincipals();
        java.util.Set<java.security.Principal> principalSet75 = subject71.getPrincipals();
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject();
        boolean boolean77 = subject76.isReadOnly();
        java.lang.String str78 = subject76.toString();
        java.util.Set<java.security.Principal> principalSet79 = subject76.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong84 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean85 = cassandraHost82.equals((java.lang.Object) (short) 100);
        int int86 = cassandraHost82.getCassandraThriftSocketTimeout();
        boolean boolean87 = subject76.equals((java.lang.Object) cassandraHost82);
        java.util.Set<java.security.Principal> principalSet88 = subject76.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject76.getPrincipals();
        javax.security.auth.Subject subject90 = new javax.security.auth.Subject(false, principalSet70, principalSet75, principalSet89);
        javax.security.auth.Subject subject91 = new javax.security.auth.Subject(true, principalSet15, principalSet31, principalSet89);
        java.util.Set<java.security.Principal> principalSet92 = subject91.getPrincipals();
        java.util.Set<java.lang.Object> objSet93 = subject91.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost96 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1):-1", 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient98 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject91, cassandraHost96, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient98.equals(null)", !hKerberosThriftClient98.equals(null));
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1451");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong8 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean9 = cassandraHost6.equals((java.lang.Object) (short) 100);
        int int10 = cassandraHost6.getCassandraThriftSocketTimeout();
        boolean boolean11 = subject0.equals((java.lang.Object) cassandraHost6);
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        boolean boolean14 = subject0.equals((java.lang.Object) 10L);
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject();
        boolean boolean17 = subject16.isReadOnly();
        java.lang.String str18 = subject16.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong19 = new java.util.concurrent.atomic.AtomicLong();
        double double20 = atomicLong19.doubleValue();
        long long21 = atomicLong19.incrementAndGet();
        boolean boolean22 = subject16.equals((java.lang.Object) long21);
        java.lang.String str23 = subject16.toString();
        java.util.Set<java.lang.Object> objSet24 = subject16.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet25 = subject16.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet26 = subject16.getPrivateCredentials();
        boolean boolean27 = subject0.equals((java.lang.Object) objSet26);
        boolean boolean28 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost31 = new me.prettyprint.cassandra.service.CassandraHost("Subject", (int) (short) 101);
        java.util.concurrent.atomic.AtomicLong atomicLong33 = new java.util.concurrent.atomic.AtomicLong((long) 50);
        boolean boolean34 = cassandraHost31.equals((java.lang.Object) 50);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient36 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost31, "hi!(hi!)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient36.equals(null)", !hKerberosThriftClient36.equals(null));
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1452");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str14 = cassandraHost13.getIp();
        cassandraHost13.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost13.setMaxWaitTimeWhenExhausted(0L);
        java.lang.String str19 = cassandraHost13.getHost();
        boolean boolean20 = cassandraHost13.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "hi!(hi!)(hi!(hi!)):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1453");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.lang.String str11 = subject9.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160", (int) (short) 0);
        boolean boolean15 = cassandraHost14.isPerformNameResolution();
        cassandraHost14.setMaxActive(98);
        cassandraHost14.setUseSocketKeepalive(false);
        boolean boolean20 = cassandraHost14.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost14, "127.0.0.1(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1454");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost16.setCassandraThriftSocketTimeout(0);
        java.lang.String str19 = cassandraHost16.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean22 = cassandraHost21.getUseSocketKeepalive();
        boolean boolean23 = cassandraHost16.equals((java.lang.Object) boolean22);
        int int24 = cassandraHost16.getMaxActive();
        boolean boolean25 = cassandraHost16.getUseSocketKeepalive();
        java.lang.String str26 = cassandraHost16.getUrl();
        javax.security.auth.Subject subject27 = new javax.security.auth.Subject();
        boolean boolean28 = subject27.isReadOnly();
        java.lang.String str29 = subject27.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong30 = new java.util.concurrent.atomic.AtomicLong();
        double double31 = atomicLong30.doubleValue();
        long long32 = atomicLong30.incrementAndGet();
        boolean boolean33 = subject27.equals((java.lang.Object) long32);
        java.lang.String str34 = subject27.toString();
        java.lang.String str35 = subject27.toString();
        boolean boolean36 = subject27.isReadOnly();
        boolean boolean37 = cassandraHost16.equals((java.lang.Object) boolean36);
        boolean boolean38 = subject0.equals((java.lang.Object) boolean37);
        java.util.Set<java.security.Principal> principalSet39 = subject0.getPrincipals();
        java.lang.String str40 = subject0.toString();
        java.util.Set<java.lang.Object> objSet41 = subject0.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost43.setCassandraThriftSocketTimeout(0);
        java.lang.String str46 = cassandraHost43.getUrl();
        long long47 = cassandraHost43.getMaxWaitTimeWhenExhausted();
        cassandraHost43.setMaxFrameSize((int) (short) 100);
        int int50 = cassandraHost43.getMaxActive();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost53 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        java.lang.String str54 = cassandraHost53.getHost();
        cassandraHost53.setMaxWaitTimeWhenExhausted((long) (byte) 50);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost59 = new me.prettyprint.cassandra.service.CassandraHost("99", (int) ' ');
        boolean boolean60 = cassandraHost53.equals((java.lang.Object) cassandraHost59);
        long long61 = cassandraHost53.getMaxWaitTimeWhenExhausted();
        boolean boolean62 = cassandraHost43.equals((java.lang.Object) cassandraHost53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient64 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost53, ":97(:97)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient64.equals(null)", !hKerberosThriftClient64.equals(null));
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1455");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        java.util.Set<java.lang.Object> objSet36 = subject31.getPublicCredentials();
        java.util.Set<java.lang.Object> objSet37 = subject31.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet38 = subject31.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong43 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean44 = cassandraHost41.equals((java.lang.Object) (short) 100);
        long long45 = cassandraHost41.getMaxWaitTimeWhenExhausted();
        boolean boolean46 = cassandraHost41.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1", (int) (short) 10);
        boolean boolean50 = cassandraHost41.equals((java.lang.Object) cassandraHost49);
        cassandraHost49.setMaxWaitTimeWhenExhausted((long) (byte) 100);
        cassandraHost49.setMaxWaitTimeWhenExhausted((long) (short) 35);
        int int55 = cassandraHost49.getMaxActive();
        cassandraHost49.setMaxFrameSize((int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient59 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost49, "0.0.0.99(0.0.0.99)(0.0.0.99(0.0.0.99)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient59.equals(null)", !hKerberosThriftClient59.equals(null));
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1456");
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        java.security.Principal[] principalArray9 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet10 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet10, principalArray9);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject(false, principalSet5, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet10);
        javax.security.auth.Subject subject14 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet15 = subject14.getPrincipals();
        java.security.Principal[] principalArray16 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet17 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet17, principalArray16);
        java.security.Principal[] principalArray19 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet20 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet20, principalArray19);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject(false, principalSet15, (java.util.Set<java.security.Principal>) principalSet17, (java.util.Set<java.security.Principal>) principalSet20);
        javax.security.auth.Subject subject24 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet25 = subject24.getPrincipals();
        java.security.Principal[] principalArray26 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet27 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet27, principalArray26);
        java.security.Principal[] principalArray29 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet30 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet30, principalArray29);
        javax.security.auth.Subject subject32 = new javax.security.auth.Subject(false, principalSet25, (java.util.Set<java.security.Principal>) principalSet27, (java.util.Set<java.security.Principal>) principalSet30);
        javax.security.auth.Subject subject33 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet7, (java.util.Set<java.security.Principal>) principalSet17, principalSet25);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet37 = subject36.getPrincipals();
        java.security.Principal[] principalArray38 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet39 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet39, principalArray38);
        java.security.Principal[] principalArray41 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet42 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet42, principalArray41);
        javax.security.auth.Subject subject44 = new javax.security.auth.Subject(false, principalSet37, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet42);
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet39, (java.util.Set<java.security.Principal>) principalSet49, principalSet57);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet57, (java.util.Set<java.security.Principal>) principalSet70);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject();
        boolean boolean78 = subject77.isReadOnly();
        java.lang.String str79 = subject77.toString();
        subject77.setReadOnly();
        java.util.Set<java.security.Principal> principalSet81 = subject77.getPrincipals();
        javax.security.auth.Subject subject82 = new javax.security.auth.Subject();
        boolean boolean83 = subject82.isReadOnly();
        java.lang.String str84 = subject82.toString();
        subject82.setReadOnly();
        java.util.Set<java.security.Principal> principalSet86 = subject82.getPrincipals();
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(true, (java.util.Set<java.security.Principal>) principalSet7, principalSet81, principalSet86);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost90 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):9160", (int) (byte) 100);
        boolean boolean91 = cassandraHost90.isPerformNameResolution();
        long long92 = cassandraHost90.getMaxWaitTimeWhenExhausted();
        boolean boolean93 = cassandraHost90.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient95 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost90, "251");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient95.equals(null)", !hKerberosThriftClient95.equals(null));
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1457");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet35 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("103(0.0.0.103)", 14);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient40 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient40.equals(null)", !hKerberosThriftClient40.equals(null));
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1458");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        java.util.Set<java.lang.Object> objSet41 = subject38.getPrivateCredentials();
        subject38.setReadOnly();
        java.util.Set<java.security.Principal> principalSet43 = subject38.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):1", (int) (byte) 51);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient48 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, ":9160(");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient48.equals(null)", !hKerberosThriftClient48.equals(null));
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1459");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", 9160);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        boolean boolean19 = subject18.isReadOnly();
        subject18.setReadOnly();
        boolean boolean21 = subject18.isReadOnly();
        boolean boolean22 = cassandraHost17.equals((java.lang.Object) boolean21);
        boolean boolean23 = cassandraHost17.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "Subject(Subject):105");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1460");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str17 = cassandraHost16.getIp();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 0);
        cassandraHost16.setUseThriftFramedTransport(true);
        int int22 = cassandraHost16.getMaxActive();
        boolean boolean23 = subject0.equals((java.lang.Object) cassandraHost16);
        java.util.concurrent.atomic.AtomicLong atomicLong25 = new java.util.concurrent.atomic.AtomicLong(9L);
        float float26 = atomicLong25.floatValue();
        boolean boolean27 = subject0.equals((java.lang.Object) atomicLong25);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost30 = new me.prettyprint.cassandra.service.CassandraHost("316", (int) (byte) 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost30, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1461");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.lang.String str17 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet19 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost21 = new me.prettyprint.cassandra.service.CassandraHost(":9160:100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient23 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost21, "-1(-1):35");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient23.equals(null)", !hKerberosThriftClient23.equals(null));
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1462");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.util.Set<java.lang.Object> objSet7 = subject0.getPublicCredentials();
        boolean boolean8 = subject0.isReadOnly();
        subject0.setReadOnly();
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet11 = subject10.getPrivateCredentials();
        boolean boolean12 = subject10.isReadOnly();
        boolean boolean13 = subject10.isReadOnly();
        subject10.setReadOnly();
        java.util.Set<java.lang.Object> objSet15 = subject10.getPublicCredentials();
        boolean boolean16 = subject0.equals((java.lang.Object) objSet15);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost19 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean20 = cassandraHost19.getUseSocketKeepalive();
        boolean boolean21 = cassandraHost19.isPerformNameResolution();
        cassandraHost19.setUseThriftFramedTransport(true);
        int int24 = cassandraHost19.getPort();
        cassandraHost19.setUseThriftFramedTransport(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient28 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost19, "475");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient28.equals(null)", !hKerberosThriftClient28.equals(null));
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1463");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost5 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        int int6 = cassandraHost5.getPort();
        java.lang.String str7 = cassandraHost5.toString();
        java.lang.String str8 = cassandraHost5.getHost();
        int int9 = cassandraHost5.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost5, "91");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1464");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        boolean boolean39 = subject38.isReadOnly();
        java.lang.String str40 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost43 = new me.prettyprint.cassandra.service.CassandraHost(":9160:-1", (int) (byte) 12);
        cassandraHost43.setMaxFrameSize((int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient47 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost43, "CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>))(CassandraClient<%s-%d>(CassandraClient<%s-%d>)(CassandraClient<%s-%d>(CassandraClient<%s-%d>))):49");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient47.equals(null)", !hKerberosThriftClient47.equals(null));
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1465");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.security.Principal[] principalArray42 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet43 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet43, principalArray42);
        javax.security.auth.Subject subject45 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet46 = subject45.getPrincipals();
        javax.security.auth.Subject subject49 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet50 = subject49.getPrincipals();
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        java.security.Principal[] principalArray54 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet55 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet55, principalArray54);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject(false, principalSet50, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet55);
        javax.security.auth.Subject subject59 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet60 = subject59.getPrincipals();
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        java.security.Principal[] principalArray64 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet65 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet65, principalArray64);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject(false, principalSet60, (java.util.Set<java.security.Principal>) principalSet62, (java.util.Set<java.security.Principal>) principalSet65);
        javax.security.auth.Subject subject69 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet70 = subject69.getPrincipals();
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        java.security.Principal[] principalArray74 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet75 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet75, principalArray74);
        javax.security.auth.Subject subject77 = new javax.security.auth.Subject(false, principalSet70, (java.util.Set<java.security.Principal>) principalSet72, (java.util.Set<java.security.Principal>) principalSet75);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet52, (java.util.Set<java.security.Principal>) principalSet62, principalSet70);
        javax.security.auth.Subject subject79 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet43, principalSet46, (java.util.Set<java.security.Principal>) principalSet62);
        java.util.Set<java.security.Principal> principalSet80 = subject79.getPrincipals();
        java.lang.String str81 = subject79.toString();
        boolean boolean82 = subject38.equals((java.lang.Object) subject79);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost85 = new me.prettyprint.cassandra.service.CassandraHost("Subject(Subject):101", (int) (byte) 104);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient87 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject79, cassandraHost85, "51");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient87.equals(null)", !hKerberosThriftClient87.equals(null));
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1466");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        subject9.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject9.getPrivateCredentials();
        boolean boolean12 = subject9.isReadOnly();
        boolean boolean13 = subject9.isReadOnly();
        java.util.Set<java.lang.Object> objSet14 = subject9.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean18 = cassandraHost17.getUseSocketKeepalive();
        cassandraHost17.setUseSocketKeepalive(true);
        cassandraHost17.setMaxActive(2147483647);
        int int23 = cassandraHost17.getPort();
        cassandraHost17.setCassandraThriftSocketTimeout((int) (byte) 103);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient27 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost17, "103");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient27.equals(null)", !hKerberosThriftClient27.equals(null));
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1467");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.lang.Object> objSet3 = subject0.getPublicCredentials();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        boolean boolean5 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet7 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("", (int) '4');
        int int12 = cassandraHost11.getMaxActive();
        boolean boolean13 = cassandraHost11.isPerformNameResolution();
        java.lang.String str14 = cassandraHost11.getHost();
        boolean boolean15 = subject0.equals((java.lang.Object) cassandraHost11);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("99(0.0.0.99):100");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "hi!(hi!)(hi!(hi!)):34");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1468");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):12");
        int int16 = cassandraHost15.getPort();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "81");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1469");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        java.lang.String str3 = subject0.toString();
        java.lang.String str4 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet6 = subject0.getPrivateCredentials();
        java.lang.String str7 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost10 = new me.prettyprint.cassandra.service.CassandraHost(":97(:97):9160", (int) (byte) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient12 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost10, "hi!(hi!):9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient12.equals(null)", !hKerberosThriftClient12.equals(null));
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1470");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!", (int) (byte) 100);
        boolean boolean16 = cassandraHost15.getUseSocketKeepalive();
        cassandraHost15.setUseSocketKeepalive(true);
        java.lang.String str19 = cassandraHost15.getHost();
        java.lang.String str20 = cassandraHost15.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "127.0.0.1(127.0.0.1):104");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1471");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean13 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet14 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet15 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet16 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet17 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1(127.0.0.1):10", (int) (short) 52);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient22 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "hi!(hi!)(hi!(hi!)):99");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient22.equals(null)", !hKerberosThriftClient22.equals(null));
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1472");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.lang.String str1 = subject0.toString();
        java.lang.String str2 = subject0.toString();
        boolean boolean3 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet5 = subject0.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost8 = new me.prettyprint.cassandra.service.CassandraHost("223", (int) (short) 0);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient10 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost8, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient10.equals(null)", !hKerberosThriftClient10.equals(null));
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1473");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.1");
        java.lang.String str15 = cassandraHost14.getHost();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "CassandraClient<%s-%d>(CassandraClient<%s-%d>):0");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1474");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet1 = subject0.getPrincipals();
        boolean boolean2 = subject0.isReadOnly();
        subject0.setReadOnly();
        subject0.setReadOnly();
        boolean boolean5 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost7.setCassandraThriftSocketTimeout(0);
        cassandraHost7.setUseSocketKeepalive(false);
        int int12 = cassandraHost7.getPort();
        cassandraHost7.setLifo(false);
        int int15 = cassandraHost7.getPort();
        boolean boolean16 = cassandraHost7.getUseThriftFramedTransport();
        cassandraHost7.setUseSocketKeepalive(true);
        int int19 = cassandraHost7.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, ":9160:-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1475");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet9 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet10 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost14 = new me.prettyprint.cassandra.service.CassandraHost("103", (int) (byte) 1);
        long long15 = cassandraHost14.getMaxWaitTimeWhenExhausted();
        boolean boolean16 = cassandraHost14.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient18 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost14, "99(0.0.0.99)(99(0.0.0.99)):100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient18.equals(null)", !hKerberosThriftClient18.equals(null));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1476");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet39 = subject31.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.1");
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient43 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost41, "9197");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient43.equals(null)", !hKerberosThriftClient43.equals(null));
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1477");
        javax.security.auth.Subject subject1 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet2 = subject1.getPrincipals();
        java.security.Principal[] principalArray3 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet4 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet4, principalArray3);
        java.security.Principal[] principalArray6 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet7 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet7, principalArray6);
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject(false, principalSet2, (java.util.Set<java.security.Principal>) principalSet4, (java.util.Set<java.security.Principal>) principalSet7);
        java.util.Set<java.lang.Object> objSet10 = subject9.getPublicCredentials();
        boolean boolean11 = subject9.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost13 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1");
        java.lang.String str14 = cassandraHost13.getIp();
        cassandraHost13.setMaxWaitTimeWhenExhausted((long) 0);
        boolean boolean17 = cassandraHost13.getLifo();
        cassandraHost13.setUseSocketKeepalive(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient21 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject9, cassandraHost13, "33");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient21.equals(null)", !hKerberosThriftClient21.equals(null));
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1478");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        java.util.Set<java.lang.Object> objSet43 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost46 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):9160", (int) '#');
        java.lang.String str47 = cassandraHost46.getUrl();
        int int48 = cassandraHost46.getMaxFrameSize();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient50 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost46, "CassandraClient<%s-%d>:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient50.equals(null)", !hKerberosThriftClient50.equals(null));
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1479");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.lang.String str40 = subject38.toString();
        java.lang.String str41 = subject38.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 101);
        java.lang.String str45 = cassandraHost44.getHost();
        int int46 = cassandraHost44.getCassandraThriftSocketTimeout();
        boolean boolean47 = cassandraHost44.getUseThriftFramedTransport();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient49 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost44, ":97(:97):12");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient49.equals(null)", !hKerberosThriftClient49.equals(null));
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1480");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        subject87.setReadOnly();
        boolean boolean90 = subject87.equals((java.lang.Object) 359L);
        subject87.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("", (int) (byte) 105);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "Subject(Subject):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1481");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        boolean boolean33 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (byte) 100);
        cassandraHost37.setCassandraThriftSocketTimeout(100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "CassandraClient<%s-%d>:100");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1482");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet41 = subject40.getPrincipals();
        javax.security.auth.Subject subject42 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet43 = subject42.getPrincipals();
        javax.security.auth.Subject subject46 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet47 = subject46.getPrincipals();
        java.security.Principal[] principalArray48 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet49 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet49, principalArray48);
        java.security.Principal[] principalArray51 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet52 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet52, principalArray51);
        javax.security.auth.Subject subject54 = new javax.security.auth.Subject(false, principalSet47, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet52);
        javax.security.auth.Subject subject56 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet57 = subject56.getPrincipals();
        java.security.Principal[] principalArray58 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet59 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet59, principalArray58);
        java.security.Principal[] principalArray61 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet62 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet62, principalArray61);
        javax.security.auth.Subject subject64 = new javax.security.auth.Subject(false, principalSet57, (java.util.Set<java.security.Principal>) principalSet59, (java.util.Set<java.security.Principal>) principalSet62);
        javax.security.auth.Subject subject66 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet67 = subject66.getPrincipals();
        java.security.Principal[] principalArray68 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet69 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet69, principalArray68);
        java.security.Principal[] principalArray71 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet72 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet72, principalArray71);
        javax.security.auth.Subject subject74 = new javax.security.auth.Subject(false, principalSet67, (java.util.Set<java.security.Principal>) principalSet69, (java.util.Set<java.security.Principal>) principalSet72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet49, (java.util.Set<java.security.Principal>) principalSet59, principalSet67);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, principalSet41, principalSet43, principalSet67);
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet79 = subject78.getPrincipals();
        java.security.Principal[] principalArray80 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet81 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet81, principalArray80);
        java.security.Principal[] principalArray83 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet84 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet84, principalArray83);
        javax.security.auth.Subject subject86 = new javax.security.auth.Subject(false, principalSet79, (java.util.Set<java.security.Principal>) principalSet81, (java.util.Set<java.security.Principal>) principalSet84);
        javax.security.auth.Subject subject87 = new javax.security.auth.Subject(false, principalSet3, principalSet41, principalSet79);
        java.util.Set<java.security.Principal> principalSet88 = subject87.getPrincipals();
        java.util.Set<java.security.Principal> principalSet89 = subject87.getPrincipals();
        java.lang.String str90 = subject87.toString();
        java.lang.String str91 = subject87.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost94 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>(CassandraClient<%s-%d>):50", 10185);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient96 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject87, cassandraHost94, "127.0.0.1(127.0.0.1):-1");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient96.equals(null)", !hKerberosThriftClient96.equals(null));
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1483");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet8 = subject0.getPrincipals();
        javax.security.auth.Subject subject9 = new javax.security.auth.Subject();
        boolean boolean10 = subject9.isReadOnly();
        java.lang.String str11 = subject9.toString();
        java.util.Set<java.security.Principal> principalSet12 = subject9.getPrincipals();
        java.util.Set<java.lang.Object> objSet13 = subject9.getPublicCredentials();
        boolean boolean14 = subject0.equals((java.lang.Object) objSet13);
        java.lang.String str15 = subject0.toString();
        java.lang.String str16 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost18 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>:9160");
        java.lang.String str19 = cassandraHost18.getName();
        cassandraHost18.setMaxActive(0);
        int int22 = cassandraHost18.getMaxFrameSize();
        cassandraHost18.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient26 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost18, "33");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient26.equals(null)", !hKerberosThriftClient26.equals(null));
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1484");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        boolean boolean34 = subject31.isReadOnly();
        java.lang.String str35 = subject31.toString();
        subject31.setReadOnly();
        java.lang.String str37 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost40 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160):12", 31);
        boolean boolean41 = subject31.equals((java.lang.Object) cassandraHost40);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost44 = new me.prettyprint.cassandra.service.CassandraHost(":9160(:9160)(:9160(:9160)):88", (int) (short) 100);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient46 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost44, "52(0.0.0.52):32");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient46.equals(null)", !hKerberosThriftClient46.equals(null));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1485");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        java.lang.String str14 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("Subject:\n", (int) (byte) -1);
        boolean boolean18 = cassandraHost17.isPerformNameResolution();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, "Subject");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1486");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.Set<java.lang.Object> objSet8 = subject0.getPrivateCredentials();
        boolean boolean9 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost11 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost11.setCassandraThriftSocketTimeout(0);
        cassandraHost11.setUseSocketKeepalive(false);
        int int16 = cassandraHost11.getPort();
        cassandraHost11.setLifo(false);
        int int19 = cassandraHost11.getPort();
        boolean boolean20 = cassandraHost11.getUseThriftFramedTransport();
        java.lang.String str21 = cassandraHost11.getName();
        boolean boolean22 = subject0.equals((java.lang.Object) cassandraHost11);
        javax.security.auth.Subject subject23 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet24 = subject23.getPublicCredentials();
        boolean boolean25 = subject0.equals((java.lang.Object) objSet24);
        me.prettyprint.cassandra.service.CassandraHost cassandraHost27 = new me.prettyprint.cassandra.service.CassandraHost("3");
        long long28 = cassandraHost27.getMaxWaitTimeWhenExhausted();
        cassandraHost27.setLifo(false);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient32 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost27, "33");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient32.equals(null)", !hKerberosThriftClient32.equals(null));
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1487");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet9 = subject0.getPrincipals();
        boolean boolean10 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet12 = subject0.getPrivateCredentials();
        java.util.Set<java.lang.Object> objSet13 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost17 = new me.prettyprint.cassandra.service.CassandraHost("-1", 35);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient19 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost17, ":9160:9160");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient19.equals(null)", !hKerberosThriftClient19.equals(null));
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1488");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        subject31.setReadOnly();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        boolean boolean36 = subject31.isReadOnly();
        java.util.Set<java.security.Principal> principalSet37 = subject31.getPrincipals();
        boolean boolean38 = subject31.isReadOnly();
        boolean boolean39 = subject31.isReadOnly();
        subject31.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost42 = new me.prettyprint.cassandra.service.CassandraHost(":9160");
        cassandraHost42.setCassandraThriftSocketTimeout(10);
        java.lang.String str45 = cassandraHost42.getName();
        boolean boolean46 = cassandraHost42.getUseThriftFramedTransport();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost49 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong51 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean52 = cassandraHost49.equals((java.lang.Object) (short) 100);
        cassandraHost49.setUseSocketKeepalive(false);
        long long55 = cassandraHost49.getMaxWaitTimeWhenExhausted();
        cassandraHost49.setMaxActive((int) '4');
        int int58 = cassandraHost49.getMaxFrameSize();
        boolean boolean59 = cassandraHost49.getUseThriftFramedTransport();
        boolean boolean60 = cassandraHost42.equals((java.lang.Object) boolean59);
        cassandraHost42.setMaxWaitTimeWhenExhausted(0L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient64 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost42, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient64.equals(null)", !hKerberosThriftClient64.equals(null));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1489");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        boolean boolean33 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost37 = new me.prettyprint.cassandra.service.CassandraHost(":9160((:9160()", (int) (short) 251);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient39 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost37, "86");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient39.equals(null)", !hKerberosThriftClient39.equals(null));
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1490");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, principalSet3, principalSet5, principalSet29);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        javax.security.auth.Subject subject40 = new javax.security.auth.Subject();
        boolean boolean41 = subject40.isReadOnly();
        java.lang.String str42 = subject40.toString();
        subject40.setReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject40.getPrincipals();
        javax.security.auth.Subject subject47 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet48 = subject47.getPrincipals();
        java.security.Principal[] principalArray49 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet50 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet50, principalArray49);
        java.security.Principal[] principalArray52 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet53 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet53, principalArray52);
        javax.security.auth.Subject subject55 = new javax.security.auth.Subject(false, principalSet48, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet53);
        javax.security.auth.Subject subject57 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet58 = subject57.getPrincipals();
        java.security.Principal[] principalArray59 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet60 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet60, principalArray59);
        java.security.Principal[] principalArray62 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet63 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet63, principalArray62);
        javax.security.auth.Subject subject65 = new javax.security.auth.Subject(false, principalSet58, (java.util.Set<java.security.Principal>) principalSet60, (java.util.Set<java.security.Principal>) principalSet63);
        javax.security.auth.Subject subject67 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet68 = subject67.getPrincipals();
        java.security.Principal[] principalArray69 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet70 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet70, principalArray69);
        java.security.Principal[] principalArray72 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet73 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet73, principalArray72);
        javax.security.auth.Subject subject75 = new javax.security.auth.Subject(false, principalSet68, (java.util.Set<java.security.Principal>) principalSet70, (java.util.Set<java.security.Principal>) principalSet73);
        javax.security.auth.Subject subject76 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet50, (java.util.Set<java.security.Principal>) principalSet60, principalSet68);
        java.util.Set<java.security.Principal> principalSet77 = subject76.getPrincipals();
        javax.security.auth.Subject subject78 = new javax.security.auth.Subject(false, principalSet39, principalSet44, principalSet77);
        java.lang.String str79 = subject78.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost82 = new me.prettyprint.cassandra.service.CassandraHost("0.0.0.99", (int) (short) 100);
        cassandraHost82.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient86 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject78, cassandraHost82, "(127.0.0.1):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient86.equals(null)", !hKerberosThriftClient86.equals(null));
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1491");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        subject0.setReadOnly();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("127.0.0.1:9160", (int) (short) 12);
        cassandraHost7.setMaxFrameSize((int) (short) 32);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient11 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "hi!(hi!)(hi!(hi!)):102");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient11.equals(null)", !hKerberosThriftClient11.equals(null));
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1492");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.lang.String str32 = subject31.toString();
        java.util.Set<java.lang.Object> objSet33 = subject31.getPublicCredentials();
        java.lang.String str34 = subject31.toString();
        boolean boolean35 = subject31.isReadOnly();
        java.lang.String str36 = subject31.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost38 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!):9160");
        long long39 = cassandraHost38.getMaxWaitTimeWhenExhausted();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient41 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost38, "10148");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient41.equals(null)", !hKerberosThriftClient41.equals(null));
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1493");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        java.util.Set<java.lang.Object> objSet1 = subject0.getPrivateCredentials();
        subject0.setReadOnly();
        java.lang.String str3 = subject0.toString();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost6 = new me.prettyprint.cassandra.service.CassandraHost(":9160:9160", 0);
        int int7 = cassandraHost6.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient9 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost6, "109");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient9.equals(null)", !hKerberosThriftClient9.equals(null));
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1494");
        javax.security.auth.Subject subject2 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet3 = subject2.getPrincipals();
        java.security.Principal[] principalArray4 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet5 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet5, principalArray4);
        java.security.Principal[] principalArray7 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet8 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet8, principalArray7);
        javax.security.auth.Subject subject10 = new javax.security.auth.Subject(false, principalSet3, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet8);
        javax.security.auth.Subject subject12 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet13 = subject12.getPrincipals();
        java.security.Principal[] principalArray14 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet15 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet15, principalArray14);
        java.security.Principal[] principalArray17 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet18 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet18, principalArray17);
        javax.security.auth.Subject subject20 = new javax.security.auth.Subject(false, principalSet13, (java.util.Set<java.security.Principal>) principalSet15, (java.util.Set<java.security.Principal>) principalSet18);
        javax.security.auth.Subject subject22 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet23 = subject22.getPrincipals();
        java.security.Principal[] principalArray24 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet25 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet25, principalArray24);
        java.security.Principal[] principalArray27 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet28 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet28, principalArray27);
        javax.security.auth.Subject subject30 = new javax.security.auth.Subject(false, principalSet23, (java.util.Set<java.security.Principal>) principalSet25, (java.util.Set<java.security.Principal>) principalSet28);
        javax.security.auth.Subject subject31 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet5, (java.util.Set<java.security.Principal>) principalSet15, principalSet23);
        java.util.Set<java.security.Principal> principalSet32 = subject31.getPrincipals();
        boolean boolean33 = subject31.isReadOnly();
        java.util.Set<java.lang.Object> objSet34 = subject31.getPrivateCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost36 = new me.prettyprint.cassandra.service.CassandraHost("");
        cassandraHost36.setCassandraThriftSocketTimeout(0);
        java.lang.String str39 = cassandraHost36.getUrl();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost41 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>");
        boolean boolean42 = cassandraHost41.getUseSocketKeepalive();
        boolean boolean43 = cassandraHost36.equals((java.lang.Object) boolean42);
        boolean boolean45 = cassandraHost36.equals((java.lang.Object) (-1L));
        cassandraHost36.setMaxFrameSize((int) (byte) 1);
        long long48 = cassandraHost36.getMaxWaitTimeWhenExhausted();
        cassandraHost36.setLifo(true);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient52 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject31, cassandraHost36, "127.0.0.1(127.0.0.1)");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient52.equals(null)", !hKerberosThriftClient52.equals(null));
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1495");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.Set<java.security.Principal> principalSet3 = subject0.getPrincipals();
        java.util.Set<java.security.Principal> principalSet4 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost7 = new me.prettyprint.cassandra.service.CassandraHost("1", 10);
        cassandraHost7.setMaxFrameSize(34);
        java.lang.String str10 = cassandraHost7.getHost();
        int int11 = cassandraHost7.getCassandraThriftSocketTimeout();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient13 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost7, "");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient13.equals(null)", !hKerberosThriftClient13.equals(null));
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1496");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.lang.String str12 = subject0.toString();
        subject0.setReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost16 = new me.prettyprint.cassandra.service.CassandraHost(":9160", 10);
        java.util.concurrent.atomic.AtomicLong atomicLong18 = new java.util.concurrent.atomic.AtomicLong((long) (short) 100);
        boolean boolean19 = cassandraHost16.equals((java.lang.Object) (short) 100);
        long long20 = cassandraHost16.getMaxWaitTimeWhenExhausted();
        boolean boolean21 = cassandraHost16.getUseThriftFramedTransport();
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 50);
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) 3);
        cassandraHost16.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        boolean boolean28 = cassandraHost16.getLifo();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient30 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost16, "hi!(hi!)(hi!(hi!)):97");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient30.equals(null)", !hKerberosThriftClient30.equals(null));
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1497");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("hi!:100", (int) (short) 102);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient17 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "127.0.0.1(127.0.0.1):10");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient17.equals(null)", !hKerberosThriftClient17.equals(null));
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1498");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong9 = new java.util.concurrent.atomic.AtomicLong((long) (short) 1);
        boolean boolean10 = subject0.equals((java.lang.Object) atomicLong9);
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        boolean boolean12 = subject0.isReadOnly();
        java.util.Set<java.security.Principal> principalSet13 = subject0.getPrincipals();
        java.util.Set<java.lang.Object> objSet14 = subject0.getPublicCredentials();
        subject0.setReadOnly();
        boolean boolean17 = subject0.equals((java.lang.Object) "hi!(hi!):101");
        java.util.Set<java.security.Principal> principalSet18 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost20 = new me.prettyprint.cassandra.service.CassandraHost("(127.0.0.1)((127.0.0.1)):0");
        int int21 = cassandraHost20.getPort();
        cassandraHost20.setMaxWaitTimeWhenExhausted(293L);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient25 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost20, "106");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient25.equals(null)", !hKerberosThriftClient25.equals(null));
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1499");
        java.security.Principal[] principalArray1 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet2 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet2, principalArray1);
        javax.security.auth.Subject subject4 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet5 = subject4.getPrincipals();
        javax.security.auth.Subject subject8 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet9 = subject8.getPrincipals();
        java.security.Principal[] principalArray10 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet11 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet11, principalArray10);
        java.security.Principal[] principalArray13 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet14 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet14, principalArray13);
        javax.security.auth.Subject subject16 = new javax.security.auth.Subject(false, principalSet9, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet14);
        javax.security.auth.Subject subject18 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet19 = subject18.getPrincipals();
        java.security.Principal[] principalArray20 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet21 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet21, principalArray20);
        java.security.Principal[] principalArray23 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet24 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet24, principalArray23);
        javax.security.auth.Subject subject26 = new javax.security.auth.Subject(false, principalSet19, (java.util.Set<java.security.Principal>) principalSet21, (java.util.Set<java.security.Principal>) principalSet24);
        javax.security.auth.Subject subject28 = new javax.security.auth.Subject();
        java.util.Set<java.security.Principal> principalSet29 = subject28.getPrincipals();
        java.security.Principal[] principalArray30 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet31 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet31, principalArray30);
        java.security.Principal[] principalArray33 = new java.security.Principal[] {};
        java.util.LinkedHashSet<java.security.Principal> principalSet34 = new java.util.LinkedHashSet<java.security.Principal>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.security.Principal>) principalSet34, principalArray33);
        javax.security.auth.Subject subject36 = new javax.security.auth.Subject(false, principalSet29, (java.util.Set<java.security.Principal>) principalSet31, (java.util.Set<java.security.Principal>) principalSet34);
        javax.security.auth.Subject subject37 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet11, (java.util.Set<java.security.Principal>) principalSet21, principalSet29);
        javax.security.auth.Subject subject38 = new javax.security.auth.Subject(false, (java.util.Set<java.security.Principal>) principalSet2, principalSet5, (java.util.Set<java.security.Principal>) principalSet21);
        java.util.Set<java.security.Principal> principalSet39 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet40 = subject38.getPublicCredentials();
        subject38.setReadOnly();
        subject38.setReadOnly();
        boolean boolean43 = subject38.isReadOnly();
        java.util.Set<java.security.Principal> principalSet44 = subject38.getPrincipals();
        java.util.Set<java.lang.Object> objSet45 = subject38.getPublicCredentials();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost48 = new me.prettyprint.cassandra.service.CassandraHost("hi!(hi!)(hi!(hi!))", 98);
        java.lang.String str49 = cassandraHost48.getUrl();
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient51 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject38, cassandraHost48, "hi!(hi!)(hi!(hi!)):98");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient51.equals(null)", !hKerberosThriftClient51.equals(null));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1500");
        javax.security.auth.Subject subject0 = new javax.security.auth.Subject();
        boolean boolean1 = subject0.isReadOnly();
        java.lang.String str2 = subject0.toString();
        java.util.concurrent.atomic.AtomicLong atomicLong3 = new java.util.concurrent.atomic.AtomicLong();
        double double4 = atomicLong3.doubleValue();
        long long5 = atomicLong3.incrementAndGet();
        boolean boolean6 = subject0.equals((java.lang.Object) long5);
        java.lang.String str7 = subject0.toString();
        java.lang.String str8 = subject0.toString();
        boolean boolean9 = subject0.isReadOnly();
        subject0.setReadOnly();
        java.util.Set<java.lang.Object> objSet11 = subject0.getPrivateCredentials();
        java.util.Set<java.security.Principal> principalSet12 = subject0.getPrincipals();
        me.prettyprint.cassandra.service.CassandraHost cassandraHost15 = new me.prettyprint.cassandra.service.CassandraHost("CassandraClient<%s-%d>", (int) (short) 34);
        java.lang.String str16 = cassandraHost15.toString();
        cassandraHost15.setMaxWaitTimeWhenExhausted((long) (byte) 53);
        me.prettyprint.cassandra.connection.client.HKerberosThriftClient hKerberosThriftClient20 = new me.prettyprint.cassandra.connection.client.HKerberosThriftClient(subject0, cassandraHost15, "50");
        org.junit.Assert.assertTrue("Contract failed: !hKerberosThriftClient20.equals(null)", !hKerberosThriftClient20.equals(null));
    }
}

