import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test01001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01001");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test01002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01002");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap22);
        java.lang.String str24 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider29 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap30;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test01003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01003");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration0.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration0.getParameters();
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01004");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
    }

    @Test
    public void test01005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01005");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01006");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass10 = appConfigurationEntryArray9.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01007");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration19.setoptions(strMap21);
        java.security.Provider provider23 = kerberosUserConfiguration19.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap36);
        kerberosUserConfiguration25.setoptions(strMap36);
        kerberosUserConfiguration19.options = strMap36;
        kerberosUserConfiguration14.options = strMap36;
        kerberosUserConfiguration0.options = strMap36;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test01008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01008");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test01009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01009");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test01010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01010");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.Class<?> wildcardClass5 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test01011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01011");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration54.setoptions(strMap56);
        java.security.Provider provider58 = kerberosUserConfiguration54.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration54.getParameters();
        kerberosUserConfiguration54.refresh();
        java.security.Provider provider61 = kerberosUserConfiguration54.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration54.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration0.setoptions(strMap63);
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str67 = kerberosUserConfiguration66.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration70.options;
        kerberosUserConfiguration66.setoptions(strMap72);
        java.lang.String str74 = kerberosUserConfiguration66.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration66.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration77.refresh();
        java.lang.String str79 = kerberosUserConfiguration77.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration80.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration80);
        kerberosUserConfiguration80.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration87 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration87.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration80.setoptions(strMap88);
        kerberosUserConfiguration77.setoptions(strMap88);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray92 = kerberosUserConfiguration77.getAppConfigurationEntry("");
        kerberosUserConfiguration77.refresh();
        java.lang.String str94 = kerberosUserConfiguration77.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration77.options;
        kerberosUserConfiguration66.options = strMap95;
        kerberosUserConfiguration0.setoptions(strMap95);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test01012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01012");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration16.setoptions(strMap26);
        kerberosUserConfiguration12.options = strMap26;
        kerberosUserConfiguration0.options = strMap26;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters35);
    }

    @Test
    public void test01013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01013");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test01014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01014");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01015");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration18.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider25 = kerberosUserConfiguration18.getProvider();
        java.security.Provider provider26 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration18.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap30;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass33 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test01016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01016");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
    }

    @Test
    public void test01017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01017");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration1.options = strMap25;
        java.security.Provider provider27 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap31;
        java.lang.Class<?> wildcardClass33 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test01018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01018");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration17.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.options = strMap30;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = provider32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test01019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01019");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
    }

    @Test
    public void test01020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01020");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.options;
        java.security.Provider provider48 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration53.setoptions(strMap55);
        kerberosUserConfiguration49.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap63);
        kerberosUserConfiguration49.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration0.setoptions(strMap66);
        java.lang.String str68 = kerberosUserConfiguration0.getType();
        java.security.Provider provider69 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(provider69);
    }

    @Test
    public void test01021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01021");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01022");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass15 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01023");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration0.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01024");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        java.lang.String str22 = kerberosUserConfiguration20.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        kerberosUserConfiguration20.setoptions(strMap31);
        kerberosUserConfiguration9.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str39 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        kerberosUserConfiguration38.setoptions(strMap49);
        kerberosUserConfiguration36.setoptions(strMap49);
        kerberosUserConfiguration9.setoptions(strMap49);
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap57;
        java.lang.Class<?> wildcardClass59 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test01025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01025");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.security.Provider provider1 = kerberosUserConfiguration0.getProvider();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test01026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01026");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration9.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration9.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap29);
        kerberosUserConfiguration21.options = strMap29;
        kerberosUserConfiguration9.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration34.setoptions(strMap36);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.setoptions(strMap42);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test01027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01027");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass12 = appConfigurationEntryArray11.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01028");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration7.setoptions(strMap10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap18);
        kerberosUserConfiguration7.options = strMap18;
        kerberosUserConfiguration0.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration22.getProvider();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration28.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        java.lang.String str41 = kerberosUserConfiguration39.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration42);
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap50);
        kerberosUserConfiguration39.setoptions(strMap50);
        kerberosUserConfiguration28.setoptions(strMap50);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str58 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration60.refresh();
        java.lang.String str62 = kerberosUserConfiguration60.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap68);
        kerberosUserConfiguration60.options = strMap68;
        kerberosUserConfiguration57.setoptions(strMap68);
        kerberosUserConfiguration55.setoptions(strMap68);
        kerberosUserConfiguration28.setoptions(strMap68);
        kerberosUserConfiguration22.setoptions(strMap68);
        kerberosUserConfiguration0.options = strMap68;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration76.options = strMap79;
        java.lang.String str81 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration76.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration76.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str87 = kerberosUserConfiguration86.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration90 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration90.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration90.options;
        kerberosUserConfiguration86.setoptions(strMap92);
        java.lang.String str94 = kerberosUserConfiguration86.getType();
        java.lang.String str95 = kerberosUserConfiguration86.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration86.options;
        kerberosUserConfiguration76.options = strMap96;
        kerberosUserConfiguration0.setoptions(strMap96);
        java.security.Provider provider99 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(provider99);
    }

    @Test
    public void test01029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01029");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.security.Provider provider1 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration2.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration2.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration2);
        kerberosUserConfiguration2.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration2.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap30);
        kerberosUserConfiguration13.options = strMap30;
        kerberosUserConfiguration2.options = strMap30;
        java.security.Provider provider34 = kerberosUserConfiguration2.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration2.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap46);
        kerberosUserConfiguration39.setoptions(strMap46);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration39.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration39.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration52.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration52.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider63 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration52.setoptions(strMap64);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.options = strMap71;
        kerberosUserConfiguration39.options = strMap71;
        kerberosUserConfiguration0.options = strMap71;
        java.security.Provider provider75 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass76 = provider75.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider75);
    }

    @Test
    public void test01030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01030");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
    }

    @Test
    public void test01031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01031");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01032");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.options = strMap16;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap32);
        kerberosUserConfiguration24.options = strMap32;
        kerberosUserConfiguration21.setoptions(strMap32);
        kerberosUserConfiguration19.setoptions(strMap32);
        java.security.Provider provider37 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration19.options;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration19.getParameters();
        java.lang.String str43 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration0.setoptions(strMap44);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test01033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01033");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01034");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
    }

    @Test
    public void test01035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01035");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str27 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test01036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01036");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration12.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration0.options = strMap32;
        java.lang.Class<?> wildcardClass34 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test01037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01037");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test01038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01038");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test01039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01039");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test01040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01040");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass60 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test01041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01041");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01042");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test01043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01043");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration16.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.refresh();
        java.lang.String str28 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider36 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        kerberosUserConfiguration30.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration44.setoptions(strMap57);
        java.security.Provider provider62 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration65.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration65.refresh();
        java.lang.String str69 = kerberosUserConfiguration65.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap70;
        kerberosUserConfiguration30.options = strMap70;
        kerberosUserConfiguration24.setoptions(strMap70);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap76);
        kerberosUserConfiguration0.options = strMap76;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test01044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01044");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test01045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01045");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        kerberosUserConfiguration8.setoptions(strMap19);
        kerberosUserConfiguration6.setoptions(strMap19);
        java.security.Provider provider24 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration25.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap30;
        java.security.Provider provider32 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration33.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration33.getParameters();
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration33.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        kerberosUserConfiguration44.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap52);
        kerberosUserConfiguration41.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration41.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider60 = kerberosUserConfiguration59.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration59.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getoptions();
        kerberosUserConfiguration41.setoptions(strMap62);
        kerberosUserConfiguration33.options = strMap62;
        kerberosUserConfiguration6.setoptions(strMap62);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration66.setoptions(strMap68);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration66.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider73 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration66.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration66.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str78 = kerberosUserConfiguration77.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration77.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration80.options = strMap81;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration77.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration77.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration77.getoptions();
        kerberosUserConfiguration66.options = strMap86;
        kerberosUserConfiguration6.setoptions(strMap86);
        kerberosUserConfiguration0.options = strMap86;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test01046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01046");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test01047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01047");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.options;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration27.getParameters();
        java.lang.String str31 = kerberosUserConfiguration27.getType();
        java.security.Provider provider32 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration34.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.getoptions();
        java.lang.String str41 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration27.options = strMap48;
        kerberosUserConfiguration1.setoptions(strMap48);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test01048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01048");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration4.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap27);
        kerberosUserConfiguration16.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration10.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap37);
        kerberosUserConfiguration10.options = strMap37;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration41.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.options = strMap49;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration51.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration55.setoptions(strMap57);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray60 = kerberosUserConfiguration55.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration62.options = strMap65;
        kerberosUserConfiguration55.setoptions(strMap65);
        kerberosUserConfiguration51.options = strMap65;
        kerberosUserConfiguration41.setoptions(strMap65);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap70;
        kerberosUserConfiguration4.options = strMap70;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.options = strMap75;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test01049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01049");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str18 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        java.lang.String str22 = kerberosUserConfiguration20.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        kerberosUserConfiguration20.options = strMap28;
        kerberosUserConfiguration17.setoptions(strMap28);
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration17.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration17.getParameters();
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration9.setoptions(strMap36);
        kerberosUserConfiguration0.setoptions(strMap36);
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test01050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01050");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration6.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01051");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = provider13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test01052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01052");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test01053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01053");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01054");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.refresh();
        java.lang.String str13 = kerberosUserConfiguration9.getType();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration9.options = strMap17;
        kerberosUserConfiguration0.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
    }

    @Test
    public void test01055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01055");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        java.lang.String str7 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01056");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass9 = appConfigurationEntryArray8.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01057");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
    }

    @Test
    public void test01058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01058");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.refresh();
        java.lang.String str39 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass47 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01059");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.setoptions(strMap9);
        java.security.Provider provider11 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str24 = kerberosUserConfiguration23.getType();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        kerberosUserConfiguration23.options = strMap29;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.lang.String str35 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        java.lang.String str54 = kerberosUserConfiguration52.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap60);
        kerberosUserConfiguration52.options = strMap60;
        kerberosUserConfiguration49.setoptions(strMap60);
        kerberosUserConfiguration47.setoptions(strMap60);
        java.security.Provider provider65 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap66);
        kerberosUserConfiguration39.setoptions(strMap66);
        kerberosUserConfiguration23.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration23.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration17.options = strMap71;
        java.security.Provider provider73 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str77 = kerberosUserConfiguration76.getType();
        kerberosUserConfiguration76.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration79.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration79.options = strMap82;
        kerberosUserConfiguration76.options = strMap82;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = null;
        kerberosUserConfiguration85.options = strMap86;
        java.lang.String str88 = kerberosUserConfiguration85.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration85.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap90);
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration76.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration17.setoptions(strMap93);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration17.getoptions();
        java.lang.String str96 = kerberosUserConfiguration17.getType();
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap98 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration1.setoptions(strMap98);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test01060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01060");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test01061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01061");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test01062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01062");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass27 = strMap26.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01063");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
    }

    @Test
    public void test01064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01064");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test01065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01065");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration0.setoptions(strMap14);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(parameters13);
    }

    @Test
    public void test01066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01066");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.refresh();
        java.lang.String str39 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
    }

    @Test
    public void test01067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01067");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test01068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01068");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01069");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass54 = appConfigurationEntryArray53.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01070");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        java.lang.String str50 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getoptions();
        kerberosUserConfiguration0.options = strMap52;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration54.refresh();
        java.lang.String str58 = kerberosUserConfiguration54.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration54.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration60.refresh();
        java.lang.String str62 = kerberosUserConfiguration60.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        kerberosUserConfiguration63.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration60.setoptions(strMap71);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration60.getoptions();
        kerberosUserConfiguration54.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap77;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test01071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01071");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
    }

    @Test
    public void test01072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01072");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.setoptions(strMap41);
        java.security.Provider provider43 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration0.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test01073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01073");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01074");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        kerberosUserConfiguration8.setoptions(strMap19);
        kerberosUserConfiguration6.setoptions(strMap19);
        java.security.Provider provider24 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration6.options;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration6.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.lang.String str29 = kerberosUserConfiguration6.getType();
        java.security.Provider provider30 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration31.setoptions(strMap33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider38 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration31.options;
        java.security.Provider provider40 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration31.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration45.setoptions(strMap49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration51.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration31.options = strMap55;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str58 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap63);
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration66);
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration71.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters74 = kerberosUserConfiguration71.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.options = strMap75;
        kerberosUserConfiguration57.options = strMap75;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration31.setoptions(strMap80);
        kerberosUserConfiguration6.setoptions(strMap80);
        kerberosUserConfiguration0.options = strMap80;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration84.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration84.setoptions(strMap86);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray89 = kerberosUserConfiguration84.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider91 = kerberosUserConfiguration84.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration84.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider94 = kerberosUserConfiguration84.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration84.options;
        kerberosUserConfiguration0.setoptions(strMap95);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(parameters74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(provider91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(provider94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test01075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01075");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01076");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass22 = strMap21.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01077");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01078");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test01079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01079");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
    }

    @Test
    public void test01080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01080");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        kerberosUserConfiguration10.refresh();
        java.lang.String str27 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider40 = kerberosUserConfiguration39.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap44;
        kerberosUserConfiguration28.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration47.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration64.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap67);
        kerberosUserConfiguration28.options = strMap67;
        kerberosUserConfiguration10.options = strMap67;
        kerberosUserConfiguration0.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test01081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01081");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration24.options = strMap27;
        kerberosUserConfiguration21.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration45.setoptions(strMap58);
        java.security.Provider provider63 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap64);
        kerberosUserConfiguration37.setoptions(strMap64);
        kerberosUserConfiguration21.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap69;
        java.security.Provider provider71 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters76 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(parameters76);
        org.junit.Assert.assertNull(parameters77);
    }

    @Test
    public void test01082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01082");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test01083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01083");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass16 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01084");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01085");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test01086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01086");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass6 = strMap5.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test01087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01087");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01088");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.options;
        java.security.Provider provider48 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration53.setoptions(strMap55);
        kerberosUserConfiguration49.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap63);
        kerberosUserConfiguration49.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration0.setoptions(strMap66);
        java.lang.String str68 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray70 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray70);
    }

    @Test
    public void test01089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01089");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass15 = strMap14.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01090");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration8.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration19.options = strMap22;
        kerberosUserConfiguration16.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        java.lang.String str47 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap53);
        kerberosUserConfiguration45.options = strMap53;
        kerberosUserConfiguration42.setoptions(strMap53);
        kerberosUserConfiguration40.setoptions(strMap53);
        java.security.Provider provider58 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap59);
        kerberosUserConfiguration32.setoptions(strMap59);
        kerberosUserConfiguration16.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration67);
        kerberosUserConfiguration67.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration67.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration76.options = strMap79;
        kerberosUserConfiguration67.options = strMap79;
        java.security.Provider provider82 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration16.options = strMap84;
        kerberosUserConfiguration8.setoptions(strMap84);
        kerberosUserConfiguration0.setoptions(strMap84);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test01091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01091");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        kerberosUserConfiguration21.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration21.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration34.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration34.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider45 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        kerberosUserConfiguration34.setoptions(strMap46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap53;
        kerberosUserConfiguration21.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test01092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01092");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test01093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01093");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01094");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01095");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test01096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01096");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration0.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test01097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01097");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray47 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass50 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test01098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01098");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test01099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01099");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        kerberosUserConfiguration14.setoptions(strMap24);
        kerberosUserConfiguration10.options = strMap24;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration10.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.lang.String str38 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        kerberosUserConfiguration44.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap52);
        kerberosUserConfiguration41.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration35.setoptions(strMap55);
        kerberosUserConfiguration32.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider59 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration10.options = strMap60;
        kerberosUserConfiguration0.options = strMap60;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test01100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01100");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test01101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01101");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass14 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test01102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01102");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(parameters18);
    }

    @Test
    public void test01103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01103");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass6 = strMap5.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test01104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01104");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01105");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
    }

    @Test
    public void test01106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01106");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration1.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass60 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test01107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01107");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test01108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01108");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration20.setoptions(strMap31);
        kerberosUserConfiguration0.options = strMap31;
        java.security.Provider provider34 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider34);
    }

    @Test
    public void test01109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01109");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap9);
        java.lang.Class<?> wildcardClass11 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test01110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01110");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test01111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01111");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = provider15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test01112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01112");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01113");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test01114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01114");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01115");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap16);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test01116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01116");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.lang.String str50 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test01117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01117");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration16.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration16.options = strMap27;
        kerberosUserConfiguration9.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test01118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01118");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        kerberosUserConfiguration5.setoptions(strMap16);
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration5.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration5.getParameters();
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration30.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration36.setoptions(strMap38);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration36.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider43 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration36.options;
        java.security.Provider provider45 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration1.options = strMap51;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test01119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01119");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01120");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str59 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test01121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01121");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.security.Provider provider25 = kerberosUserConfiguration7.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        java.lang.String str38 = kerberosUserConfiguration36.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap47);
        kerberosUserConfiguration36.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration30.setoptions(strMap50);
        kerberosUserConfiguration27.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap53;
        kerberosUserConfiguration1.setoptions(strMap53);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test01122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01122");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01123");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01124");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass16 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01125");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.setoptions(strMap41);
        java.security.Provider provider43 = kerberosUserConfiguration39.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration39.getParameters();
        kerberosUserConfiguration39.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration39.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration0.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test01126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01126");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap26);
        kerberosUserConfiguration0.options = strMap26;
        java.lang.String str29 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration0.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration33.getProvider();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration39.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap44;
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass48 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test01127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01127");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
    }

    @Test
    public void test01128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01128");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test01129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01129");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.options = strMap20;
        java.lang.String str22 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass28 = strMap27.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test01130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01130");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test01131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01131");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01132");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass14 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test01133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01133");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        java.security.Provider provider27 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str32 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap40);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test01134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01134");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.options = strMap28;
        kerberosUserConfiguration22.options = strMap28;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.lang.String str34 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap36);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str49 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        java.lang.String str53 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap59);
        kerberosUserConfiguration51.options = strMap59;
        kerberosUserConfiguration48.setoptions(strMap59);
        kerberosUserConfiguration46.setoptions(strMap59);
        java.security.Provider provider64 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap65);
        kerberosUserConfiguration38.setoptions(strMap65);
        kerberosUserConfiguration22.setoptions(strMap65);
        kerberosUserConfiguration10.options = strMap65;
        kerberosUserConfiguration0.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray73 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str74 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test01135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01135");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        kerberosUserConfiguration0.options = strMap25;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass32 = parameters31.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters31);
    }

    @Test
    public void test01136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01136");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01137");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider15 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test01138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01138");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.setoptions(strMap5);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test01139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01139");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap22);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider27 = kerberosUserConfiguration26.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration16.setoptions(strMap33);
        kerberosUserConfiguration0.options = strMap33;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test01140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01140");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration18.refresh();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap29);
        kerberosUserConfiguration18.setoptions(strMap29);
        kerberosUserConfiguration7.setoptions(strMap29);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str37 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        java.lang.String str41 = kerberosUserConfiguration39.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap47);
        kerberosUserConfiguration39.options = strMap47;
        kerberosUserConfiguration36.setoptions(strMap47);
        kerberosUserConfiguration34.setoptions(strMap47);
        kerberosUserConfiguration7.setoptions(strMap47);
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap55);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test01141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01141");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider3);
    }

    @Test
    public void test01142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01142");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01143");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test01144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01144");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider20 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
    }

    @Test
    public void test01145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01145");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01146");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider2 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(provider2);
    }

    @Test
    public void test01147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01147");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01148");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test01149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01149");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass10 = strMap9.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01150");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
    }

    @Test
    public void test01151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01151");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration4.getAppConfigurationEntry("");
        java.security.Provider provider13 = kerberosUserConfiguration4.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.options;
        java.security.Provider provider30 = kerberosUserConfiguration25.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration31.setoptions(strMap33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.options = strMap37;
        kerberosUserConfiguration14.setoptions(strMap37);
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap42;
        kerberosUserConfiguration0.options = strMap42;
        java.lang.Class<?> wildcardClass45 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test01152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01152");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = parameters8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
    }

    @Test
    public void test01153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01153");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test01154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01154");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration0.getoptions();
        java.lang.String str88 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test01155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01155");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap22);
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = provider24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider24);
    }

    @Test
    public void test01156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01156");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration11.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap20;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test01157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01157");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.refresh();
        java.lang.String str39 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test01158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01158");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
    }

    @Test
    public void test01159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01159");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test01160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01160");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01161");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str18 = kerberosUserConfiguration17.getType();
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration20.options = strMap23;
        kerberosUserConfiguration17.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test01162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01162");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01163");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test01164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01164");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.lang.String str9 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap23);
        kerberosUserConfiguration12.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration6.setoptions(strMap26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration6.options = strMap33;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.setoptions(strMap41);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration43.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.options = strMap45;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.setoptions(strMap53);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration51.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration58.options = strMap61;
        kerberosUserConfiguration51.setoptions(strMap61);
        kerberosUserConfiguration47.options = strMap61;
        kerberosUserConfiguration37.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap66;
        kerberosUserConfiguration0.options = strMap66;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration70.setoptions(strMap72);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration70.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap76;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test01165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01165");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test01166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01166");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test01167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01167");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration45);
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap50);
        kerberosUserConfiguration0.setoptions(strMap50);
        java.security.Provider provider53 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass54 = provider53.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider53);
    }

    @Test
    public void test01168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01168");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap28);
        kerberosUserConfiguration11.options = strMap28;
        kerberosUserConfiguration0.options = strMap28;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.options;
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.setoptions(strMap39);
        java.security.Provider provider41 = kerberosUserConfiguration37.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str46 = kerberosUserConfiguration37.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.options = strMap48;
        java.lang.String str50 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.options;
        java.security.Provider provider52 = kerberosUserConfiguration47.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration53.setoptions(strMap55);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray58 = kerberosUserConfiguration53.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.options = strMap59;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        java.lang.String str63 = kerberosUserConfiguration61.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration64.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.setoptions(strMap69);
        kerberosUserConfiguration61.options = strMap69;
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration61.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        java.lang.String str75 = kerberosUserConfiguration73.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration76.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap81);
        kerberosUserConfiguration73.options = strMap81;
        kerberosUserConfiguration61.setoptions(strMap81);
        kerberosUserConfiguration47.setoptions(strMap81);
        kerberosUserConfiguration37.options = strMap81;
        kerberosUserConfiguration0.setoptions(strMap81);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray90 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass91 = appConfigurationEntryArray90.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test01169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01169");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration1.options = strMap52;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray55 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNull(parameters50);
    }

    @Test
    public void test01170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01170");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration24.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.setoptions(strMap42);
        java.security.Provider provider44 = kerberosUserConfiguration40.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration40.getParameters();
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration40.getParameters();
        java.lang.String str48 = kerberosUserConfiguration40.getType();
        kerberosUserConfiguration40.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration50.options = strMap53;
        java.lang.String str55 = kerberosUserConfiguration50.getType();
        kerberosUserConfiguration50.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray58 = kerberosUserConfiguration50.getAppConfigurationEntry("hi!");
        java.lang.String str59 = kerberosUserConfiguration50.getType();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration50.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str62 = kerberosUserConfiguration61.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap67);
        kerberosUserConfiguration61.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration61.getoptions();
        kerberosUserConfiguration50.setoptions(strMap70);
        kerberosUserConfiguration40.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap75;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test01171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01171");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration34);
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap51);
        kerberosUserConfiguration34.options = strMap51;
        kerberosUserConfiguration23.options = strMap51;
        java.security.Provider provider55 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration23.options;
        java.security.Provider provider58 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNull(parameters64);
    }

    @Test
    public void test01172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01172");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters8);
    }

    @Test
    public void test01173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01173");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass26 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test01174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01174");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap24);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration29.options = strMap32;
        kerberosUserConfiguration22.setoptions(strMap32);
        kerberosUserConfiguration18.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        kerberosUserConfiguration37.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration18.options = strMap40;
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration18.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str56 = kerberosUserConfiguration55.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        java.lang.String str60 = kerberosUserConfiguration58.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap66);
        kerberosUserConfiguration58.options = strMap66;
        kerberosUserConfiguration55.setoptions(strMap66);
        kerberosUserConfiguration53.setoptions(strMap66);
        java.security.Provider provider71 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap72);
        kerberosUserConfiguration45.setoptions(strMap72);
        kerberosUserConfiguration18.options = strMap72;
        kerberosUserConfiguration0.setoptions(strMap72);
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider78 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = provider78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNull(provider78);
    }

    @Test
    public void test01175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01175");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01176");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider15 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration9.setoptions(strMap16);
        kerberosUserConfiguration0.options = strMap16;
        java.lang.Class<?> wildcardClass19 = strMap16.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01177");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters4);
    }

    @Test
    public void test01178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01178");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01179");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration14.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider25 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration14.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass31 = strMap30.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01180");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01181");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        java.security.Provider provider86 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration87 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration87.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration89 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = null;
        kerberosUserConfiguration89.options = strMap90;
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration89.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration87.setoptions(strMap92);
        javax.security.auth.login.Configuration.Parameters parameters94 = kerberosUserConfiguration87.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration87.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray97 = kerberosUserConfiguration87.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap98 = kerberosUserConfiguration87.options;
        kerberosUserConfiguration0.setoptions(strMap98);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(provider86);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(parameters94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test01182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01182");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01183");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass57 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test01184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01184");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.options;
        java.security.Provider provider32 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test01185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01185");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test01186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01186");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01187");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01188");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
    }

    @Test
    public void test01189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01189");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap55);
        java.security.Provider provider57 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass58 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test01190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01190");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        kerberosUserConfiguration9.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap23);
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        java.lang.String str36 = kerberosUserConfiguration34.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap42);
        kerberosUserConfiguration34.options = strMap42;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration34.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration26.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration51.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration51.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration26.options = strMap66;
        kerberosUserConfiguration9.setoptions(strMap66);
        kerberosUserConfiguration0.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test01191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01191");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01192");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass18 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test01193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01193");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration60.setoptions(strMap62);
        java.security.Provider provider64 = kerberosUserConfiguration60.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration60.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration60);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray68 = kerberosUserConfiguration60.getAppConfigurationEntry("");
        java.security.Provider provider69 = kerberosUserConfiguration60.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration60.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap71);
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test01194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01194");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap16;
        kerberosUserConfiguration0.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
    }

    @Test
    public void test01195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01195");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.options;
        java.security.Provider provider15 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration22.setoptions(strMap35);
        java.security.Provider provider40 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration41.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap46;
        java.security.Provider provider48 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration49.setoptions(strMap51);
        java.security.Provider provider53 = kerberosUserConfiguration49.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration49.getParameters();
        kerberosUserConfiguration49.refresh();
        java.security.Provider provider56 = kerberosUserConfiguration49.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration57.refresh();
        java.lang.String str59 = kerberosUserConfiguration57.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration60);
        kerberosUserConfiguration60.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap68);
        kerberosUserConfiguration57.setoptions(strMap68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration57.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider76 = kerberosUserConfiguration75.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration75.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getoptions();
        kerberosUserConfiguration57.setoptions(strMap78);
        kerberosUserConfiguration49.options = strMap78;
        kerberosUserConfiguration22.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration1.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration1.options;
        java.lang.String str85 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test01196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01196");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration6.options = strMap18;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
    }

    @Test
    public void test01197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01197");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test01198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01198");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration8.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.lang.String str20 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration37.refresh();
        java.lang.String str39 = kerberosUserConfiguration37.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap45);
        kerberosUserConfiguration37.options = strMap45;
        kerberosUserConfiguration34.setoptions(strMap45);
        kerberosUserConfiguration32.setoptions(strMap45);
        java.security.Provider provider50 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap51);
        kerberosUserConfiguration24.setoptions(strMap51);
        kerberosUserConfiguration8.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap62);
        kerberosUserConfiguration0.options = strMap62;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test01199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01199");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = strMap7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test01200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01200");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration24.getProvider();
        java.lang.String str32 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap33);
        kerberosUserConfiguration1.setoptions(strMap33);
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.setoptions(strMap39);
        java.security.Provider provider41 = kerberosUserConfiguration37.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration37.getParameters();
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration37.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.security.Provider provider47 = kerberosUserConfiguration37.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider54 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.getoptions();
        kerberosUserConfiguration48.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str65 = kerberosUserConfiguration64.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration67.refresh();
        java.lang.String str69 = kerberosUserConfiguration67.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration72.options = strMap73;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration70.setoptions(strMap75);
        kerberosUserConfiguration67.options = strMap75;
        kerberosUserConfiguration64.setoptions(strMap75);
        kerberosUserConfiguration62.setoptions(strMap75);
        java.security.Provider provider80 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap81);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters84 = kerberosUserConfiguration83.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration83.refresh();
        java.lang.String str87 = kerberosUserConfiguration83.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.options = strMap88;
        kerberosUserConfiguration48.options = strMap88;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray92 = kerberosUserConfiguration48.getAppConfigurationEntry("");
        kerberosUserConfiguration48.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration37.options = strMap96;
        kerberosUserConfiguration1.options = strMap96;
        java.security.Provider provider99 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray92);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(provider99);
    }

    @Test
    public void test01201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01201");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration1.setoptions(strMap57);
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test01202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01202");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        kerberosUserConfiguration22.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap42);
        kerberosUserConfiguration14.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration46.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration57);
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.options = strMap66;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str69 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap74);
        kerberosUserConfiguration57.options = strMap74;
        kerberosUserConfiguration46.options = strMap74;
        java.security.Provider provider78 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration46.options;
        java.security.Provider provider81 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.setoptions(strMap85);
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = null;
        kerberosUserConfiguration0.setoptions(strMap88);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(parameters87);
    }

    @Test
    public void test01203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01203");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01204");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01205");
        javax.security.auth.login.Configuration configuration0 = javax.security.auth.login.Configuration.getConfiguration();
        javax.security.auth.login.Configuration.setConfiguration(configuration0);
        java.lang.String str2 = configuration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters3 = configuration0.getParameters();
        java.security.Provider provider4 = configuration0.getProvider();
        org.junit.Assert.assertNotNull(configuration0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(provider4);
    }

    @Test
    public void test01206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01206");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(parameters28);
    }

    @Test
    public void test01207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01207");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.lang.String str94 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray96 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters97 = kerberosUserConfiguration0.getParameters();
        java.lang.String str98 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap99 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray96);
        org.junit.Assert.assertNull(parameters97);
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test01208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01208");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap28);
        kerberosUserConfiguration11.options = strMap28;
        kerberosUserConfiguration0.options = strMap28;
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass33 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test01209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01209");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration8.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.options = strMap15;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test01210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01210");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration9.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        kerberosUserConfiguration29.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.lang.String str41 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str56 = kerberosUserConfiguration55.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        java.lang.String str60 = kerberosUserConfiguration58.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap66);
        kerberosUserConfiguration58.options = strMap66;
        kerberosUserConfiguration55.setoptions(strMap66);
        kerberosUserConfiguration53.setoptions(strMap66);
        java.security.Provider provider71 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap72);
        kerberosUserConfiguration45.setoptions(strMap72);
        kerberosUserConfiguration29.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration23.options = strMap77;
        java.security.Provider provider79 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap81;
        kerberosUserConfiguration0.options = strMap81;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters85 = kerberosUserConfiguration84.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration84.refresh();
        java.lang.String str88 = kerberosUserConfiguration84.getType();
        kerberosUserConfiguration84.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration91 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration91.getoptions();
        kerberosUserConfiguration84.options = strMap92;
        kerberosUserConfiguration0.setoptions(strMap92);
        java.lang.String str95 = kerberosUserConfiguration0.getType();
        java.security.Provider provider96 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass97 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test01211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01211");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test01212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01212");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass28 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test01213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01213");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test01214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01214");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test01215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01215");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.refresh();
        java.lang.String str39 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration0.getParameters();
        java.lang.String str48 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.options;
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider50);
    }

    @Test
    public void test01216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01216");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
    }

    @Test
    public void test01217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01217");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration5.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration5.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider19 = kerberosUserConfiguration5.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration20.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider31 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration20.setoptions(strMap32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap39;
        kerberosUserConfiguration5.options = strMap39;
        kerberosUserConfiguration1.options = strMap39;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
    }

    @Test
    public void test01218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01218");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass5 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test01219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01219");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test01220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01220");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration9.setoptions(strMap20);
        kerberosUserConfiguration7.setoptions(strMap20);
        java.security.Provider provider25 = kerberosUserConfiguration7.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration26.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap31;
        kerberosUserConfiguration0.setoptions(strMap31);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
    }

    @Test
    public void test01221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01221");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.options = strMap46;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
    }

    @Test
    public void test01222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01222");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test01223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01223");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration17.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.lang.String str30 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.security.Provider provider32 = kerberosUserConfiguration27.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap39;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration41.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        java.lang.String str55 = kerberosUserConfiguration53.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration56.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap61);
        kerberosUserConfiguration53.options = strMap61;
        kerberosUserConfiguration41.setoptions(strMap61);
        kerberosUserConfiguration27.setoptions(strMap61);
        kerberosUserConfiguration17.options = strMap61;
        kerberosUserConfiguration0.setoptions(strMap61);
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider69 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNull(provider69);
    }

    @Test
    public void test01224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01224");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        java.lang.String str26 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test01225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01225");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration0.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass25 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test01226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01226");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration0.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration17.setoptions(strMap20);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap31);
        java.security.Provider provider33 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.options = strMap43;
        kerberosUserConfiguration37.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.lang.String str49 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str64 = kerberosUserConfiguration63.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        java.lang.String str68 = kerberosUserConfiguration66.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration69.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.setoptions(strMap74);
        kerberosUserConfiguration66.options = strMap74;
        kerberosUserConfiguration63.setoptions(strMap74);
        kerberosUserConfiguration61.setoptions(strMap74);
        java.security.Provider provider79 = kerberosUserConfiguration61.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap80);
        kerberosUserConfiguration53.setoptions(strMap80);
        kerberosUserConfiguration37.setoptions(strMap80);
        kerberosUserConfiguration25.options = strMap80;
        kerberosUserConfiguration17.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap86);
        kerberosUserConfiguration0.options = strMap86;
        javax.security.auth.login.Configuration.Parameters parameters89 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(parameters89);
    }

    @Test
    public void test01227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01227");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider18 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider23 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        kerberosUserConfiguration29.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.lang.String str41 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str56 = kerberosUserConfiguration55.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        java.lang.String str60 = kerberosUserConfiguration58.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap66);
        kerberosUserConfiguration58.options = strMap66;
        kerberosUserConfiguration55.setoptions(strMap66);
        kerberosUserConfiguration53.setoptions(strMap66);
        java.security.Provider provider71 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap72);
        kerberosUserConfiguration45.setoptions(strMap72);
        kerberosUserConfiguration29.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration29.getoptions();
        java.security.Provider provider77 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap79);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.setoptions(strMap82);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test01228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01228");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration16.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider27 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration16.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap35;
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.options = strMap38;
        java.lang.Class<?> wildcardClass40 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test01229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01229");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.Class<?> wildcardClass22 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01230");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration34);
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap51);
        kerberosUserConfiguration34.options = strMap51;
        kerberosUserConfiguration23.options = strMap51;
        java.security.Provider provider55 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration23.options;
        java.security.Provider provider58 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str62 = kerberosUserConfiguration1.getType();
        java.lang.String str63 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test01231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01231");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test01232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01232");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01233");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters22);
    }

    @Test
    public void test01234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01234");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test01235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01235");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass15 = appConfigurationEntryArray14.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01236");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01237");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str47 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap59);
        kerberosUserConfiguration48.setoptions(strMap59);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration48.getAppConfigurationEntry("");
        kerberosUserConfiguration48.refresh();
        java.lang.String str65 = kerberosUserConfiguration48.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration66.setoptions(strMap68);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration66.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider73 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration66.options;
        java.security.Provider provider75 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration66.options;
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider78 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap79);
        kerberosUserConfiguration0.setoptions(strMap79);
        java.lang.Class<?> wildcardClass82 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test01238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01238");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.options = strMap11;
        kerberosUserConfiguration5.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.lang.String str17 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration1.options = strMap21;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01239");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration3.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap6;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider17 = kerberosUserConfiguration10.getProvider();
        java.security.Provider provider18 = kerberosUserConfiguration10.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap26);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
    }

    @Test
    public void test01240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01240");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration0.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test01241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01241");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test01242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01242");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration24.options = strMap27;
        kerberosUserConfiguration21.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration45.setoptions(strMap58);
        java.security.Provider provider63 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap64);
        kerberosUserConfiguration37.setoptions(strMap64);
        kerberosUserConfiguration21.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap69;
        java.security.Provider provider71 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration75.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration75.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration75.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = null;
        kerberosUserConfiguration84.options = strMap85;
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = null;
        kerberosUserConfiguration84.setoptions(strMap87);
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration75.setoptions(strMap89);
        javax.security.auth.login.Configuration.Parameters parameters91 = kerberosUserConfiguration75.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration75.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration1.options = strMap93;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(parameters91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test01243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01243");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test01244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01244");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01245");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test01246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01246");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = parameters7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test01247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01247");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass27 = strMap26.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test01248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01248");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.options;
        java.security.Provider provider48 = kerberosUserConfiguration0.getProvider();
        java.lang.String str49 = kerberosUserConfiguration0.getType();
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(provider50);
    }

    @Test
    public void test01249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01249");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.refresh();
        java.lang.String str10 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider18 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration12.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        kerberosUserConfiguration28.setoptions(strMap39);
        kerberosUserConfiguration26.setoptions(strMap39);
        java.security.Provider provider44 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.refresh();
        java.lang.String str51 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap52;
        kerberosUserConfiguration12.options = strMap52;
        kerberosUserConfiguration6.setoptions(strMap52);
        java.security.Provider provider56 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap62);
        java.lang.Class<?> wildcardClass64 = strMap62.getClass();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test01250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01250");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01251");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test01252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01252");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.lang.String str17 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        java.lang.String str22 = kerberosUserConfiguration20.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        kerberosUserConfiguration20.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration14.setoptions(strMap34);
        kerberosUserConfiguration0.options = strMap34;
        java.lang.Class<?> wildcardClass37 = strMap34.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test01253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01253");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.setoptions(strMap30);
        java.lang.String str32 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
    }

    @Test
    public void test01254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01254");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration7.getParameters();
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration28.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        kerberosUserConfiguration28.options = strMap39;
        kerberosUserConfiguration7.setoptions(strMap39);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass47 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01255");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        java.lang.Class<?> wildcardClass24 = strMap22.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test01256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01256");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test01257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01257");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
    }

    @Test
    public void test01258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01258");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        kerberosUserConfiguration6.refresh();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test01259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01259");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        kerberosUserConfiguration59.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration62.options = strMap65;
        kerberosUserConfiguration59.options = strMap65;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.lang.String str71 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration59.options;
        kerberosUserConfiguration0.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = null;
        kerberosUserConfiguration0.setoptions(strMap84);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray87 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test01260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01260");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test01261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01261");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration54.setoptions(strMap56);
        java.security.Provider provider58 = kerberosUserConfiguration54.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration54.getParameters();
        kerberosUserConfiguration54.refresh();
        java.security.Provider provider61 = kerberosUserConfiguration54.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration54.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration0.setoptions(strMap63);
        java.security.Provider provider65 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider65);
    }

    @Test
    public void test01262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01262");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.refresh();
        java.lang.String str12 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider20 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration14.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        java.lang.String str35 = kerberosUserConfiguration33.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap41);
        kerberosUserConfiguration33.options = strMap41;
        kerberosUserConfiguration30.setoptions(strMap41);
        kerberosUserConfiguration28.setoptions(strMap41);
        java.security.Provider provider46 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap47);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.refresh();
        java.lang.String str53 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap54;
        kerberosUserConfiguration14.options = strMap54;
        kerberosUserConfiguration8.setoptions(strMap54);
        java.security.Provider provider58 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration63.options = strMap66;
        kerberosUserConfiguration60.options = strMap66;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.lang.String str72 = kerberosUserConfiguration69.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration60.options;
        kerberosUserConfiguration8.setoptions(strMap77);
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider80 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration8.setoptions(strMap81);
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap84);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test01263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01263");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01264");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test01265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01265");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
    }

    @Test
    public void test01266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01266");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration1.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test01267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01267");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.lang.String str15 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration10.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration10.setoptions(strMap30);
        kerberosUserConfiguration0.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider40 = kerberosUserConfiguration33.getProvider();
        java.security.Provider provider41 = kerberosUserConfiguration33.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration33.getParameters();
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration45.setoptions(strMap47);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration45.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration52.options = strMap55;
        kerberosUserConfiguration45.setoptions(strMap55);
        java.lang.String str58 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration65.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration65.setoptions(strMap70);
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration65.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration65.getoptions();
        kerberosUserConfiguration62.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration45.options = strMap75;
        kerberosUserConfiguration33.options = strMap75;
        kerberosUserConfiguration0.setoptions(strMap75);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test01268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01268");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration0.setoptions(strMap20);
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test01269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01269");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01270");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap16;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        kerberosUserConfiguration7.options = strMap24;
        java.lang.String str27 = kerberosUserConfiguration7.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.security.Provider provider35 = kerberosUserConfiguration30.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration36.setoptions(strMap38);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration36.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap42;
        java.lang.String str44 = kerberosUserConfiguration30.getType();
        java.security.Provider provider45 = kerberosUserConfiguration30.getProvider();
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap48;
        kerberosUserConfiguration0.setoptions(strMap48);
        java.lang.String str51 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass53 = strMap52.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test01271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01271");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        java.lang.String str18 = kerberosUserConfiguration1.getType();
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider20 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test01272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01272");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test01273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01273");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNull(parameters25);
    }

    @Test
    public void test01274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01274");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01275");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.lang.String str94 = kerberosUserConfiguration0.getType();
        java.security.Provider provider95 = kerberosUserConfiguration0.getProvider();
        java.lang.String str96 = kerberosUserConfiguration0.getType();
        java.security.Provider provider97 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap98 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap99 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNull(provider97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test01276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01276");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.lang.String str19 = kerberosUserConfiguration6.getType();
        java.security.Provider provider20 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test01277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01277");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test01278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01278");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test01279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01279");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01280");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration16.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration0.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider31 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNull(provider31);
    }

    @Test
    public void test01281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01281");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test01282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01282");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01283");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration34);
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap51);
        kerberosUserConfiguration34.options = strMap51;
        kerberosUserConfiguration23.options = strMap51;
        java.security.Provider provider55 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration23.options;
        java.security.Provider provider58 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str62 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass65 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test01284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01284");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider33 = kerberosUserConfiguration26.getProvider();
        java.security.Provider provider34 = kerberosUserConfiguration26.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration26.getParameters();
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration0.setoptions(strMap37);
        java.lang.Class<?> wildcardClass39 = strMap37.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test01285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01285");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test01286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01286");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01287");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01288");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap31);
        kerberosUserConfiguration14.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap34);
        kerberosUserConfiguration6.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap37;
        java.security.Provider provider39 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass40 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test01289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01289");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.options;
        java.security.Provider provider15 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        java.lang.String str35 = kerberosUserConfiguration33.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration36);
        kerberosUserConfiguration36.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap44);
        kerberosUserConfiguration33.setoptions(strMap44);
        kerberosUserConfiguration22.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str52 = kerberosUserConfiguration51.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration54.refresh();
        java.lang.String str56 = kerberosUserConfiguration54.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap62);
        kerberosUserConfiguration54.options = strMap62;
        kerberosUserConfiguration51.setoptions(strMap62);
        kerberosUserConfiguration49.setoptions(strMap62);
        kerberosUserConfiguration22.setoptions(strMap62);
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration0.setoptions(strMap70);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test01290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01290");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration0.options = strMap8;
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01291");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap25);
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration29.setoptions(strMap31);
        java.security.Provider provider33 = kerberosUserConfiguration29.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration29.getParameters();
        kerberosUserConfiguration29.refresh();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration19.options = strMap37;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getoptions();
        java.lang.String str46 = kerberosUserConfiguration39.getType();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration39.getParameters();
        java.lang.String str48 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap52;
        java.lang.Class<?> wildcardClass54 = strMap52.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01292");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01293");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.lang.String str19 = kerberosUserConfiguration6.getType();
        java.security.Provider provider20 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap46);
        kerberosUserConfiguration35.setoptions(strMap46);
        kerberosUserConfiguration24.setoptions(strMap46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str54 = kerberosUserConfiguration53.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration56.refresh();
        java.lang.String str58 = kerberosUserConfiguration56.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration61.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap64);
        kerberosUserConfiguration56.options = strMap64;
        kerberosUserConfiguration53.setoptions(strMap64);
        kerberosUserConfiguration51.setoptions(strMap64);
        kerberosUserConfiguration24.setoptions(strMap64);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.options = strMap72;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test01294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01294");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration14.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider25 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration14.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        kerberosUserConfiguration0.refresh();
        java.lang.String str31 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test01295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01295");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = strMap7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test01296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01296");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test01297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01297");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test01298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01298");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test01299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01299");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass16 = strMap15.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01300");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.lang.String str15 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration10.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration10.setoptions(strMap30);
        kerberosUserConfiguration0.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass36 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test01301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01301");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        java.lang.String str50 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration0.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass54 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01302");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test01303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01303");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass4 = strMap3.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test01304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01304");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap16;
        kerberosUserConfiguration0.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        java.lang.String str24 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap30);
        kerberosUserConfiguration22.options = strMap30;
        kerberosUserConfiguration19.setoptions(strMap30);
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration19.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration36.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap39);
        kerberosUserConfiguration0.options = strMap39;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration0.options = strMap47;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test01305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01305");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap9);
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01306");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider28 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test01307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01307");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass54 = appConfigurationEntryArray53.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01308");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(parameters6);
    }

    @Test
    public void test01309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01309");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.setoptions(strMap17);
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test01310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01310");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test01311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01311");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str52 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test01312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01312");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.lang.Class<?> wildcardClass21 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test01313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01313");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap26);
        kerberosUserConfiguration0.options = strMap26;
        java.lang.String str29 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration0.options = strMap30;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test01314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01314");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider19 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.security.Provider provider24 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration32.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap52);
        kerberosUserConfiguration44.options = strMap52;
        kerberosUserConfiguration32.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration26.setoptions(strMap56);
        kerberosUserConfiguration18.options = strMap56;
        kerberosUserConfiguration0.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test01315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01315");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap62);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration57.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration0.options = strMap66;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str69 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test01316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01316");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        kerberosUserConfiguration5.setoptions(strMap16);
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration5.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration5.getParameters();
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        java.lang.Class<?> wildcardClass30 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test01317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01317");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.setoptions(strMap30);
        java.lang.Class<?> wildcardClass32 = strMap30.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test01318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01318");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters18);
    }

    @Test
    public void test01319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01319");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration13.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration19.setoptions(strMap21);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider26 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration13.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap32);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test01320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01320");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = provider15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test01321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01321");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01322");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test01323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01323");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap25);
        kerberosUserConfiguration8.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.setoptions(strMap28);
        kerberosUserConfiguration0.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration0.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str35 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test01324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01324");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration24.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap36);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration43.options = strMap46;
        java.lang.String str48 = kerberosUserConfiguration43.getType();
        kerberosUserConfiguration43.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration43.getAppConfigurationEntry("hi!");
        java.lang.String str52 = kerberosUserConfiguration43.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration43.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration0.setoptions(strMap55);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test01325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01325");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass22 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test01326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01326");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test01327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01327");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test01328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01328");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test01329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01329");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        kerberosUserConfiguration11.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration16.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration11.setoptions(strMap29);
        kerberosUserConfiguration0.setoptions(strMap29);
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        java.security.Provider provider33 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(provider33);
    }

    @Test
    public void test01330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01330");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test01331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01331");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.lang.String str21 = kerberosUserConfiguration8.getType();
        java.security.Provider provider22 = kerberosUserConfiguration8.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration1.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration27.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration27.getType();
        kerberosUserConfiguration27.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration27.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider42 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration36.setoptions(strMap43);
        kerberosUserConfiguration27.options = strMap43;
        kerberosUserConfiguration1.options = strMap43;
        java.lang.Class<?> wildcardClass47 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01332");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
    }

    @Test
    public void test01333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01333");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.lang.String str94 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray96 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters97 = kerberosUserConfiguration0.getParameters();
        java.lang.String str98 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray96);
        org.junit.Assert.assertNull(parameters97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test01334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01334");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap17;
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str23 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01335");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration12.setoptions(strMap14);
        java.security.Provider provider16 = kerberosUserConfiguration12.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration12.getParameters();
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration0.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
    }

    @Test
    public void test01336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01336");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters50);
    }

    @Test
    public void test01337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01337");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters14);
    }

    @Test
    public void test01338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01338");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01339");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01340");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test01341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01341");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test01342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01342");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration0.options = strMap11;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        java.lang.Class<?> wildcardClass26 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test01343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01343");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test01344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01344");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass13 = appConfigurationEntryArray12.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test01345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01345");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test01346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01346");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration86.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration86.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration86.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration86);
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration86.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap93;
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test01347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01347");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass20 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test01348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01348");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        kerberosUserConfiguration10.refresh();
        java.lang.String str27 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider40 = kerberosUserConfiguration39.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap44;
        kerberosUserConfiguration28.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration47.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration64.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap67);
        kerberosUserConfiguration28.options = strMap67;
        kerberosUserConfiguration10.options = strMap67;
        kerberosUserConfiguration0.setoptions(strMap67);
        java.lang.String str72 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass74 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test01349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01349");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test01350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01350");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider26 = kerberosUserConfiguration25.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration7.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.setoptions(strMap32);
        java.security.Provider provider34 = kerberosUserConfiguration30.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration30.getParameters();
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration7.setoptions(strMap38);
        kerberosUserConfiguration1.options = strMap38;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
    }

    @Test
    public void test01351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01351");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration22.setoptions(strMap25);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getoptions();
        java.security.Provider provider29 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.setoptions(strMap32);
        java.security.Provider provider34 = kerberosUserConfiguration30.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration43.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap55);
        kerberosUserConfiguration38.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration38.setoptions(strMap58);
        kerberosUserConfiguration30.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration22.options = strMap61;
        kerberosUserConfiguration0.setoptions(strMap61);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test01352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01352");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str16 = kerberosUserConfiguration15.getType();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.options = strMap21;
        kerberosUserConfiguration15.options = strMap21;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.lang.String str27 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration11.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str34 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap35;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test01353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01353");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass27 = provider26.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
    }

    @Test
    public void test01354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01354");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration14.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider25 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration14.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass32 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test01355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01355");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test01356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01356");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration12.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.lang.String str24 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str39 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        kerberosUserConfiguration38.setoptions(strMap49);
        kerberosUserConfiguration36.setoptions(strMap49);
        java.security.Provider provider54 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap55);
        kerberosUserConfiguration28.setoptions(strMap55);
        kerberosUserConfiguration12.setoptions(strMap55);
        kerberosUserConfiguration0.options = strMap55;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration60.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration64.setoptions(strMap66);
        kerberosUserConfiguration60.setoptions(strMap66);
        kerberosUserConfiguration0.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray73 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(parameters71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray73);
    }

    @Test
    public void test01357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01357");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test01358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01358");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass16 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01359");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters8);
    }

    @Test
    public void test01360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01360");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test01361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01361");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration16.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration16.options = strMap27;
        kerberosUserConfiguration9.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider33 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
    }

    @Test
    public void test01362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01362");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test01363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01363");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration9.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test01364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01364");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01365");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test01366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01366");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str18 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap23);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider28 = kerberosUserConfiguration27.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration17.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap36);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test01367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01367");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap38);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test01368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01368");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration20.options = strMap26;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration44.setoptions(strMap57);
        java.security.Provider provider62 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap63);
        kerberosUserConfiguration36.setoptions(strMap63);
        kerberosUserConfiguration20.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration20.getoptions();
        java.security.Provider provider68 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap70);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration0.getoptions();
        java.lang.String str74 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test01369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01369");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration20.options = strMap26;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration44.setoptions(strMap57);
        java.security.Provider provider62 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap63);
        kerberosUserConfiguration36.setoptions(strMap63);
        kerberosUserConfiguration20.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration20.getoptions();
        java.security.Provider provider68 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap69;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test01370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01370");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration2.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration2.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration2);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration2.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
    }

    @Test
    public void test01371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01371");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test01372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01372");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = parameters3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters3);
    }

    @Test
    public void test01373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01373");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap44);
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test01374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01374");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap31);
        kerberosUserConfiguration14.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap34);
        kerberosUserConfiguration6.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test01375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01375");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        kerberosUserConfiguration0.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass17 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01376");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test01377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01377");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test01378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01378");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        kerberosUserConfiguration22.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap42);
        kerberosUserConfiguration14.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration46.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration57);
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.options = strMap66;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str69 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap74);
        kerberosUserConfiguration57.options = strMap74;
        kerberosUserConfiguration46.options = strMap74;
        java.security.Provider provider78 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration46.options;
        java.security.Provider provider81 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.setoptions(strMap85);
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider88 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNull(provider88);
    }

    @Test
    public void test01379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01379");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap14);
        java.security.Provider provider16 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration20.options = strMap26;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration44.setoptions(strMap57);
        java.security.Provider provider62 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap63);
        kerberosUserConfiguration36.setoptions(strMap63);
        kerberosUserConfiguration20.setoptions(strMap63);
        kerberosUserConfiguration8.options = strMap63;
        kerberosUserConfiguration0.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray72 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray72);
    }

    @Test
    public void test01380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01380");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test01381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01381");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.options = strMap27;
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration30.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration34.setoptions(strMap36);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration41.options = strMap44;
        kerberosUserConfiguration34.setoptions(strMap44);
        kerberosUserConfiguration30.options = strMap44;
        kerberosUserConfiguration18.options = strMap44;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration13.options = strMap50;
        kerberosUserConfiguration0.setoptions(strMap50);
        java.security.Provider provider53 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider53);
    }

    @Test
    public void test01382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01382");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters22);
    }

    @Test
    public void test01383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01383");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test01384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01384");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
    }

    @Test
    public void test01385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01385");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider53 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters55);
    }

    @Test
    public void test01386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01386");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01387");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.lang.String str4 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test01388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01388");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        kerberosUserConfiguration21.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration21.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration34.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration34.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider45 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        kerberosUserConfiguration34.setoptions(strMap46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap53;
        kerberosUserConfiguration21.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap56);
        java.lang.Class<?> wildcardClass58 = strMap56.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test01389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01389");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test01390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01390");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test01391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01391");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test01392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01392");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01393");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test01394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01394");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test01395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01395");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration27.setoptions(strMap33);
        java.lang.String str35 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap38);
        java.lang.String str40 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test01396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01396");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01397");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider24 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration13.setoptions(strMap25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap32;
        kerberosUserConfiguration0.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider38 = kerberosUserConfiguration37.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration37.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration0.options = strMap45;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test01398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01398");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test01399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01399");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration10.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration10.getParameters();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
    }

    @Test
    public void test01400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01400");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration17.setoptions(strMap24);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration34.options = strMap37;
        java.lang.String str39 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration17.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.options = strMap43;
        java.lang.Class<?> wildcardClass45 = strMap43.getClass();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test01401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01401");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass15 = strMap14.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01402");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test01403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01403");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        kerberosUserConfiguration18.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.lang.String str30 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider38 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.options = strMap40;
        kerberosUserConfiguration1.setoptions(strMap40);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test01404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01404");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass16 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test01405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01405");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        java.security.Provider provider18 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str21 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01406");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass26 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test01407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01407");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.refresh();
        java.lang.String str10 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider18 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration12.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        kerberosUserConfiguration28.setoptions(strMap39);
        kerberosUserConfiguration26.setoptions(strMap39);
        java.security.Provider provider44 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.refresh();
        java.lang.String str51 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap52;
        kerberosUserConfiguration12.options = strMap52;
        kerberosUserConfiguration6.setoptions(strMap52);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass61 = strMap60.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test01408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01408");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.lang.String str19 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.options;
        java.security.Provider provider21 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap24);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap28;
        kerberosUserConfiguration5.setoptions(strMap28);
        kerberosUserConfiguration0.options = strMap28;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters32);
    }

    @Test
    public void test01409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01409");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01410");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider53 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration54.options = strMap57;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration54.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration60);
        kerberosUserConfiguration60.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration60.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration69.options = strMap72;
        kerberosUserConfiguration60.options = strMap72;
        kerberosUserConfiguration54.setoptions(strMap72);
        kerberosUserConfiguration0.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration0.getoptions();
        java.lang.String str78 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test01411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01411");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.options;
        java.security.Provider provider15 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test01412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01412");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration25.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration32.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap43);
        kerberosUserConfiguration32.options = strMap43;
        kerberosUserConfiguration25.setoptions(strMap43);
        kerberosUserConfiguration16.options = strMap43;
        kerberosUserConfiguration0.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.options;
        kerberosUserConfiguration49.setoptions(strMap55);
        java.lang.String str57 = kerberosUserConfiguration49.getType();
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration49.getoptions();
        kerberosUserConfiguration0.setoptions(strMap59);
        java.lang.Class<?> wildcardClass61 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test01413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01413");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test01414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01414");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration42.options = strMap45;
        kerberosUserConfiguration39.options = strMap45;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.lang.String str51 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.options;
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str66 = kerberosUserConfiguration65.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration68.refresh();
        java.lang.String str70 = kerberosUserConfiguration68.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration71.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration73.options = strMap74;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration71.setoptions(strMap76);
        kerberosUserConfiguration68.options = strMap76;
        kerberosUserConfiguration65.setoptions(strMap76);
        kerberosUserConfiguration63.setoptions(strMap76);
        java.security.Provider provider81 = kerberosUserConfiguration63.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration58.setoptions(strMap82);
        kerberosUserConfiguration55.setoptions(strMap82);
        kerberosUserConfiguration39.setoptions(strMap82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration33.options = strMap87;
        javax.security.auth.login.Configuration.Parameters parameters89 = kerberosUserConfiguration33.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration33.getParameters();
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration0.options = strMap92;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(parameters89);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test01415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01415");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass17 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test01416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01416");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration24.options = strMap27;
        kerberosUserConfiguration21.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration45.setoptions(strMap58);
        java.security.Provider provider63 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap64);
        kerberosUserConfiguration37.setoptions(strMap64);
        kerberosUserConfiguration21.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap69;
        java.security.Provider provider71 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
    }

    @Test
    public void test01417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01417");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
    }

    @Test
    public void test01418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01418");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters12);
    }

    @Test
    public void test01419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01419");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.options = strMap20;
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration6.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration6.options = strMap28;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap37);
        kerberosUserConfiguration30.setoptions(strMap37);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration6.setoptions(strMap42);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap46;
        java.lang.Class<?> wildcardClass48 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test01420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01420");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01421");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap33;
        kerberosUserConfiguration1.setoptions(strMap33);
        java.security.Provider provider36 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider36);
    }

    @Test
    public void test01422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01422");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str47 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test01423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01423");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.options = strMap54;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.lang.String str57 = kerberosUserConfiguration51.getType();
        java.lang.String str58 = kerberosUserConfiguration51.getType();
        java.lang.String str59 = kerberosUserConfiguration51.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration1.options = strMap60;
        java.lang.Class<?> wildcardClass62 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test01424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01424");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.options = strMap17;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test01425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01425");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
    }

    @Test
    public void test01426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01426");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01427");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration17.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider31 = kerberosUserConfiguration17.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.lang.String str35 = kerberosUserConfiguration32.getType();
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getoptions();
        kerberosUserConfiguration39.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider50 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getoptions();
        kerberosUserConfiguration39.setoptions(strMap51);
        kerberosUserConfiguration32.setoptions(strMap51);
        kerberosUserConfiguration17.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap55);
        java.security.Provider provider57 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider57);
    }

    @Test
    public void test01428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01428");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
    }

    @Test
    public void test01429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01429");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration0.setoptions(strMap25);
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test01430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01430");
        javax.security.auth.login.Configuration configuration0 = javax.security.auth.login.Configuration.getConfiguration();
        javax.security.auth.login.Configuration.setConfiguration(configuration0);
        javax.security.auth.login.Configuration.Parameters parameters2 = configuration0.getParameters();
        java.lang.String str3 = configuration0.getType();
        java.lang.Class<?> wildcardClass4 = configuration0.getClass();
        org.junit.Assert.assertNotNull(configuration0);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test01431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01431");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(parameters30);
    }

    @Test
    public void test01432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01432");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.setoptions(strMap41);
        java.security.Provider provider43 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration0.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
    }

    @Test
    public void test01433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01433");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = provider8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test01434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01434");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.setoptions(strMap10);
        java.security.Provider provider12 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        kerberosUserConfiguration8.refresh();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        kerberosUserConfiguration8.options = strMap33;
        kerberosUserConfiguration1.setoptions(strMap33);
        java.security.Provider provider40 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration41.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration41.options;
        java.lang.String str49 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str51 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        java.lang.String str55 = kerberosUserConfiguration53.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration56.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap61);
        kerberosUserConfiguration53.options = strMap61;
        kerberosUserConfiguration50.setoptions(strMap61);
        kerberosUserConfiguration50.refresh();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration50.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters67 = kerberosUserConfiguration50.getParameters();
        kerberosUserConfiguration50.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray70 = kerberosUserConfiguration50.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration71.setoptions(strMap74);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str77 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration79.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap82);
        kerberosUserConfiguration71.options = strMap82;
        kerberosUserConfiguration50.setoptions(strMap82);
        kerberosUserConfiguration41.options = strMap82;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider89 = kerberosUserConfiguration88.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration88.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration88.getoptions();
        kerberosUserConfiguration41.setoptions(strMap91);
        kerberosUserConfiguration1.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration1.getoptions();
        java.lang.String str95 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(parameters67);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray70);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test01435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01435");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01436");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        kerberosUserConfiguration5.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.options = strMap25;
        java.lang.String str27 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration5.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration1.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass35 = appConfigurationEntryArray34.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test01437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01437");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass19 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01438");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration5.setoptions(strMap11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.refresh();
        java.lang.String str17 = kerberosUserConfiguration13.getType();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration13.options = strMap21;
        kerberosUserConfiguration5.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration1.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.security.Provider provider34 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration26.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration1.options = strMap39;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test01439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01439");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration8.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.options = strMap15;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test01440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01440");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
    }

    @Test
    public void test01441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01441");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01442");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test01443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01443");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass32 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test01444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01444");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01445");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider95 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNull(provider95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test01446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01446");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        kerberosUserConfiguration12.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration12.getParameters();
        java.lang.String str17 = kerberosUserConfiguration12.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap18;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test01447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01447");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration25.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration32.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap43);
        kerberosUserConfiguration32.options = strMap43;
        kerberosUserConfiguration25.setoptions(strMap43);
        kerberosUserConfiguration16.options = strMap43;
        kerberosUserConfiguration0.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.options;
        kerberosUserConfiguration49.setoptions(strMap55);
        java.lang.String str57 = kerberosUserConfiguration49.getType();
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration49.getoptions();
        kerberosUserConfiguration0.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test01448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01448");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters6);
    }

    @Test
    public void test01449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01449");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01450");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration0.options;
        java.lang.String str62 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test01451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01451");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test01452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01452");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test01453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01453");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration13.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration20.options = strMap23;
        kerberosUserConfiguration13.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration9.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration33.setoptions(strMap40);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration9.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap49;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test01454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01454");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test01455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01455");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test01456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01456");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration11.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.options = strMap25;
        kerberosUserConfiguration19.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap56);
        kerberosUserConfiguration48.options = strMap56;
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration43.setoptions(strMap56);
        java.security.Provider provider61 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap62);
        kerberosUserConfiguration35.setoptions(strMap62);
        kerberosUserConfiguration19.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration19.getoptions();
        java.security.Provider provider67 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration11.options = strMap68;
        kerberosUserConfiguration0.setoptions(strMap68);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str72 = kerberosUserConfiguration71.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration71.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration75.getoptions();
        kerberosUserConfiguration71.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration71.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration81 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider82 = kerberosUserConfiguration81.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration81.getoptions();
        kerberosUserConfiguration71.setoptions(strMap83);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = null;
        kerberosUserConfiguration85.options = strMap86;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration85.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration85.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration71.options = strMap90;
        kerberosUserConfiguration71.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration71.getoptions();
        kerberosUserConfiguration0.setoptions(strMap93);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test01457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01457");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.lang.String str16 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap25);
        kerberosUserConfiguration14.setoptions(strMap25);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        kerberosUserConfiguration14.refresh();
        java.lang.String str31 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap37);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider44 = kerberosUserConfiguration43.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration45.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.options = strMap48;
        kerberosUserConfiguration32.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str52 = kerberosUserConfiguration51.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration54.refresh();
        java.lang.String str56 = kerberosUserConfiguration54.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap62);
        kerberosUserConfiguration54.options = strMap62;
        kerberosUserConfiguration51.setoptions(strMap62);
        kerberosUserConfiguration51.refresh();
        javax.security.auth.login.Configuration.Parameters parameters67 = kerberosUserConfiguration51.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters69 = kerberosUserConfiguration68.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap71);
        kerberosUserConfiguration32.options = strMap71;
        kerberosUserConfiguration14.options = strMap71;
        kerberosUserConfiguration0.options = strMap71;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters67);
        org.junit.Assert.assertNull(parameters69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test01458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01458");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.setoptions(strMap16);
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(provider20);
    }

    @Test
    public void test01459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01459");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test01460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01460");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
    }

    @Test
    public void test01461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01461");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        kerberosUserConfiguration4.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration16.options = strMap24;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration0.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
    }

    @Test
    public void test01462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01462");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test01463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01463");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test01464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01464");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test01465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01465");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        kerberosUserConfiguration8.setoptions(strMap19);
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration8.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration8.getParameters();
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration29.setoptions(strMap32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap40);
        kerberosUserConfiguration29.options = strMap40;
        kerberosUserConfiguration8.setoptions(strMap40);
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration8.options;
        java.lang.String str47 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration0.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test01466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01466");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test01467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01467");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap20);
        kerberosUserConfiguration9.setoptions(strMap20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        kerberosUserConfiguration9.refresh();
        java.lang.String str26 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap37;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap45);
        kerberosUserConfiguration28.options = strMap45;
        java.lang.String str48 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration9.options = strMap49;
        kerberosUserConfiguration0.setoptions(strMap49);
        java.lang.String str52 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass55 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test01468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01468");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str53 = kerberosUserConfiguration0.getType();
        java.security.Provider provider54 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(provider54);
    }

    @Test
    public void test01469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01469");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01470");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.setoptions(strMap17);
        java.security.Provider provider19 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration15.getAppConfigurationEntry("");
        kerberosUserConfiguration15.refresh();
        java.lang.String str25 = kerberosUserConfiguration15.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration15.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        java.lang.String str30 = kerberosUserConfiguration28.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap39);
        kerberosUserConfiguration28.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration28.getoptions();
        java.lang.String str45 = kerberosUserConfiguration28.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration46.refresh();
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration46.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration46.getParameters();
        kerberosUserConfiguration46.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray66 = kerberosUserConfiguration46.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration67.setoptions(strMap70);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str73 = kerberosUserConfiguration72.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration72.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration72.setoptions(strMap78);
        kerberosUserConfiguration67.options = strMap78;
        kerberosUserConfiguration46.setoptions(strMap78);
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration46.options;
        kerberosUserConfiguration28.options = strMap84;
        kerberosUserConfiguration15.setoptions(strMap84);
        kerberosUserConfiguration0.options = strMap84;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray66);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test01471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01471");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test01472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01472");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters14);
    }

    @Test
    public void test01473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01473");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str45 = kerberosUserConfiguration0.getType();
        java.security.Provider provider46 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(provider46);
    }

    @Test
    public void test01474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01474");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass18 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test01475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01475");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap29);
        kerberosUserConfiguration21.options = strMap29;
        kerberosUserConfiguration18.setoptions(strMap29);
        kerberosUserConfiguration16.setoptions(strMap29);
        java.security.Provider provider34 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap35);
        kerberosUserConfiguration8.setoptions(strMap35);
        java.lang.String str38 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.options = strMap42;
        java.lang.String str44 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration39.options;
        java.lang.String str47 = kerberosUserConfiguration39.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration39.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap50);
        kerberosUserConfiguration0.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test01476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01476");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.lang.String str4 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap59;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test01477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01477");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration12.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration12.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration25.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap33);
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass38 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test01478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01478");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray82 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters83 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray82);
        org.junit.Assert.assertNull(parameters83);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
    }

    @Test
    public void test01479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01479");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider17 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration6.setoptions(strMap23);
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test01480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01480");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters8);
    }

    @Test
    public void test01481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01481");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration13.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        kerberosUserConfiguration13.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration13.getParameters();
        java.lang.String str28 = kerberosUserConfiguration13.getType();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration13.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap37);
        kerberosUserConfiguration0.setoptions(strMap37);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test01482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01482");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.options = strMap11;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.lang.String str14 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str16 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration18.refresh();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap26);
        kerberosUserConfiguration18.options = strMap26;
        kerberosUserConfiguration15.setoptions(strMap26);
        kerberosUserConfiguration15.refresh();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration15.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration15.getParameters();
        kerberosUserConfiguration15.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration15.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration36.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap47);
        kerberosUserConfiguration36.options = strMap47;
        kerberosUserConfiguration15.setoptions(strMap47);
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap52);
        kerberosUserConfiguration0.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration56.refresh();
        java.lang.String str60 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration56.options = strMap61;
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap64;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        java.lang.String str68 = kerberosUserConfiguration66.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration69.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration69);
        kerberosUserConfiguration69.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.setoptions(strMap77);
        kerberosUserConfiguration66.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration66.options;
        kerberosUserConfiguration66.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration66.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider85 = kerberosUserConfiguration84.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration84.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration84.getoptions();
        kerberosUserConfiguration66.setoptions(strMap87);
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider90 = kerberosUserConfiguration66.getProvider();
        kerberosUserConfiguration66.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration0.setoptions(strMap92);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(provider85);
        org.junit.Assert.assertNull(parameters86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(provider90);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test01483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01483");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration4.getAppConfigurationEntry("");
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test01484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01484");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.setoptions(strMap41);
        java.security.Provider provider43 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration0.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        java.lang.String str51 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str54 = kerberosUserConfiguration53.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap59);
        kerberosUserConfiguration48.setoptions(strMap59);
        kerberosUserConfiguration0.setoptions(strMap59);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(parameters64);
    }

    @Test
    public void test01485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01485");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test01486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01486");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str89 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass90 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test01487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01487");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = parameters6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
    }

    @Test
    public void test01488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01488");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test01489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01489");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.options;
        java.security.Provider provider15 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test01490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01490");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.options = strMap21;
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider23);
    }

    @Test
    public void test01491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01491");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test01492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01492");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test01493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01493");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str16 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration15.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider26 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration15.setoptions(strMap27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap34;
        kerberosUserConfiguration0.options = strMap34;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap43);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider48 = kerberosUserConfiguration47.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration49.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration37.setoptions(strMap54);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration60.setoptions(strMap62);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration60.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration67.options = strMap70;
        kerberosUserConfiguration60.setoptions(strMap70);
        kerberosUserConfiguration56.options = strMap70;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str76 = kerberosUserConfiguration75.getType();
        kerberosUserConfiguration75.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration56.options = strMap78;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration82.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = null;
        kerberosUserConfiguration84.options = strMap85;
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration82.setoptions(strMap87);
        kerberosUserConfiguration80.setoptions(strMap87);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray91 = kerberosUserConfiguration80.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration80.getoptions();
        kerberosUserConfiguration56.setoptions(strMap92);
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap95);
        kerberosUserConfiguration0.setoptions(strMap95);
        java.lang.String str98 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters99 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertNull(parameters99);
    }

    @Test
    public void test01494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01494");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider43 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration45.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.refresh();
        java.lang.String str49 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider57 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration51.setoptions(strMap58);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration86.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration86.refresh();
        java.lang.String str90 = kerberosUserConfiguration86.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.options = strMap91;
        kerberosUserConfiguration51.options = strMap91;
        kerberosUserConfiguration45.setoptions(strMap91);
        kerberosUserConfiguration0.setoptions(strMap91);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray98 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray98);
    }

    @Test
    public void test01495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01495");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration12.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.lang.String str24 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str39 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        kerberosUserConfiguration38.setoptions(strMap49);
        kerberosUserConfiguration36.setoptions(strMap49);
        java.security.Provider provider54 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap55);
        kerberosUserConfiguration28.setoptions(strMap55);
        kerberosUserConfiguration12.setoptions(strMap55);
        kerberosUserConfiguration0.options = strMap55;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test01496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01496");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap45;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass49 = strMap48.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test01497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01497");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01498");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test01499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01499");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration11.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider22 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration11.setoptions(strMap23);
        kerberosUserConfiguration0.setoptions(strMap23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap32;
        java.lang.String str34 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test01500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test01500");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.setoptions(strMap41);
        java.security.Provider provider43 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration0.options = strMap44;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration47.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration47.getParameters();
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray67 = kerberosUserConfiguration47.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration68.setoptions(strMap71);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str74 = kerberosUserConfiguration73.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration73.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap79);
        kerberosUserConfiguration68.options = strMap79;
        kerberosUserConfiguration47.setoptions(strMap79);
        kerberosUserConfiguration0.setoptions(strMap79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray67);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strMap79);
    }
}

